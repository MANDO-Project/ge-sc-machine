{"ast":null,"code":"/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*',\n\n    /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' + 'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, TPLABEL]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: ['self', TPID, hljs.QUOTE_STRING_MODE,\n    /* for pos section at bottom */\n    TPLABEL]\n  };\n  return {\n    name: 'TP',\n    keywords: {\n      keyword: 'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' + 'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' + 'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' + 'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' + 'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' + 'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\n      literal: 'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\n    },\n    contains: [TPDATA, TPIO, {\n      className: 'keyword',\n      begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n    }, {\n      /* this is for cases like ,CALL */\n      className: 'keyword',\n      begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n    }, {\n      /* this is for cases like CNT100 where the default lexemes do not\n       * separate the keyword and the number */\n      className: 'keyword',\n      begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n    }, {\n      /* to catch numbers that do not have a word boundary on the left */\n      className: 'number',\n      begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n      relevance: 0\n    }, hljs.COMMENT('//', '[;$]'), hljs.COMMENT('!', '[;$]'), hljs.COMMENT('--eg:', '$'), hljs.QUOTE_STRING_MODE, {\n      className: 'string',\n      begin: '\\'',\n      end: '\\''\n    }, hljs.C_NUMBER_MODE, {\n      className: 'variable',\n      begin: '\\\\$[A-Za-z0-9_]+'\n    }]\n  };\n}\n\nmodule.exports = tp;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/tp.js"],"names":["tp","hljs","TPID","className","begin","relevance","TPLABEL","TPDATA","end","contains","TPIO","QUOTE_STRING_MODE","name","keywords","keyword","literal","COMMENT","C_NUMBER_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,EAAT,CAAYC,IAAZ,EAAkB;AAChB,QAAMC,IAAI,GAAG;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE,aAFI;;AAEW;AACtBC,IAAAA,SAAS,EAAE;AAHA,GAAb;AAKA,QAAMC,OAAO,GAAG;AACdH,IAAAA,SAAS,EAAE,QADG;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAhB;AAIA,QAAMG,MAAM,GAAG;AACbJ,IAAAA,SAAS,EAAE,UADE;AAEbC,IAAAA,KAAK,EAAE,sEACP,yDAHa;AAIbI,IAAAA,GAAG,EAAE,KAJQ;AAKbC,IAAAA,QAAQ,EAAE,CACR,MADQ,EAERP,IAFQ,EAGRI,OAHQ;AALG,GAAf;AAWA,QAAMI,IAAI,GAAG;AACXP,IAAAA,SAAS,EAAE,UADA;AAEXC,IAAAA,KAAK,EAAE,4CAFI;AAGXI,IAAAA,GAAG,EAAE,KAHM;AAIXC,IAAAA,QAAQ,EAAE,CACR,MADQ,EAERP,IAFQ,EAGRD,IAAI,CAACU,iBAHG;AAGgB;AACxBL,IAAAA,OAJQ;AAJC,GAAb;AAYA,SAAO;AACLM,IAAAA,IAAI,EAAE,IADD;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,0EACA,sEADA,GAEA,qEAFA,GAGA,iEAHA,GAIA,wEAJA,GAKA,yCAPM;AAQRC,MAAAA,OAAO,EACL;AATM,KAFL;AAaLN,IAAAA,QAAQ,EAAE,CACRF,MADQ,EAERG,IAFQ,EAGR;AACEP,MAAAA,SAAS,EAAE,SADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAHQ,EAOR;AACE;AACAD,MAAAA,SAAS,EAAE,SAFb;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAPQ,EAYR;AACE;AACR;AACQD,MAAAA,SAAS,EAAE,SAHb;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAZQ,EAkBR;AACE;AACAD,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,KAAK,EAAE,4DAHT;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAlBQ,EAwBRJ,IAAI,CAACe,OAAL,CAAa,IAAb,EAAmB,MAAnB,CAxBQ,EAyBRf,IAAI,CAACe,OAAL,CAAa,GAAb,EAAkB,MAAlB,CAzBQ,EA0BRf,IAAI,CAACe,OAAL,CAAa,OAAb,EAAsB,GAAtB,CA1BQ,EA2BRf,IAAI,CAACU,iBA3BG,EA4BR;AACER,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEI,MAAAA,GAAG,EAAE;AAHP,KA5BQ,EAiCRP,IAAI,CAACgB,aAjCG,EAkCR;AACEd,MAAAA,SAAS,EAAE,UADb;AAEEC,MAAAA,KAAK,EAAE;AAFT,KAlCQ;AAbL,GAAP;AAqDD;;AAEDc,MAAM,CAACC,OAAP,GAAiBnB,EAAjB","sourcesContent":["/*\nLanguage: TP\nAuthor: Jay Strybis <jay.strybis@gmail.com>\nDescription: FANUC TP programming language (TPP).\n*/\n\nfunction tp(hljs) {\n  const TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  };\n  const TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  const TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|' +\n    'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  const TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[',\n    end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  return {\n    name: 'TP',\n    keywords: {\n      keyword:\n        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\n        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\n        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\n        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\n        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\n        'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\n      literal:\n        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = tp;\n"]},"metadata":{},"sourceType":"script"}