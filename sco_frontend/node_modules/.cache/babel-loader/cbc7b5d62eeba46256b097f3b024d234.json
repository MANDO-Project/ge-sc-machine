{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _readOnlyError from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\src\\\\components\\\\SH_code.js\";\nimport React, { Component } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { coy } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nvar SyntaxHighlighter_code = /*#__PURE__*/function (_Component) {\n  _inherits(SyntaxHighlighter_code, _Component);\n\n  function SyntaxHighlighter_code() {\n    _classCallCheck(this, SyntaxHighlighter_code);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SyntaxHighlighter_code).apply(this, arguments));\n  }\n\n  _createClass(SyntaxHighlighter_code, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var node_of_graph = this.props.node;\n      var array = [];\n      var arrayerrorline = [];\n      node_of_graph.forEach(function (node, index) {\n        if (node.error == 1) {\n          [].concat(_toConsumableArray(array), _toConsumableArray(node.codes_lines)), _readOnlyError(\"array\");\n          _toConsumableArray(new Set(array)), _readOnlyError(\"arrayerrorline\");\n        }\n      });\n      var linesToHighlight = arrayerrorline,\n          startingLineNumber = 1;\n      return /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n        startingLineNumber: startingLineNumber,\n        language: \"solidity\",\n        style: coy,\n        className: \"highlight\",\n        showLineNumbers: true,\n        wrapLines: true,\n        lineProps: function lineProps(lineNumber) {\n          var style = {\n            display: \"block\",\n            width: \"fit-content\"\n          };\n\n          if (linesToHighlight.includes(lineNumber)) {\n            style.backgroundColor = \"#ffe7a4\";\n          }\n\n          if (_this.props.ClickNode.includes(lineNumber)) {\n            style.backgroundColor = \"#DC143C\";\n          }\n\n          return {\n            style: style\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, this.props.codeString);\n    }\n  }]);\n\n  return SyntaxHighlighter_code;\n}(Component);\n\nexport { SyntaxHighlighter_code as default };","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/src/components/SH_code.js"],"names":["React","Component","Prism","SyntaxHighlighter","coy","SyntaxHighlighter_code","node_of_graph","props","node","array","arrayerrorline","forEach","index","error","codes_lines","Set","linesToHighlight","startingLineNumber","lineNumber","style","display","width","includes","backgroundColor","ClickNode","codeString"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAAQC,GAAR,QAAkB,gDAAlB;;IACqBC,sB;;;;;;;;;;;6BACT;AAAA;;AAEJ,UAAMC,aAAa,GAAC,KAAKC,KAAL,CAAWC,IAA/B;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,cAAc,GAAG,EAAvB;AACAJ,MAAAA,aAAa,CAACK,OAAd,CAAsB,UAACH,IAAD,EAAOI,KAAP,EAAiB;AACrC,YAAIJ,IAAI,CAACK,KAAL,IAAc,CAAlB,EAAqB;AACnB,uCAAYJ,KAAZ,sBAAsBD,IAAI,CAACM,WAA3B;AACA,6BAAqB,IAAIC,GAAJ,CAAQN,KAAR,CAArB;AACD;AACF,OALD;AAMA,UAAMO,gBAAgB,GAAGN,cAAzB;AAAA,UAAwCO,kBAAkB,GAAG,CAA7D;AAGA,0BACI,oBAAC,iBAAD;AACM,QAAA,kBAAkB,EAAEA,kBAD1B;AAEM,QAAA,QAAQ,EAAC,UAFf;AAGM,QAAA,KAAK,EAAEb,GAHb;AAIM,QAAA,SAAS,EAAC,WAJhB;AAKM,QAAA,eAAe,MALrB;AAMM,QAAA,SAAS,MANf;AAOM,QAAA,SAAS,EAAE,mBAACc,UAAD,EAAgB;AACvB,cAAMC,KAAK,GAAG;AAAEC,YAAAA,OAAO,EAAE,OAAX;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WAAd;;AACA,cAAIL,gBAAgB,CAACM,QAAjB,CAA0BJ,UAA1B,CAAJ,EAA2C;AACvCC,YAAAA,KAAK,CAACI,eAAN,GAAwB,SAAxB;AACH;;AACD,cAAG,KAAI,CAAChB,KAAL,CAAWiB,SAAX,CAAqBF,QAArB,CAA8BJ,UAA9B,CAAH,EAA6C;AAC3CC,YAAAA,KAAK,CAACI,eAAN,GAAwB,SAAxB;AACD;;AACD,iBAAO;AAAEJ,YAAAA,KAAK,EAALA;AAAF,WAAP;AACH,SAhBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBO,KAAKZ,KAAL,CAAWkB,UAjBlB,CADJ;AAsBH;;;;EArC+CxB,S;;SAA/BI,sB","sourcesContent":["import React,{Component} from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport {coy} from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nexport default class SyntaxHighlighter_code extends Component{\r\n    render(){\r\n        \r\n        const node_of_graph=this.props.node;\r\n        const array = []\r\n        const arrayerrorline = []\r\n        node_of_graph.forEach((node, index) => {\r\n          if (node.error == 1) {\r\n            array = [...array, ...node.codes_lines]\r\n            arrayerrorline = [...new Set(array)];\r\n          }\r\n        })\r\n        const linesToHighlight = arrayerrorline,startingLineNumber = 1;\r\n  \r\n        \r\n        return(\r\n            <SyntaxHighlighter\r\n                  startingLineNumber={startingLineNumber}\r\n                  language='solidity'\r\n                  style={coy}\r\n                  className='highlight'\r\n                  showLineNumbers\r\n                  wrapLines\r\n                  lineProps={(lineNumber) => {\r\n                      const style = { display: \"block\", width: \"fit-content\" };\r\n                      if (linesToHighlight.includes(lineNumber)) {\r\n                          style.backgroundColor = \"#ffe7a4\";\r\n                      }\r\n                      if(this.props.ClickNode.includes(lineNumber)){\r\n                        style.backgroundColor = \"#DC143C\";\r\n                      }\r\n                      return { style };\r\n                  }}>\r\n                  {this.props.codeString}\r\n              </SyntaxHighlighter>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}