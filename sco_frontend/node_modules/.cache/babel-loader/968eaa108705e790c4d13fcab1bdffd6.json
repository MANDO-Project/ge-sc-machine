{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: common, protocols\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\n\nfunction http(hljs) {\n  const VERSION = 'HTTP/(2|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: {\n      contains: [{\n        className: \"punctuation\",\n        begin: /: /,\n        relevance: 0,\n        starts: {\n          end: '$',\n          relevance: 0\n        }\n      }]\n    }\n  };\n  const HEADERS_AND_BODY = [HEADER, {\n    begin: '\\\\n\\\\n',\n    starts: {\n      subLanguage: [],\n      endsWithParent: true\n    }\n  }];\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: /\\S/,\n    contains: [// response\n    {\n      begin: '^(?=' + VERSION + \" \\\\d{3})\",\n      end: /$/,\n      contains: [{\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'number',\n        begin: '\\\\b\\\\d{3}\\\\b'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    }, // request\n    {\n      begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n      end: /$/,\n      contains: [{\n        className: 'string',\n        begin: ' ',\n        end: ' ',\n        excludeBegin: true,\n        excludeEnd: true\n      }, {\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'keyword',\n        begin: '[A-Z]+'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    }, // to allow headers to work even without a preamble\n    hljs.inherit(HEADER, {\n      relevance: 0\n    })]\n  };\n}\n\nmodule.exports = http;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/http.js"],"names":["source","re","concat","args","joined","map","x","join","http","hljs","VERSION","HEADER_NAME","HEADER","className","begin","starts","contains","relevance","end","HEADERS_AND_BODY","subLanguage","endsWithParent","name","aliases","illegal","excludeBegin","excludeEnd","inherit","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: common, protocols\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  const VERSION = 'HTTP/(2|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: {\n      contains: [\n        {\n          className: \"punctuation\",\n          begin: /: /,\n          relevance: 0,\n          starts: {\n            end: '$',\n            relevance: 0\n          }\n        }\n      ]\n    }\n  };\n  const HEADERS_AND_BODY = [\n    HEADER,\n    {\n      begin: '\\\\n\\\\n',\n      starts: { subLanguage: [], endsWithParent: true }\n    }\n  ];\n\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: /\\S/,\n    contains: [\n      // response\n      {\n        begin: '^(?=' + VERSION + \" \\\\d{3})\",\n        end: /$/,\n        contains: [\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'number', begin: '\\\\b\\\\d{3}\\\\b'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // request\n      {\n        begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n        end: /$/,\n        contains: [\n          {\n            className: 'string',\n            begin: ' ',\n            end: ' ',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // to allow headers to work even without a preamble\n      hljs.inherit(HEADER, {\n        relevance: 0\n      })\n    ]\n  };\n}\n\nmodule.exports = http;\n"]},"metadata":{},"sourceType":"script"}