{"ast":null,"code":"/*\nLanguage: Mizar\nDescription: The Mizar Language is a formal language derived from the mathematical vernacular.\nAuthor: Kelley van Evert <kelleyvanevert@gmail.com>\nWebsite: http://mizar.org/language/\nCategory: scientific\n*/\nfunction mizar(hljs) {\n  return {\n    name: 'Mizar',\n    keywords: 'environ vocabularies notations constructors definitions ' + 'registrations theorems schemes requirements begin end definition ' + 'registration cluster existence pred func defpred deffunc theorem ' + 'proof let take assume then thus hence ex for st holds consider ' + 'reconsider such that and in provided of as from be being by means ' + 'equals implies iff redefine define now not or attr is mode ' + 'suppose per cases set thesis contradiction scheme reserve struct ' + 'correctness compatibility coherence symmetry assymetry ' + 'reflexivity irreflexivity connectedness uniqueness commutativity ' + 'idempotence involutiveness projectivity',\n    contains: [hljs.COMMENT('::', '$')]\n  };\n}\n\nmodule.exports = mizar;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/mizar.js"],"names":["mizar","hljs","name","keywords","contains","COMMENT","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACnB,SAAO;AACLC,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,QAAQ,EACN,6DACA,mEADA,GAEA,mEAFA,GAGA,iEAHA,GAIA,oEAJA,GAKA,6DALA,GAMA,mEANA,GAOA,yDAPA,GAQA,mEARA,GASA,yCAZG;AAaLC,IAAAA,QAAQ,EAAE,CACRH,IAAI,CAACI,OAAL,CAAa,IAAb,EAAmB,GAAnB,CADQ;AAbL,GAAP;AAiBD;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,KAAjB","sourcesContent":["/*\nLanguage: Mizar\nDescription: The Mizar Language is a formal language derived from the mathematical vernacular.\nAuthor: Kelley van Evert <kelleyvanevert@gmail.com>\nWebsite: http://mizar.org/language/\nCategory: scientific\n*/\n\nfunction mizar(hljs) {\n  return {\n    name: 'Mizar',\n    keywords:\n      'environ vocabularies notations constructors definitions ' +\n      'registrations theorems schemes requirements begin end definition ' +\n      'registration cluster existence pred func defpred deffunc theorem ' +\n      'proof let take assume then thus hence ex for st holds consider ' +\n      'reconsider such that and in provided of as from be being by means ' +\n      'equals implies iff redefine define now not or attr is mode ' +\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\n      'correctness compatibility coherence symmetry assymetry ' +\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\n      'idempotence involutiveness projectivity',\n    contains: [\n      hljs.COMMENT('::', '$')\n    ]\n  };\n}\n\nmodule.exports = mizar;\n"]},"metadata":{},"sourceType":"script"}