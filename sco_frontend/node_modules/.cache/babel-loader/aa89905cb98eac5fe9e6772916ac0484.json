{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar palette = [\"#5DA5DA\", \"#60BD68\", \"#B2912F\", \"#F15854\", \"#DECF3F\", \"#FAA43A\", \"#B276B2\", \"#F17CB0\", \"#4D4D4D\"];\n/*\n\tDefault node and edge transformation for NeoCypher,\n\tclass has 2 functions: node() and edge() which transform data from Neo4j format into Sigma.\n\n\tAlso it iterates colors assignments from palette based on node.label and edge.type.\n*/\n\nvar NeoGraphItemsProducers = /*#__PURE__*/function () {\n  function NeoGraphItemsProducers() {\n    _classCallCheck(this, NeoGraphItemsProducers);\n\n    this._currentColor = 0;\n    this._colorsMap = {};\n  }\n\n  _createClass(NeoGraphItemsProducers, [{\n    key: \"node\",\n    value: function node(_node) {\n      return {\n        id: _node.id,\n        label: _node.properties.name,\n        x: Math.random(),\n        y: Math.random(),\n        size: 1,\n        color: this.colorsMap(_node.labels[0]),\n        neo4j_labels: _node.labels,\n        neo4j_data: _node.properties\n      };\n    }\n  }, {\n    key: \"edge\",\n    value: function edge(_edge) {\n      return {\n        id: _edge.id,\n        label: _edge.type,\n        source: _edge.startNode,\n        target: _edge.endNode,\n        color: this.colorsMap(_edge.type),\n        neo4j_type: _edge.type,\n        neo4j_data: _edge.properties\n      };\n    }\n  }, {\n    key: \"colorsMap\",\n    value: function colorsMap(label) {\n      var color = this._colorsMap[label];\n\n      if (!color) {\n        color = palette[this._currentColor++ % palette.length];\n        this._colorsMap[label] = color;\n      }\n\n      return color;\n    }\n  }]);\n\n  return NeoGraphItemsProducers;\n}();\n\nexport default NeoGraphItemsProducers;","map":null,"metadata":{},"sourceType":"module"}