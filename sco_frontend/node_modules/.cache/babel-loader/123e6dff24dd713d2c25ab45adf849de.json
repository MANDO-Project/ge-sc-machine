{"ast":null,"code":"var Sigma = function (e) {\n  var t = {};\n\n  function r(n) {\n    if (t[n]) return t[n].exports;\n    var i = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n  }\n\n  return r.m = e, r.c = t, r.d = function (e, t, n) {\n    r.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, r.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var i in e) {\n      r.d(n, i, function (t) {\n        return e[t];\n      }.bind(null, i));\n    }\n    return n;\n  }, r.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return r.d(t, \"a\", t), t;\n  }, r.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, r.p = \"\", r(r.s = 181);\n}({\n  181: function _(e, t, r) {\n    r(182), e.exports = r(183);\n  },\n  182: function _(e, t, r) {\n    (function () {\n      (function (r) {\n        \"use strict\";\n\n        var n = {\n          getModelTags: function getModelTags(e) {\n            var t,\n                r = e.getElementsByTagName(\"attributes\"),\n                n = {},\n                i = r.length;\n\n            for (t = 0; t < i; t++) {\n              n[r[t].getAttribute(\"class\")] = r[t].childNodes;\n            }\n\n            return n;\n          },\n          nodeListToArray: function nodeListToArray(e) {\n            for (var t = [], r = 0, n = e.length; r < n; ++r) {\n              \"#text\" !== e[r].nodeName && t.push(e[r]);\n            }\n\n            return t;\n          },\n          nodeListEach: function nodeListEach(e, t) {\n            for (var r = 0, n = e.length; r < n; ++r) {\n              \"#text\" !== e[r].nodeName && t(e[r]);\n            }\n          },\n          nodeListToHash: function nodeListToHash(e, t) {\n            for (var r = {}, n = 0; n < e.length; n++) {\n              if (\"#text\" !== e[n].nodeName) {\n                var i = t(e[n]);\n                r[i.key] = i.value;\n              }\n            }\n\n            return r;\n          },\n          namedNodeMapToObject: function namedNodeMapToObject(e) {\n            for (var t = {}, r = 0; r < e.length; r++) {\n              t[e[r].name] = e[r].value;\n            }\n\n            return t;\n          },\n          getFirstElementByTagNS: function getFirstElementByTagNS(e, t, r) {\n            var n = e.getElementsByTagName(t + \":\" + r)[0];\n            return n || (n = e.getElementsByTagNameNS(t, r)[0]), n || (n = e.getElementsByTagName(r)[0]), n;\n          },\n          getAttributeNS: function getAttributeNS(e, t, n) {\n            var i = e.getAttribute(t + \":\" + n);\n            return i === r && (i = e.getAttributeNS(t, n)), i === r && (i = e.getAttribute(n)), i;\n          },\n          enforceType: function enforceType(e, t) {\n            switch (e) {\n              case \"boolean\":\n                t = \"true\" === t;\n                break;\n\n              case \"integer\":\n              case \"long\":\n              case \"float\":\n              case \"double\":\n                t = +t;\n                break;\n\n              case \"liststring\":\n                t = t ? t.split(\"|\") : [];\n            }\n\n            return t;\n          },\n          getRGB: function getRGB(e) {\n            return e[3] ? \"rgba(\" + e.join(\",\") + \")\" : \"rgb(\" + e.slice(0, -1).join(\",\") + \")\";\n          }\n        };\n\n        function i(e) {\n          var t = {};\n          t.els = {\n            root: e.getElementsByTagName(\"gexf\")[0],\n            graph: e.getElementsByTagName(\"graph\")[0],\n            meta: e.getElementsByTagName(\"meta\")[0],\n            nodes: e.getElementsByTagName(\"node\"),\n            edges: e.getElementsByTagName(\"edge\"),\n            model: n.getModelTags(e)\n          }, t.hasViz = !!n.getAttributeNS(t.els.root, \"xmlns\", \"viz\"), t.version = t.els.root.getAttribute(\"version\") || \"1.0\", t.mode = t.els.graph.getAttribute(\"mode\") || \"static\";\n          var r = t.els.graph.getAttribute(\"defaultedgetype\");\n\n          function i(e) {\n            var r = [];\n            return t.els.model[e] && n.nodeListEach(t.els.model[e], function (e) {\n              var t = {\n                id: e.getAttribute(\"id\") || e.getAttribute(\"for\"),\n                type: e.getAttribute(\"type\") || \"string\",\n                title: e.getAttribute(\"title\") || \"\"\n              },\n                  i = n.nodeListToArray(e.childNodes);\n              i.length > 0 && (t.defaultValue = i[0].textContent), r.push(t);\n            }), r.length > 0 && r;\n          }\n\n          function o(e, t) {\n            var r = {},\n                i = t.getElementsByTagName(\"attvalue\"),\n                o = n.nodeListToHash(i, function (e) {\n              var t = n.namedNodeMapToObject(e.attributes);\n              return {\n                key: t.id || t.for,\n                value: t.value\n              };\n            });\n            return e.map(function (e) {\n              r[e.id] = !(e.id in o) && \"defaultValue\" in e ? n.enforceType(e.type, e.defaultValue) : n.enforceType(e.type, o[e.id]);\n            }), r;\n          }\n\n          t.defaultEdgetype = r || \"undirected\";\n          var a,\n              s,\n              u,\n              l = i(\"node\"),\n              g = i(\"edge\"),\n              d = {\n            version: t.version,\n            mode: t.mode,\n            defaultEdgeType: t.defaultEdgetype,\n            meta: (u = {}, t.els.meta ? (u.lastmodifieddate = t.els.meta.getAttribute(\"lastmodifieddate\"), n.nodeListEach(t.els.meta.childNodes, function (e) {\n              u[e.tagName.toLowerCase()] = e.textContent;\n            }), u) : u),\n            model: {},\n            nodes: (a = l, s = [], n.nodeListEach(t.els.nodes, function (e) {\n              var r = {\n                id: e.getAttribute(\"id\"),\n                label: e.getAttribute(\"label\") || \"\"\n              };\n              a && (r.attributes = o(a, e)), t.hasViz && (r.viz = function (e) {\n                var t = {},\n                    r = n.getFirstElementByTagNS(e, \"viz\", \"color\");\n\n                if (r) {\n                  var i = [\"r\", \"g\", \"b\", \"a\"].map(function (e) {\n                    return r.getAttribute(e);\n                  });\n                  t.color = n.getRGB(i);\n                }\n\n                var o = n.getFirstElementByTagNS(e, \"viz\", \"position\");\n                o && (t.position = {}, [\"x\", \"y\", \"z\"].map(function (e) {\n                  t.position[e] = +o.getAttribute(e);\n                }));\n                var a = n.getFirstElementByTagNS(e, \"viz\", \"size\");\n                a && (t.size = +a.getAttribute(\"value\"));\n                var s = n.getFirstElementByTagNS(e, \"viz\", \"shape\");\n                return s && (t.shape = s.getAttribute(\"value\")), t;\n              }(e)), s.push(function (e) {\n                var t = {\n                  id: e.id,\n                  label: e.label\n                };\n                return e.viz && (t.viz = e.viz), e.attributes && (t.attributes = e.attributes), t;\n              }(r));\n            }), s),\n            edges: function (e, r) {\n              var i = [];\n              return n.nodeListEach(t.els.edges, function (a) {\n                var s = n.namedNodeMapToObject(a.attributes);\n                \"type\" in s || (s.type = r), e && (s.attributes = o(e, a)), t.hasViz && (s.viz = function (e) {\n                  var t = {},\n                      r = n.getFirstElementByTagNS(e, \"viz\", \"color\");\n\n                  if (r) {\n                    var i = [\"r\", \"g\", \"b\", \"a\"].map(function (e) {\n                      return r.getAttribute(e);\n                    });\n                    t.color = n.getRGB(i);\n                  }\n\n                  var o = n.getFirstElementByTagNS(e, \"viz\", \"shape\");\n                  o && (t.shape = o.getAttribute(\"value\"));\n                  var a = n.getFirstElementByTagNS(e, \"viz\", \"thickness\");\n                  a && (t.thickness = +a.getAttribute(\"value\"));\n                  return t;\n                }(a)), i.push(function (e) {\n                  var t = {\n                    id: e.id,\n                    type: e.type || \"undirected\",\n                    label: e.label || \"\",\n                    source: e.source,\n                    target: e.target,\n                    weight: +e.weight || 1\n                  };\n                  return e.viz && (t.viz = e.viz), e.attributes && (t.attributes = e.attributes), t;\n                }(s));\n              }), i;\n            }(g, t.defaultEdgetype)\n          };\n          return l && (d.model.node = l), g && (d.model.edge = g), d;\n        }\n\n        function o(e, t) {\n          var r = function () {\n            if (window.XMLHttpRequest) return new XMLHttpRequest();\n            var e, t;\n            if (window.ActiveXObject) for (t in e = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"]) {\n              try {\n                return new ActiveXObject(e[t]);\n              } catch (e) {}\n            }\n            return null;\n          }();\n\n          if (!r) throw \"XMLHttpRequest not supported, cannot load the file.\";\n          var n,\n              i = \"function\" == typeof t;\n          return r.overrideMimeType ? (r.overrideMimeType(\"text/xml\"), n = function n(e) {\n            return e.responseXML;\n          }) : n = function n(e) {\n            return new DOMParser().parseFromString(e.responseText, \"application/xml\");\n          }, r.open(\"GET\", e, i), i && (r.onreadystatechange = function () {\n            4 === r.readyState && t(n(r));\n          }), r.send(), i ? r : n(r);\n        }\n\n        if (void 0 !== this.gexf) throw 'gexf: error - a variable called \"gexf\" already exists in the global scope';\n        this.gexf = {\n          parse: function parse(e) {\n            return i(e);\n          },\n          fetch: function fetch(e, t) {\n            return \"function\" == typeof t ? o(e, function (e) {\n              t(i(e));\n            }) : i(o(e));\n          },\n          version: \"0.1.1\"\n        }, this.exports !== t && (e.exports = this.gexf);\n      }).call(window);\n    }).call(window);\n  },\n  183: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.parsers\");\n        var t = 0;\n\n        sigma.parsers.gexf = function (e, r, n) {\n          var i, o, a, s;\n\n          function u(e) {\n            for (a = e.nodes, i = 0, o = a.length; i < o; i++) {\n              (s = a[i]).id = s.id, s.viz && \"object\" == typeof s.viz && (s.viz.position && \"object\" == typeof s.viz.position && (s.x = s.viz.position.x, s.y = -s.viz.position.y), s.size = s.viz.size, s.color = s.viz.color, s.viz.shape && (s.type = s.viz.shape));\n            }\n\n            for (a = e.edges, i = 0, o = a.length; i < o; i++) {\n              (s = a[i]).id = \"string\" == typeof s.id ? s.id : \"e\" + t++, s.source = \"\" + s.source, s.target = \"\" + s.target, s.viz && \"object\" == typeof s.viz && (s.color = s.viz.color, s.size = s.viz.thickness), s.size = s.weight, s.direction = s.type, delete s.type;\n            }\n\n            if (r instanceof sigma) {\n              for (r.graph.clear(), a = e.nodes, i = 0, o = a.length; i < o; i++) {\n                r.graph.addNode(a[i]);\n              }\n\n              for (a = e.edges, i = 0, o = a.length; i < o; i++) {\n                r.graph.addEdge(a[i]);\n              }\n            } else \"object\" == typeof r ? (r.graph = e, r = new sigma(r)) : \"function\" == typeof r && (n = r, r = null);\n\n            return n ? void n(r || e) : e;\n          }\n\n          if (\"string\" == typeof e) gexf.fetch(e, u);else if (\"object\" == typeof e) return u(gexf.parse(e));\n        };\n      }).call(window);\n    }).call(window);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}