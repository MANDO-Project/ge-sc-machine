{"ast":null,"code":"import constant from \"./constant.js\";\nexport default function (z) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      zz;\n  if (typeof z !== \"function\") z = constant(z == null ? 0 : +z);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vz += (zz[i] - node.z) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    zz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(zz[i] = +z(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.z = function (_) {\n    return arguments.length ? (z = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : z;\n  };\n\n  return force;\n}","map":null,"metadata":{},"sourceType":"module"}