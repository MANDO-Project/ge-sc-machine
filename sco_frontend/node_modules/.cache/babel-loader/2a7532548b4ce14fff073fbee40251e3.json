{"ast":null,"code":"var Sigma = function (e) {\n  var t = {};\n\n  function i(n) {\n    if (t[n]) return t[n].exports;\n    var s = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(s.exports, s, s.exports, i), s.l = !0, s.exports;\n  }\n\n  return i.m = e, i.c = t, i.d = function (e, t, n) {\n    i.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, i.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, i.t = function (e, t) {\n    if (1 & t && (e = i(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (i.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var s in e) {\n      i.d(n, s, function (t) {\n        return e[t];\n      }.bind(null, s));\n    }\n    return n;\n  }, i.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return i.d(t, \"a\", t), t;\n  }, i.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, i.p = \"\", i(i.s = 115);\n}({\n  115: function _(e, t, i) {\n    \"use strict\";\n\n    i.r(t);\n    i(116), i(117), i(118), i(119), i(120), i(121), i(122), i(123), i(124), i(125), i(126), i(127), i(128), i(129), i(130), i(131), i(132), i(133), i(134), i(135), i(136), i(137), i(138), i(139), i(140), i(141);\n    var n = window.sigma;\n    n.renderers.def = n.renderers.canvas, t.default = n;\n  },\n  116: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        var t = {},\n            i = function i(e) {\n          var n, s, r, a, o;\n          i.classes.dispatcher.extend(this);\n          var d = this,\n              l = e || {};\n\n          if (\"string\" == typeof l || l instanceof HTMLElement ? l = {\n            renderers: [l]\n          } : \"[object Array]\" === Object.prototype.toString.call(l) && (l = {\n            renderers: l\n          }), a = l.renderers || l.renderer || l.container, l.renderers && 0 !== l.renderers.length || (\"string\" == typeof a || a instanceof HTMLElement || \"object\" == typeof a && \"container\" in a) && (l.renderers = [a]), l.id) {\n            if (t[l.id]) throw 'sigma: Instance \"' + l.id + '\" already exists.';\n            Object.defineProperty(this, \"id\", {\n              value: l.id\n            });\n          } else {\n            for (o = 0; t[o];) {\n              o++;\n            }\n\n            Object.defineProperty(this, \"id\", {\n              value: \"\" + o\n            });\n          }\n\n          for (t[this.id] = this, this.settings = new i.classes.configurable(i.settings, l.settings || {}), Object.defineProperty(this, \"graph\", {\n            value: new i.classes.graph(this.settings),\n            configurable: !0\n          }), Object.defineProperty(this, \"middlewares\", {\n            value: [],\n            configurable: !0\n          }), Object.defineProperty(this, \"cameras\", {\n            value: {},\n            configurable: !0\n          }), Object.defineProperty(this, \"renderers\", {\n            value: {},\n            configurable: !0\n          }), Object.defineProperty(this, \"renderersPerCamera\", {\n            value: {},\n            configurable: !0\n          }), Object.defineProperty(this, \"cameraFrames\", {\n            value: {},\n            configurable: !0\n          }), Object.defineProperty(this, \"camera\", {\n            get: function get() {\n              return this.cameras[0];\n            }\n          }), Object.defineProperty(this, \"events\", {\n            value: [\"click\", \"rightClick\", \"clickStage\", \"doubleClickStage\", \"rightClickStage\", \"clickNode\", \"clickNodes\", \"doubleClickNode\", \"doubleClickNodes\", \"rightClickNode\", \"rightClickNodes\", \"overNode\", \"overNodes\", \"outNode\", \"outNodes\", \"downNode\", \"downNodes\", \"upNode\", \"upNodes\"],\n            configurable: !0\n          }), this._handler = function (e) {\n            var t,\n                i = {};\n\n            for (t in e.data) {\n              i[t] = e.data[t];\n            }\n\n            i.renderer = e.target, this.dispatchEvent(e.type, i);\n          }.bind(this), n = 0, s = (r = l.renderers || []).length; n < s; n++) {\n            this.addRenderer(r[n]);\n          }\n\n          for (n = 0, s = (r = l.middlewares || []).length; n < s; n++) {\n            this.middlewares.push(\"string\" == typeof r[n] ? i.middlewares[r[n]] : r[n]);\n          }\n\n          \"object\" == typeof l.graph && l.graph && (this.graph.read(l.graph), this.refresh()), window.addEventListener(\"resize\", function () {\n            d.settings && d.refresh();\n          });\n        };\n\n        if (i.prototype.addCamera = function (t) {\n          var n,\n              s = this;\n\n          if (!arguments.length) {\n            for (t = 0; this.cameras[\"\" + t];) {\n              t++;\n            }\n\n            t = \"\" + t;\n          }\n\n          if (this.cameras[t]) throw 'sigma.addCamera: The camera \"' + t + '\" already exists.';\n          return n = new i.classes.camera(t, this.graph, this.settings), this.cameras[t] = n, n.quadtree = new i.classes.quad(), i.classes.edgequad !== e && (n.edgequadtree = new i.classes.edgequad()), n.bind(\"coordinatesUpdated\", function (e) {\n            s.renderCamera(n, n.isAnimated);\n          }), this.renderersPerCamera[t] = [], n;\n        }, i.prototype.killCamera = function (e) {\n          if (!(e = \"string\" == typeof e ? this.cameras[e] : e)) throw \"sigma.killCamera: The camera is undefined.\";\n          var t,\n              i = this.renderersPerCamera[e.id];\n\n          for (t = i.length - 1; t >= 0; t--) {\n            this.killRenderer(i[t]);\n          }\n\n          return delete this.renderersPerCamera[e.id], delete this.cameraFrames[e.id], delete this.cameras[e.id], e.kill && e.kill(), this;\n        }, i.prototype.addRenderer = function (e) {\n          var t,\n              n,\n              s,\n              r,\n              a = e || {};\n          if (\"string\" == typeof a ? a = {\n            container: document.getElementById(a)\n          } : a instanceof HTMLElement && (a = {\n            container: a\n          }), \"string\" == typeof a.container && (a.container = document.getElementById(a.container)), \"id\" in a) t = a.id;else {\n            for (t = 0; this.renderers[\"\" + t];) {\n              t++;\n            }\n\n            t = \"\" + t;\n          }\n          if (this.renderers[t]) throw 'sigma.addRenderer: The renderer \"' + t + '\" already exists.';\n          if (n = (n = \"function\" == typeof a.type ? a.type : i.renderers[a.type]) || i.renderers.def, s = \"camera\" in a ? a.camera instanceof i.classes.camera ? a.camera : this.cameras[a.camera] || this.addCamera(a.camera) : this.addCamera(), this.cameras[s.id] !== s) throw \"sigma.addRenderer: The camera is not properly referenced.\";\n          return r = new n(this.graph, s, this.settings, a), this.renderers[t] = r, Object.defineProperty(r, \"id\", {\n            value: t\n          }), r.bind && r.bind([\"click\", \"rightClick\", \"clickStage\", \"doubleClickStage\", \"rightClickStage\", \"clickNode\", \"clickNodes\", \"clickEdge\", \"clickEdges\", \"doubleClickNode\", \"doubleClickNodes\", \"doubleClickEdge\", \"doubleClickEdges\", \"rightClickNode\", \"rightClickNodes\", \"rightClickEdge\", \"rightClickEdges\", \"overNode\", \"overNodes\", \"overEdge\", \"overEdges\", \"outNode\", \"outNodes\", \"outEdge\", \"outEdges\", \"downNode\", \"downNodes\", \"downEdge\", \"downEdges\", \"upNode\", \"upNodes\", \"upEdge\", \"upEdges\"], this._handler), this.renderersPerCamera[s.id].push(r), r;\n        }, i.prototype.killRenderer = function (e) {\n          if (!(e = \"string\" == typeof e ? this.renderers[e] : e)) throw \"sigma.killRenderer: The renderer is undefined.\";\n          var t = this.renderersPerCamera[e.camera.id],\n              i = t.indexOf(e);\n          return i >= 0 && t.splice(i, 1), e.kill && e.kill(), delete this.renderers[e.id], this;\n        }, i.prototype.refresh = function (t) {\n          var n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l = 0;\n\n          for (t = t || {}, n = 0, s = (a = this.middlewares || []).length; n < s; n++) {\n            a[n].call(this, 0 === n ? \"\" : \"tmp\" + l + \":\", n === s - 1 ? \"ready:\" : \"tmp\" + ++l + \":\");\n          }\n\n          for (r in this.cameras) {\n            (o = this.cameras[r]).settings(\"autoRescale\") && this.renderersPerCamera[o.id] && this.renderersPerCamera[o.id].length ? i.middlewares.rescale.call(this, a.length ? \"ready:\" : \"\", o.readPrefix, {\n              width: this.renderersPerCamera[o.id][0].width,\n              height: this.renderersPerCamera[o.id][0].height\n            }) : i.middlewares.copy.call(this, a.length ? \"ready:\" : \"\", o.readPrefix), t.skipIndexation || (d = i.utils.getBoundaries(this.graph, o.readPrefix), o.quadtree.index(this.graph.nodes(), {\n              prefix: o.readPrefix,\n              bounds: {\n                x: d.minX,\n                y: d.minY,\n                width: d.maxX - d.minX,\n                height: d.maxY - d.minY\n              }\n            }), o.edgequadtree !== e && o.settings(\"drawEdges\") && o.settings(\"enableEdgeHovering\") && o.edgequadtree.index(this.graph, {\n              prefix: o.readPrefix,\n              bounds: {\n                x: d.minX,\n                y: d.minY,\n                width: d.maxX - d.minX,\n                height: d.maxY - d.minY\n              }\n            }));\n          }\n\n          for (n = 0, s = (a = Object.keys(this.renderers)).length; n < s; n++) {\n            if (this.renderers[a[n]].process) if (this.settings(\"skipErrors\")) try {\n              this.renderers[a[n]].process();\n            } catch (e) {\n              console.log('Warning: The renderer \"' + a[n] + '\" crashed on \".process()\"');\n            } else this.renderers[a[n]].process();\n          }\n\n          return this.render(), this;\n        }, i.prototype.render = function () {\n          var e, t, i;\n\n          for (e = 0, t = (i = Object.keys(this.renderers)).length; e < t; e++) {\n            if (this.settings(\"skipErrors\")) try {\n              this.renderers[i[e]].render();\n            } catch (t) {\n              this.settings(\"verbose\") && console.log('Warning: The renderer \"' + i[e] + '\" crashed on \".render()\"');\n            } else this.renderers[i[e]].render();\n          }\n\n          return this;\n        }, i.prototype.renderCamera = function (e, t) {\n          var i,\n              n,\n              s,\n              r = this;\n          if (t) for (i = 0, n = (s = this.renderersPerCamera[e.id]).length; i < n; i++) {\n            if (this.settings(\"skipErrors\")) try {\n              s[i].render();\n            } catch (e) {\n              this.settings(\"verbose\") && console.log('Warning: The renderer \"' + s[i].id + '\" crashed on \".render()\"');\n            } else s[i].render();\n          } else if (!this.cameraFrames[e.id]) {\n            for (i = 0, n = (s = this.renderersPerCamera[e.id]).length; i < n; i++) {\n              if (this.settings(\"skipErrors\")) try {\n                s[i].render();\n              } catch (e) {\n                this.settings(\"verbose\") && console.log('Warning: The renderer \"' + s[i].id + '\" crashed on \".render()\"');\n              } else s[i].render();\n            }\n\n            this.cameraFrames[e.id] = requestAnimationFrame(function () {\n              delete r.cameraFrames[e.id];\n            });\n          }\n          return this;\n        }, i.prototype.kill = function () {\n          var e;\n\n          for (e in this.dispatchEvent(\"kill\"), this.graph.kill(), delete this.middlewares, this.renderers) {\n            this.killRenderer(this.renderers[e]);\n          }\n\n          for (e in this.cameras) {\n            this.killCamera(this.cameras[e]);\n          }\n\n          for (e in delete this.renderers, delete this.cameras, this) {\n            this.hasOwnProperty(e) && delete this[e];\n          }\n\n          delete t[this.id];\n        }, i.instances = function (e) {\n          return arguments.length ? t[e] : i.utils.extend({}, t);\n        }, i.version = \"1.2.1\", void 0 !== this.sigma) throw \"An object called sigma is already in the global scope.\";\n        this.sigma = i;\n      }).call(this);\n    }).call(window);\n  },\n  117: function _(e, t, i) {\n    (function () {\n      !function (i) {\n        \"use strict\";\n\n        if (i.conrad) throw new Error(\"conrad already exists\");\n        var n,\n            s = !1,\n            r = {},\n            a = {},\n            o = [],\n            d = {},\n            l = [],\n            h = !1,\n            c = {\n          frameDuration: 20,\n          history: !0\n        },\n            u = Object.create(null);\n\n        function g(e, t) {\n          var i,\n              n,\n              s,\n              r,\n              a,\n              o,\n              d = Array.isArray(e) ? e : e.split(/ /);\n\n          for (t = void 0 === t ? {} : t, i = 0, s = d.length; i !== s; i += 1) {\n            if (o = d[i], u[o]) for (a = {\n              type: o,\n              data: t || {}\n            }, n = 0, r = u[o].length; n !== r; n += 1) {\n              try {\n                u[o][n].handler(a);\n              } catch (e) {}\n            }\n          }\n        }\n\n        function f() {\n          var e,\n              t,\n              i,\n              n,\n              s = !1,\n              r = E(),\n              a = o.shift();\n\n          if (i = a.job(), r = E() - r, a.done++, a.time += r, a.currentTime += r, a.weightTime = a.currentTime / (a.weight || 1), a.averageTime = a.time / a.done, !(n = a.count ? a.count <= a.done : !i)) {\n            for (e = 0, t = o.length; e < t; e++) {\n              if (o[e].weightTime > a.weightTime) {\n                o.splice(e, 0, a), s = !0;\n                break;\n              }\n            }\n\n            s || o.push(a);\n          }\n\n          return n ? a : null;\n        }\n\n        function m(e) {\n          var t = o.length;\n          a[e.id] = e, e.status = \"running\", t && (e.weightTime = o[t - 1].weightTime, e.currentTime = e.weightTime * (e.weight || 1)), e.startTime = E(), g(\"jobStarted\", b(e)), o.push(e);\n        }\n\n        function y() {\n          var e, t, i;\n\n          for (e in r) {\n            (t = r[e]).after ? d[e] = t : m(t), delete r[e];\n          }\n\n          for (s = !!o.length; o.length && E() - n < c.frameDuration;) {\n            if (i = f()) for (e in p(i.id), d) {\n              d[e].after === i.id && (m(d[e]), delete d[e]);\n            }\n          }\n\n          s ? (n = E(), g(\"enterFrame\"), setTimeout(y, 0)) : g(\"stop\");\n        }\n\n        function p(e) {\n          var t,\n              i,\n              n,\n              s,\n              h = !1;\n          if (Array.isArray(e)) for (t = 0, i = e.length; t < i; t++) {\n            p(e[t]);\n          } else {\n            if (\"string\" != typeof e) throw new Error(\"[conrad.killJob] Wrong arguments.\");\n\n            for (t = 0, i = (n = [a, d, r]).length; t < i; t++) {\n              e in n[t] && (s = n[t][e], c.history && (s.status = \"done\", l.push(s)), g(\"jobEnded\", b(s)), delete n[t][e], \"function\" == typeof s.end && s.end(), h = !0);\n            }\n\n            for (t = 0, i = (n = o).length; t < i; t++) {\n              if (n[t].id === e) {\n                n.splice(t, 1);\n                break;\n              }\n            }\n\n            if (!h) throw new Error('[conrad.killJob] Job \"' + e + '\" not found.');\n          }\n          return this;\n        }\n\n        function x(e) {\n          var t = r[e] || a[e] || d[e];\n          return t ? v(t) : null;\n        }\n\n        function v() {\n          var e,\n              t,\n              i = {};\n\n          for (e = arguments.length - 1; e >= 0; e--) {\n            for (t in arguments[e]) {\n              i[t] = arguments[e][t];\n            }\n          }\n\n          return i;\n        }\n\n        function b(e) {\n          var t, i, n;\n          if (!e) return e;\n          if (Array.isArray(e)) for (t = [], i = 0, n = e.length; i < n; i++) {\n            t.push(b(e[i]));\n          } else if (\"object\" == typeof e) for (i in t = {}, e) {\n            t[i] = b(e[i]);\n          } else t = e;\n          return t;\n        }\n\n        function w(e) {\n          var t,\n              i = [];\n\n          for (t in e) {\n            i.push(e[t]);\n          }\n\n          return i;\n        }\n\n        function E() {\n          return Date.now ? Date.now() : new Date().getTime();\n        }\n\n        Array.isArray || (Array.isArray = function (e) {\n          return \"[object Array]\" === Object.prototype.toString.call(e);\n        });\n        var C = {\n          hasJob: x,\n          addJob: function e(t, i) {\n            var a, o, d;\n\n            if (Array.isArray(t)) {\n              for (h = !0, a = 0, o = t.length; a < o; a++) {\n                e(t[a].id, v(t[a], i));\n              }\n\n              h = !1, s || (n = E(), g(\"start\"), y());\n            } else if (\"object\" == typeof t) {\n              if (\"string\" == typeof t.id) e(t.id, t);else {\n                for (a in h = !0, t) {\n                  \"function\" == typeof t[a] ? e(a, v({\n                    job: t[a]\n                  }, i)) : e(a, v(t[a], i));\n                }\n\n                h = !1, s || (n = E(), g(\"start\"), y());\n              }\n            } else {\n              if (\"string\" != typeof t) throw new Error(\"[conrad.addJob] Wrong arguments.\");\n              if (x(t)) throw new Error('[conrad.addJob] Job with id \"' + t + '\" already exists.');\n              if (\"function\" == typeof i) d = {\n                id: t,\n                done: 0,\n                time: 0,\n                status: \"waiting\",\n                currentTime: 0,\n                averageTime: 0,\n                weightTime: 0,\n                job: i\n              };else {\n                if (\"object\" != typeof i) throw new Error(\"[conrad.addJob] Wrong arguments.\");\n                d = v({\n                  id: t,\n                  done: 0,\n                  time: 0,\n                  status: \"waiting\",\n                  currentTime: 0,\n                  averageTime: 0,\n                  weightTime: 0\n                }, i);\n              }\n              r[t] = d, g(\"jobAdded\", b(d)), s || h || (n = E(), g(\"start\"), y());\n            }\n\n            return this;\n          },\n          killJob: p,\n          killAll: function killAll() {\n            var e,\n                t = v(r, a, d);\n            if (c.history) for (e in t) {\n              t[e].status = \"done\", l.push(t[e]), \"function\" == typeof t[e].end && t[e].end();\n            }\n            return r = {}, d = {}, a = {}, o = [], s = !1, this;\n          },\n          settings: function settings(e, t) {\n            var i;\n            if (\"string\" == typeof a1 && 1 === arguments.length) return c[a1];\n\n            for (var n in i = \"object\" == typeof a1 && 1 === arguments.length && a1 || {}, \"string\" == typeof a1 && (i[a1] = a2), i) {\n              void 0 !== i[n] ? c[n] = i[n] : delete c[n];\n            }\n\n            return this;\n          },\n          getStats: function getStats(e, t) {\n            var i, n, s, o, h, c, u;\n\n            if (!arguments.length) {\n              for (n in h = [], r) {\n                h.push(r[n]);\n              }\n\n              for (n in d) {\n                h.push(d[n]);\n              }\n\n              for (n in a) {\n                h.push(a[n]);\n              }\n\n              h = h.concat(l);\n            }\n\n            if (\"string\" == typeof e) switch (e) {\n              case \"waiting\":\n                h = w(d);\n                break;\n\n              case \"running\":\n                h = w(a);\n                break;\n\n              case \"done\":\n                h = l;\n                break;\n\n              default:\n                c = e;\n            }\n\n            if (e instanceof RegExp && (c = e), !c && (\"string\" == typeof t || t instanceof RegExp) && (c = t), c) {\n              if (u = \"string\" == typeof c, h instanceof Array) i = h;else if (\"object\" == typeof h) for (n in i = [], h) {\n                i = i.concat(h[n]);\n              } else {\n                for (n in i = [], r) {\n                  i.push(r[n]);\n                }\n\n                for (n in d) {\n                  i.push(d[n]);\n                }\n\n                for (n in a) {\n                  i.push(a[n]);\n                }\n\n                i = i.concat(l);\n              }\n\n              for (h = [], s = 0, o = i.length; s < o; s++) {\n                (u ? i[s].id === c : i[s].id.match(c)) && h.push(i[s]);\n              }\n            }\n\n            return b(h);\n          },\n          isRunning: function isRunning() {\n            return s;\n          },\n          clearHistory: function clearHistory() {\n            return l = [], this;\n          },\n          bind: function e(t, i) {\n            var n, s, r, a;\n            if (arguments.length) if (1 === arguments.length && Object(arguments[0]) === arguments[0]) for (t in arguments[0]) {\n              e(t, arguments[0][t]);\n            } else if (arguments.length > 1) for (n = 0, s = (a = Array.isArray(t) ? t : t.split(/ /)).length; n !== s; n += 1) {\n              r = a[n], u[r] || (u[r] = []), u[r].push({\n                handler: i\n              });\n            }\n          },\n          unbind: function unbind(e, t) {\n            var i,\n                n,\n                s,\n                r,\n                a,\n                o,\n                d = Array.isArray(e) ? e : e.split(/ /);\n            if (arguments.length) {\n              if (t) for (i = 0, n = d.length; i !== n; i += 1) {\n                if (o = d[i], u[o]) {\n                  for (a = [], s = 0, r = u[o].length; s !== r; s += 1) {\n                    u[o][s].handler !== t && a.push(u[o][s]);\n                  }\n\n                  u[o] = a;\n                }\n\n                u[o] && 0 === u[o].length && delete u[o];\n              } else for (i = 0, n = d.length; i !== n; i += 1) {\n                delete u[d[i]];\n              }\n            } else u = Object.create(null);\n          },\n          version: \"0.1.0\"\n        };\n        e.exports && (t = e.exports = C), t.conrad = C, i.conrad = C;\n      }(this);\n    }).call(window);\n  },\n  118: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        var t,\n            i = this;\n        sigma.utils = sigma.utils || {}, sigma.utils.extend = function () {\n          var e,\n              t,\n              i = {},\n              n = arguments.length;\n\n          for (e = n - 1; e >= 0; e--) {\n            for (t in arguments[e]) {\n              i[t] = arguments[e][t];\n            }\n          }\n\n          return i;\n        }, sigma.utils.dateNow = function () {\n          return Date.now ? Date.now() : new Date().getTime();\n        }, sigma.utils.pkg = function (e) {\n          return (e || \"\").split(\".\").reduce(function (e, t) {\n            return t in e ? e[t] : e[t] = {};\n          }, i);\n        }, sigma.utils.id = (t = 0, function () {\n          return ++t;\n        });\n        var n = {};\n        sigma.utils.floatColor = function (e) {\n          if (n[e]) return n[e];\n          var t = e,\n              i = 0,\n              s = 0,\n              r = 0;\n          \"#\" === e[0] ? 3 === (e = e.slice(1)).length ? (i = parseInt(e.charAt(0) + e.charAt(0), 16), s = parseInt(e.charAt(1) + e.charAt(1), 16), r = parseInt(e.charAt(2) + e.charAt(2), 16)) : (i = parseInt(e.charAt(0) + e.charAt(1), 16), s = parseInt(e.charAt(2) + e.charAt(3), 16), r = parseInt(e.charAt(4) + e.charAt(5), 16)) : e.match(/^ *rgba? *\\(/) && (i = +(e = e.match(/^ *rgba? *\\( *([0-9]*) *, *([0-9]*) *, *([0-9]*) *(,.*)?\\) *$/))[1], s = +e[2], r = +e[3]);\n          var a = 256 * i * 256 + 256 * s + r;\n          return n[t] = a, a;\n        }, sigma.utils.zoomTo = function (e, t, i, n, s) {\n          var r,\n              a,\n              o,\n              d = e.settings;\n          (a = Math.max(d(\"zoomMin\"), Math.min(d(\"zoomMax\"), e.ratio * n))) !== e.ratio && (o = {\n            x: t * (1 - (n = a / e.ratio)) + e.x,\n            y: i * (1 - n) + e.y,\n            ratio: a\n          }, s && s.duration ? (r = sigma.misc.animation.killAll(e), s = sigma.utils.extend(s, {\n            easing: r ? \"quadraticOut\" : \"quadraticInOut\"\n          }), sigma.misc.animation.camera(e, o, s)) : (e.goTo(o), s && s.onComplete && s.onComplete()));\n        }, sigma.utils.getQuadraticControlPoint = function (e, t, i, n) {\n          return {\n            x: (e + i) / 2 + (n - t) / 4,\n            y: (t + n) / 2 + (e - i) / 4\n          };\n        }, sigma.utils.getPointOnQuadraticCurve = function (e, t, i, n, s, r, a) {\n          return {\n            x: Math.pow(1 - e, 2) * t + 2 * (1 - e) * e * r + Math.pow(e, 2) * n,\n            y: Math.pow(1 - e, 2) * i + 2 * (1 - e) * e * a + Math.pow(e, 2) * s\n          };\n        }, sigma.utils.getPointOnBezierCurve = function (e, t, i, n, s, r, a, o, d) {\n          var l = Math.pow(1 - e, 3),\n              h = 3 * e * Math.pow(1 - e, 2),\n              c = 3 * Math.pow(e, 2) * (1 - e),\n              u = Math.pow(e, 3);\n          return {\n            x: l * t + h * r + c * o + u * n,\n            y: l * i + h * a + c * d + u * s\n          };\n        }, sigma.utils.getSelfLoopControlPoints = function (e, t, i) {\n          return {\n            x1: e - 7 * i,\n            y1: t,\n            x2: e,\n            y2: t + 7 * i\n          };\n        }, sigma.utils.getDistance = function (e, t, i, n) {\n          return Math.sqrt(Math.pow(i - e, 2) + Math.pow(n - t, 2));\n        }, sigma.utils.getCircleIntersection = function (e, t, i, n, s, r) {\n          var a, o, d, l, h, c, u, g, f;\n          return o = n - e, d = s - t, !((l = Math.sqrt(d * d + o * o)) > i + r) && !(l < Math.abs(i - r)) && (f = t + d * (a = (i * i - r * r + l * l) / (2 * l)) / l, {\n            xi: (g = e + o * a / l) + (c = (h = Math.sqrt(i * i - a * a)) / l * -d),\n            xi_prime: g - c,\n            yi: f + (u = o * (h / l)),\n            yi_prime: f - u\n          });\n        }, sigma.utils.isPointOnSegment = function (e, t, i, n, s, r, a) {\n          return Math.abs((t - n) * (s - i) - (e - i) * (r - n)) / sigma.utils.getDistance(i, n, s, r) < a && Math.min(i, s) <= e && e <= Math.max(i, s) && Math.min(n, r) <= t && t <= Math.max(n, r);\n        }, sigma.utils.isPointOnQuadraticCurve = function (e, t, i, n, s, r, a, o, d) {\n          var l = sigma.utils.getDistance(i, n, s, r);\n          if (Math.abs(e - i) > l || Math.abs(t - n) > l) return !1;\n\n          for (var h, c = .5, u = sigma.utils.getDistance(e, t, i, n) < sigma.utils.getDistance(e, t, s, r) ? -.01 : .01, g = 100, f = sigma.utils.getPointOnQuadraticCurve(c, i, n, s, r, a, o), m = sigma.utils.getDistance(e, t, f.x, f.y); g-- > 0 && c >= 0 && c <= 1 && m > d && (u > .001 || u < -.001);) {\n            h = m, f = sigma.utils.getPointOnQuadraticCurve(c, i, n, s, r, a, o), (m = sigma.utils.getDistance(e, t, f.x, f.y)) > h ? c += u = -u / 2 : c + u < 0 || c + u > 1 ? (u /= 2, m = h) : c += u;\n          }\n\n          return m < d;\n        }, sigma.utils.isPointOnBezierCurve = function (e, t, i, n, s, r, a, o, d, l, h) {\n          var c = sigma.utils.getDistance(i, n, a, o);\n          if (Math.abs(e - i) > c || Math.abs(t - n) > c) return !1;\n\n          for (var u, g = .5, f = sigma.utils.getDistance(e, t, i, n) < sigma.utils.getDistance(e, t, s, r) ? -.01 : .01, m = 100, y = sigma.utils.getPointOnBezierCurve(g, i, n, s, r, a, o, d, l), p = sigma.utils.getDistance(e, t, y.x, y.y); m-- > 0 && g >= 0 && g <= 1 && p > h && (f > .001 || f < -.001);) {\n            u = p, y = sigma.utils.getPointOnBezierCurve(g, i, n, s, r, a, o, d, l), (p = sigma.utils.getDistance(e, t, y.x, y.y)) > u ? g += f = -f / 2 : g + f < 0 || g + f > 1 ? (f /= 2, p = u) : g += f;\n          }\n\n          return p < h;\n        }, sigma.utils.getX = function (t) {\n          return t.offsetX !== e && t.offsetX || t.layerX !== e && t.layerX || t.clientX !== e && t.clientX;\n        }, sigma.utils.getY = function (t) {\n          return t.offsetY !== e && t.offsetY || t.layerY !== e && t.layerY || t.clientY !== e && t.clientY;\n        }, sigma.utils.getPixelRatio = function () {\n          var t = 1;\n          return window.screen.deviceXDPI !== e && window.screen.logicalXDPI !== e && window.screen.deviceXDPI > window.screen.logicalXDPI ? t = window.screen.systemXDPI / window.screen.logicalXDPI : window.devicePixelRatio !== e && (t = window.devicePixelRatio), t;\n        }, sigma.utils.getWidth = function (t) {\n          var i = t.target.ownerSVGElement ? t.target.ownerSVGElement.width : t.target.width;\n          return \"number\" == typeof i && i || i !== e && i.baseVal !== e && i.baseVal.value;\n        }, sigma.utils.getCenter = function (e) {\n          var t = -1 !== e.target.namespaceURI.indexOf(\"svg\") ? 1 : sigma.utils.getPixelRatio();\n          return {\n            x: sigma.utils.getWidth(e) / (2 * t),\n            y: sigma.utils.getHeight(e) / (2 * t)\n          };\n        }, sigma.utils.mouseCoords = function (e, t, i) {\n          return t = t || sigma.utils.getX(e), i = i || sigma.utils.getY(e), {\n            x: t - sigma.utils.getCenter(e).x,\n            y: i - sigma.utils.getCenter(e).y,\n            clientX: e.clientX,\n            clientY: e.clientY,\n            ctrlKey: e.ctrlKey,\n            metaKey: e.metaKey,\n            altKey: e.altKey,\n            shiftKey: e.shiftKey\n          };\n        }, sigma.utils.getHeight = function (t) {\n          var i = t.target.ownerSVGElement ? t.target.ownerSVGElement.height : t.target.height;\n          return \"number\" == typeof i && i || i !== e && i.baseVal !== e && i.baseVal.value;\n        }, sigma.utils.getDelta = function (t) {\n          return t.wheelDelta !== e && t.wheelDelta || t.detail !== e && -t.detail;\n        }, sigma.utils.getOffset = function (e) {\n          for (var t = 0, i = 0; e;) {\n            i += parseInt(e.offsetTop), t += parseInt(e.offsetLeft), e = e.offsetParent;\n          }\n\n          return {\n            top: i,\n            left: t\n          };\n        }, sigma.utils.doubleClick = function (e, t, i) {\n          var n,\n              s = 0;\n          e._doubleClickHandler = e._doubleClickHandler || {}, e._doubleClickHandler[t] = e._doubleClickHandler[t] || [], (n = e._doubleClickHandler[t]).push(function (e) {\n            if (2 === ++s) return s = 0, i(e);\n            1 === s && setTimeout(function () {\n              s = 0;\n            }, sigma.settings.doubleClickTimeout);\n          }), e.addEventListener(t, n[n.length - 1], !1);\n        }, sigma.utils.unbindDoubleClick = function (e, t) {\n          for (var i, n = (e._doubleClickHandler || {})[t] || []; i = n.pop();) {\n            e.removeEventListener(t, i);\n          }\n\n          delete (e._doubleClickHandler || {})[t];\n        }, sigma.utils.easings = sigma.utils.easings || {}, sigma.utils.easings.linearNone = function (e) {\n          return e;\n        }, sigma.utils.easings.quadraticIn = function (e) {\n          return e * e;\n        }, sigma.utils.easings.quadraticOut = function (e) {\n          return e * (2 - e);\n        }, sigma.utils.easings.quadraticInOut = function (e) {\n          return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1);\n        }, sigma.utils.easings.cubicIn = function (e) {\n          return e * e * e;\n        }, sigma.utils.easings.cubicOut = function (e) {\n          return --e * e * e + 1;\n        }, sigma.utils.easings.cubicInOut = function (e) {\n          return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2);\n        }, sigma.utils.loadShader = function (e, t, i, n) {\n          var s = e.createShader(i);\n          return e.shaderSource(s, t), e.compileShader(s), e.getShaderParameter(s, e.COMPILE_STATUS) ? s : (n && n('Error compiling shader \"' + s + '\":' + e.getShaderInfoLog(s)), e.deleteShader(s), null);\n        }, sigma.utils.loadProgram = function (e, t, i, n, s) {\n          var r,\n              a = e.createProgram();\n\n          for (r = 0; r < t.length; ++r) {\n            e.attachShader(a, t[r]);\n          }\n\n          if (i) for (r = 0; r < i.length; ++r) {\n            e.bindAttribLocation(a, locations ? locations[r] : r, opt_attribs[r]);\n          }\n          return e.linkProgram(a), e.getProgramParameter(a, e.LINK_STATUS) ? a : (s && s(\"Error in program linking: \" + e.getProgramInfoLog(a)), e.deleteProgram(a), null);\n        }, sigma.utils.pkg(\"sigma.utils.matrices\"), sigma.utils.matrices.translation = function (e, t) {\n          return [1, 0, 0, 0, 1, 0, e, t, 1];\n        }, sigma.utils.matrices.rotation = function (e, t) {\n          var i = Math.cos(e),\n              n = Math.sin(e);\n          return t ? [i, -n, n, i] : [i, -n, 0, n, i, 0, 0, 0, 1];\n        }, sigma.utils.matrices.scale = function (e, t) {\n          return t ? [e, 0, 0, e] : [e, 0, 0, 0, e, 0, 0, 0, 1];\n        }, sigma.utils.matrices.multiply = function (e, t, i) {\n          var n = i ? 2 : 3,\n              s = e[0 * n + 0],\n              r = e[0 * n + 1],\n              a = e[0 * n + 2],\n              o = e[1 * n + 0],\n              d = e[1 * n + 1],\n              l = e[1 * n + 2],\n              h = e[2 * n + 0],\n              c = e[2 * n + 1],\n              u = e[2 * n + 2],\n              g = t[0 * n + 0],\n              f = t[0 * n + 1],\n              m = t[0 * n + 2],\n              y = t[1 * n + 0],\n              p = t[1 * n + 1],\n              x = t[1 * n + 2],\n              v = t[2 * n + 0],\n              b = t[2 * n + 1],\n              w = t[2 * n + 2];\n          return i ? [s * g + r * y, s * f + r * p, o * g + d * y, o * f + d * p] : [s * g + r * y + a * v, s * f + r * p + a * b, s * m + r * x + a * w, o * g + d * y + l * v, o * f + d * p + l * b, o * m + d * x + l * w, h * g + c * y + u * v, h * f + c * p + u * b, h * m + c * x + u * w];\n        };\n      }).call(this);\n    }).call(window);\n  },\n  119: function _(e, t) {\n    (function () {\n      !function (e) {\n        \"use strict\";\n\n        var t,\n            i = 0,\n            n = [\"ms\", \"moz\", \"webkit\", \"o\"];\n\n        for (t = 0; t < n.length && !e.requestAnimationFrame; t++) {\n          e.requestAnimationFrame = e[n[t] + \"RequestAnimationFrame\"], e.cancelAnimationFrame = e[n[t] + \"CancelAnimationFrame\"] || e[n[t] + \"CancelRequestAnimationFrame\"];\n        }\n\n        e.requestAnimationFrame || (e.requestAnimationFrame = function (t, n) {\n          var s = new Date().getTime(),\n              r = Math.max(0, 16 - (s - i)),\n              a = e.setTimeout(function () {\n            t(s + r);\n          }, r);\n          return i = s + r, a;\n        }), e.cancelAnimationFrame || (e.cancelAnimationFrame = function (e) {\n          clearTimeout(e);\n        }), Function.prototype.bind || (Function.prototype.bind = function (e) {\n          if (\"function\" != typeof this) throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n          var t,\n              i,\n              n = Array.prototype.slice.call(arguments, 1),\n              s = this;\n          return i = function i() {\n            return s.apply(this instanceof t && e ? this : e, n.concat(Array.prototype.slice.call(arguments)));\n          }, (t = function t() {}).prototype = this.prototype, i.prototype = new t(), i;\n        });\n      }(this);\n    }).call(window);\n  },\n  120: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.settings\");\n        sigma.settings = sigma.utils.extend(sigma.settings || {}, {\n          clone: !0,\n          immutable: !0,\n          verbose: !1,\n          classPrefix: \"sigma\",\n          defaultNodeType: \"def\",\n          defaultEdgeType: \"def\",\n          defaultLabelColor: \"#000\",\n          defaultEdgeColor: \"#000\",\n          defaultNodeColor: \"#000\",\n          defaultLabelSize: 14,\n          edgeColor: \"source\",\n          minArrowSize: 0,\n          font: \"arial\",\n          fontStyle: \"\",\n          labelColor: \"default\",\n          labelSize: \"fixed\",\n          labelSizeRatio: 1,\n          labelThreshold: 8,\n          webglOversamplingRatio: 2,\n          borderSize: 0,\n          defaultNodeBorderColor: \"#000\",\n          hoverFont: \"\",\n          singleHover: !0,\n          hoverFontStyle: \"\",\n          labelHoverShadow: \"default\",\n          labelHoverShadowColor: \"#000\",\n          nodeHoverColor: \"node\",\n          defaultNodeHoverColor: \"#000\",\n          labelHoverBGColor: \"default\",\n          defaultHoverLabelBGColor: \"#fff\",\n          labelHoverColor: \"default\",\n          defaultLabelHoverColor: \"#000\",\n          edgeHoverColor: \"edge\",\n          edgeHoverSizeRatio: 1,\n          defaultEdgeHoverColor: \"#000\",\n          edgeHoverExtremities: !1,\n          drawEdges: !0,\n          drawNodes: !0,\n          drawLabels: !0,\n          drawEdgeLabels: !1,\n          batchEdgesDrawing: !1,\n          hideEdgesOnMove: !1,\n          canvasEdgesBatchSize: 500,\n          webglEdgesBatchSize: 1e3,\n          scalingMode: \"inside\",\n          sideMargin: 0,\n          minEdgeSize: .5,\n          maxEdgeSize: 1,\n          minNodeSize: 1,\n          maxNodeSize: 8,\n          touchEnabled: !0,\n          mouseEnabled: !0,\n          mouseWheelEnabled: !0,\n          doubleClickEnabled: !0,\n          eventsEnabled: !0,\n          zoomingRatio: 1.7,\n          doubleClickZoomingRatio: 2.2,\n          zoomMin: .0625,\n          zoomMax: 2,\n          mouseZoomDuration: 200,\n          doubleClickZoomDuration: 200,\n          mouseInertiaDuration: 200,\n          mouseInertiaRatio: 3,\n          touchInertiaDuration: 200,\n          touchInertiaRatio: 3,\n          doubleClickTimeout: 300,\n          doubleTapTimeout: 300,\n          dragTimeout: 200,\n          autoResize: !0,\n          autoRescale: !0,\n          enableCamera: !0,\n          enableHovering: !0,\n          enableEdgeHovering: !1,\n          edgeHoverPrecision: 5,\n          rescaleIgnoreSize: !1,\n          skipErrors: !1,\n          nodesPowRatio: .5,\n          edgesPowRatio: .5,\n          animationsTime: 200\n        });\n      }).call(this);\n    }).call(window);\n  },\n  121: function _(e, t, i) {\n    (function () {\n      (function () {\n        \"use strict\";\n\n        var i = function i() {\n          Object.defineProperty(this, \"_handlers\", {\n            value: {}\n          });\n        };\n\n        i.prototype.bind = function (e, t) {\n          var i, n, s, r;\n          if (1 === arguments.length && \"object\" == typeof arguments[0]) for (e in arguments[0]) {\n            this.bind(e, arguments[0][e]);\n          } else {\n            if (2 !== arguments.length || \"function\" != typeof arguments[1]) throw \"bind: Wrong arguments.\";\n\n            for (i = 0, n = (r = \"string\" == typeof e ? e.split(\" \") : e).length; i !== n; i += 1) {\n              (s = r[i]) && (this._handlers[s] || (this._handlers[s] = []), this._handlers[s].push({\n                handler: t\n              }));\n            }\n          }\n          return this;\n        }, i.prototype.unbind = function (e, t) {\n          var i,\n              n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l = \"string\" == typeof e ? e.split(\" \") : e;\n\n          if (!arguments.length) {\n            for (a in this._handlers) {\n              delete this._handlers[a];\n            }\n\n            return this;\n          }\n\n          if (t) for (i = 0, n = l.length; i !== n; i += 1) {\n            if (d = l[i], this._handlers[d]) {\n              for (o = [], s = 0, r = this._handlers[d].length; s !== r; s += 1) {\n                this._handlers[d][s].handler !== t && o.push(this._handlers[d][s]);\n              }\n\n              this._handlers[d] = o;\n            }\n\n            this._handlers[d] && 0 === this._handlers[d].length && delete this._handlers[d];\n          } else for (i = 0, n = l.length; i !== n; i += 1) {\n            delete this._handlers[l[i]];\n          }\n          return this;\n        }, i.prototype.dispatchEvent = function (e, t) {\n          var i,\n              n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l = \"string\" == typeof e ? e.split(\" \") : e;\n\n          for (t = void 0 === t ? {} : t, i = 0, n = l.length; i !== n; i += 1) {\n            if (d = l[i], this._handlers[d]) {\n              for (o = this.getEvent(d, t), a = [], s = 0, r = this._handlers[d].length; s !== r; s += 1) {\n                this._handlers[d][s].handler(o), this._handlers[d][s].one || a.push(this._handlers[d][s]);\n              }\n\n              this._handlers[d] = a;\n            }\n          }\n\n          return this;\n        }, i.prototype.getEvent = function (e, t) {\n          return {\n            type: e,\n            data: t || {},\n            target: this\n          };\n        }, i.extend = function (e, t) {\n          var n;\n\n          for (n in i.prototype) {\n            i.prototype.hasOwnProperty(n) && (e[n] = i.prototype[n]);\n          }\n\n          i.apply(e, t);\n        }, void 0 !== this.sigma ? (this.sigma.classes = this.sigma.classes || {}, this.sigma.classes.dispatcher = i) : (e.exports && (t = e.exports = i), t.dispatcher = i);\n      }).call(this);\n    }).call(window);\n  },\n  122: function _(e, t, i) {\n    (function () {\n      (function () {\n        \"use strict\";\n\n        var i = function i() {\n          var e,\n              t,\n              n = {},\n              s = Array.prototype.slice.call(arguments, 0),\n              r = function r(e, t) {\n            var i, a, o, d;\n\n            if (1 !== arguments.length || \"string\" != typeof e) {\n              if (\"object\" == typeof e && \"string\" == typeof t) return void 0 !== (e || {})[t] ? e[t] : r(t);\n\n              for (i = \"object\" == typeof e && void 0 === t ? e : {}, \"string\" == typeof e && (i[e] = t), a = 0, o = (d = Object.keys(i)).length; a < o; a++) {\n                n[d[a]] = i[d[a]];\n              }\n\n              return this;\n            }\n\n            if (void 0 !== n[e]) return n[e];\n\n            for (a = 0, o = s.length; a < o; a++) {\n              if (void 0 !== s[a][e]) return s[a][e];\n            }\n          };\n\n          for (r.embedObjects = function () {\n            var e = s.concat(n).concat(Array.prototype.splice.call(arguments, 0));\n            return i.apply({}, e);\n          }, e = 0, t = arguments.length; e < t; e++) {\n            r(arguments[e]);\n          }\n\n          return r;\n        };\n\n        void 0 !== this.sigma ? (this.sigma.classes = this.sigma.classes || {}, this.sigma.classes.configurable = i) : (e.exports && (t = e.exports = i), t.configurable = i);\n      }).call(this);\n    }).call(window);\n  },\n  123: function _(e, t, i) {\n    (function () {\n      (function (i) {\n        \"use strict\";\n\n        var n = Object.create(null),\n            s = Object.create(null),\n            r = Object.create(null),\n            a = Object.create(null),\n            o = Object.create(null),\n            d = {\n          immutable: !0,\n          clone: !0\n        },\n            l = function l(e) {\n          return d[e];\n        },\n            h = function h(e) {\n          var t, i, s;\n\n          for (t in s = {\n            settings: e || l,\n            nodesArray: [],\n            edgesArray: [],\n            nodesIndex: Object.create(null),\n            edgesIndex: Object.create(null),\n            inNeighborsIndex: Object.create(null),\n            outNeighborsIndex: Object.create(null),\n            allNeighborsIndex: Object.create(null),\n            inNeighborsCount: Object.create(null),\n            outNeighborsCount: Object.create(null),\n            allNeighborsCount: Object.create(null)\n          }, r) {\n            r[t].call(s);\n          }\n\n          for (t in n) {\n            i = c(t, s, n[t]), this[t] = i, s[t] = i;\n          }\n        };\n\n        function c(e, t, i) {\n          return function () {\n            var n, s;\n\n            for (n in o[e]) {\n              o[e][n].apply(t, arguments);\n            }\n\n            for (n in s = i.apply(t, arguments), a[e]) {\n              a[e][n].apply(t, arguments);\n            }\n\n            return s;\n          };\n        }\n\n        function u(e) {\n          var t;\n\n          for (t in e) {\n            \"hasOwnProperty\" in e && !e.hasOwnProperty(t) || delete e[t];\n          }\n\n          return e;\n        }\n\n        h.addMethod = function (e, t) {\n          if (\"string\" != typeof e || \"function\" != typeof t || 2 !== arguments.length) throw \"addMethod: Wrong arguments.\";\n          if (n[e] || h[e]) throw 'The method \"' + e + '\" already exists.';\n          return n[e] = t, a[e] = Object.create(null), o[e] = Object.create(null), this;\n        }, h.hasMethod = function (e) {\n          return !(!n[e] && !h[e]);\n        }, h.attach = function (e, t, i, n) {\n          if (\"string\" != typeof e || \"string\" != typeof t || \"function\" != typeof i || arguments.length < 3 || arguments.length > 4) throw \"attach: Wrong arguments.\";\n          var s;\n          if (\"constructor\" === e) s = r;else if (n) {\n            if (!o[e]) throw 'The method \"' + e + '\" does not exist.';\n            s = o[e];\n          } else {\n            if (!a[e]) throw 'The method \"' + e + '\" does not exist.';\n            s = a[e];\n          }\n          if (s[t]) throw 'A function \"' + t + '\" is already attached to the method \"' + e + '\".';\n          return s[t] = i, this;\n        }, h.attachBefore = function (e, t, i) {\n          return this.attach(e, t, i, !0);\n        }, h.addIndex = function (e, t) {\n          if (\"string\" != typeof e || Object(t) !== t || 2 !== arguments.length) throw \"addIndex: Wrong arguments.\";\n          if (s[e]) throw 'The index \"' + e + '\" already exists.';\n          var i;\n\n          for (i in s[e] = t, t) {\n            if (\"function\" != typeof t[i]) throw \"The bindings must be functions.\";\n            h.attach(i, e, t[i]);\n          }\n\n          return this;\n        }, h.addMethod(\"addNode\", function (e) {\n          if (Object(e) !== e || 1 !== arguments.length) throw \"addNode: Wrong arguments.\";\n          if (\"string\" != typeof e.id && \"number\" != typeof e.id) throw \"The node must have a string or number id.\";\n          if (this.nodesIndex[e.id]) throw 'The node \"' + e.id + '\" already exists.';\n          var t,\n              i = e.id,\n              n = Object.create(null);\n          if (this.settings(\"clone\")) for (t in e) {\n            \"id\" !== t && (n[t] = e[t]);\n          } else n = e;\n          return this.settings(\"immutable\") ? Object.defineProperty(n, \"id\", {\n            value: i,\n            enumerable: !0\n          }) : n.id = i, this.inNeighborsIndex[i] = Object.create(null), this.outNeighborsIndex[i] = Object.create(null), this.allNeighborsIndex[i] = Object.create(null), this.inNeighborsCount[i] = 0, this.outNeighborsCount[i] = 0, this.allNeighborsCount[i] = 0, this.nodesArray.push(n), this.nodesIndex[n.id] = n, this;\n        }), h.addMethod(\"addEdge\", function (e) {\n          if (Object(e) !== e || 1 !== arguments.length) throw \"addEdge: Wrong arguments.\";\n          if (\"string\" != typeof e.id && \"number\" != typeof e.id) throw \"The edge must have a string or number id.\";\n          if (\"string\" != typeof e.source && \"number\" != typeof e.source || !this.nodesIndex[e.source]) throw \"The edge source must have an existing node id.\";\n          if (\"string\" != typeof e.target && \"number\" != typeof e.target || !this.nodesIndex[e.target]) throw \"The edge target must have an existing node id.\";\n          if (this.edgesIndex[e.id]) throw 'The edge \"' + e.id + '\" already exists.';\n          var t,\n              i = Object.create(null);\n          if (this.settings(\"clone\")) for (t in e) {\n            \"id\" !== t && \"source\" !== t && \"target\" !== t && (i[t] = e[t]);\n          } else i = e;\n          return this.settings(\"immutable\") ? (Object.defineProperty(i, \"id\", {\n            value: e.id,\n            enumerable: !0\n          }), Object.defineProperty(i, \"source\", {\n            value: e.source,\n            enumerable: !0\n          }), Object.defineProperty(i, \"target\", {\n            value: e.target,\n            enumerable: !0\n          })) : (i.id = e.id, i.source = e.source, i.target = e.target), this.edgesArray.push(i), this.edgesIndex[i.id] = i, this.inNeighborsIndex[i.target][i.source] || (this.inNeighborsIndex[i.target][i.source] = Object.create(null)), this.inNeighborsIndex[i.target][i.source][i.id] = i, this.outNeighborsIndex[i.source][i.target] || (this.outNeighborsIndex[i.source][i.target] = Object.create(null)), this.outNeighborsIndex[i.source][i.target][i.id] = i, this.allNeighborsIndex[i.source][i.target] || (this.allNeighborsIndex[i.source][i.target] = Object.create(null)), this.allNeighborsIndex[i.source][i.target][i.id] = i, i.target !== i.source && (this.allNeighborsIndex[i.target][i.source] || (this.allNeighborsIndex[i.target][i.source] = Object.create(null)), this.allNeighborsIndex[i.target][i.source][i.id] = i), this.inNeighborsCount[i.target]++, this.outNeighborsCount[i.source]++, this.allNeighborsCount[i.target]++, this.allNeighborsCount[i.source]++, this;\n        }), h.addMethod(\"dropNode\", function (e) {\n          if (\"string\" != typeof e && \"number\" != typeof e || 1 !== arguments.length) throw \"dropNode: Wrong arguments.\";\n          if (!this.nodesIndex[e]) throw 'The node \"' + e + '\" does not exist.';\n          var t, i, n;\n\n          for (delete this.nodesIndex[e], t = 0, n = this.nodesArray.length; t < n; t++) {\n            if (this.nodesArray[t].id === e) {\n              this.nodesArray.splice(t, 1);\n              break;\n            }\n          }\n\n          for (t = this.edgesArray.length - 1; t >= 0; t--) {\n            this.edgesArray[t].source !== e && this.edgesArray[t].target !== e || this.dropEdge(this.edgesArray[t].id);\n          }\n\n          for (i in delete this.inNeighborsIndex[e], delete this.outNeighborsIndex[e], delete this.allNeighborsIndex[e], delete this.inNeighborsCount[e], delete this.outNeighborsCount[e], delete this.allNeighborsCount[e], this.nodesIndex) {\n            delete this.inNeighborsIndex[i][e], delete this.outNeighborsIndex[i][e], delete this.allNeighborsIndex[i][e];\n          }\n\n          return this;\n        }), h.addMethod(\"dropEdge\", function (e) {\n          if (\"string\" != typeof e && \"number\" != typeof e || 1 !== arguments.length) throw \"dropEdge: Wrong arguments.\";\n          if (!this.edgesIndex[e]) throw 'The edge \"' + e + '\" does not exist.';\n          var t, i, n;\n\n          for (n = this.edgesIndex[e], delete this.edgesIndex[e], t = 0, i = this.edgesArray.length; t < i; t++) {\n            if (this.edgesArray[t].id === e) {\n              this.edgesArray.splice(t, 1);\n              break;\n            }\n          }\n\n          return delete this.inNeighborsIndex[n.target][n.source][n.id], Object.keys(this.inNeighborsIndex[n.target][n.source]).length || delete this.inNeighborsIndex[n.target][n.source], delete this.outNeighborsIndex[n.source][n.target][n.id], Object.keys(this.outNeighborsIndex[n.source][n.target]).length || delete this.outNeighborsIndex[n.source][n.target], delete this.allNeighborsIndex[n.source][n.target][n.id], Object.keys(this.allNeighborsIndex[n.source][n.target]).length || delete this.allNeighborsIndex[n.source][n.target], n.target !== n.source && (delete this.allNeighborsIndex[n.target][n.source][n.id], Object.keys(this.allNeighborsIndex[n.target][n.source]).length || delete this.allNeighborsIndex[n.target][n.source]), this.inNeighborsCount[n.target]--, this.outNeighborsCount[n.source]--, this.allNeighborsCount[n.source]--, this.allNeighborsCount[n.target]--, this;\n        }), h.addMethod(\"kill\", function () {\n          this.nodesArray.length = 0, this.edgesArray.length = 0, delete this.nodesArray, delete this.edgesArray, delete this.nodesIndex, delete this.edgesIndex, delete this.inNeighborsIndex, delete this.outNeighborsIndex, delete this.allNeighborsIndex, delete this.inNeighborsCount, delete this.outNeighborsCount, delete this.allNeighborsCount;\n        }), h.addMethod(\"clear\", function () {\n          return this.nodesArray.length = 0, this.edgesArray.length = 0, u(this.nodesIndex), u(this.edgesIndex), u(this.nodesIndex), u(this.inNeighborsIndex), u(this.outNeighborsIndex), u(this.allNeighborsIndex), u(this.inNeighborsCount), u(this.outNeighborsCount), u(this.allNeighborsCount), this;\n        }), h.addMethod(\"read\", function (e) {\n          var t, i, n;\n\n          for (t = 0, n = (i = e.nodes || []).length; t < n; t++) {\n            this.addNode(i[t]);\n          }\n\n          for (t = 0, n = (i = e.edges || []).length; t < n; t++) {\n            this.addEdge(i[t]);\n          }\n\n          return this;\n        }), h.addMethod(\"nodes\", function (e) {\n          if (!arguments.length) return this.nodesArray.slice(0);\n          if (1 === arguments.length && (\"string\" == typeof e || \"number\" == typeof e)) return this.nodesIndex[e];\n\n          if (1 === arguments.length && \"[object Array]\" === Object.prototype.toString.call(e)) {\n            var t,\n                i,\n                n = [];\n\n            for (t = 0, i = e.length; t < i; t++) {\n              if (\"string\" != typeof e[t] && \"number\" != typeof e[t]) throw \"nodes: Wrong arguments.\";\n              n.push(this.nodesIndex[e[t]]);\n            }\n\n            return n;\n          }\n\n          throw \"nodes: Wrong arguments.\";\n        }), h.addMethod(\"degree\", function (e, t) {\n          if (t = {\n            in: this.inNeighborsCount,\n            out: this.outNeighborsCount\n          }[t || \"\"] || this.allNeighborsCount, \"string\" == typeof e || \"number\" == typeof e) return t[e];\n\n          if (\"[object Array]\" === Object.prototype.toString.call(e)) {\n            var i,\n                n,\n                s = [];\n\n            for (i = 0, n = e.length; i < n; i++) {\n              if (\"string\" != typeof e[i] && \"number\" != typeof e[i]) throw \"degree: Wrong arguments.\";\n              s.push(t[e[i]]);\n            }\n\n            return s;\n          }\n\n          throw \"degree: Wrong arguments.\";\n        }), h.addMethod(\"edges\", function (e) {\n          if (!arguments.length) return this.edgesArray.slice(0);\n          if (1 === arguments.length && (\"string\" == typeof e || \"number\" == typeof e)) return this.edgesIndex[e];\n\n          if (1 === arguments.length && \"[object Array]\" === Object.prototype.toString.call(e)) {\n            var t,\n                i,\n                n = [];\n\n            for (t = 0, i = e.length; t < i; t++) {\n              if (\"string\" != typeof e[t] && \"number\" != typeof e[t]) throw \"edges: Wrong arguments.\";\n              n.push(this.edgesIndex[e[t]]);\n            }\n\n            return n;\n          }\n\n          throw \"edges: Wrong arguments.\";\n        }), \"undefined\" != typeof sigma ? (sigma.classes = sigma.classes || Object.create(null), sigma.classes.graph = h) : (e.exports && (t = e.exports = h), t.graph = h);\n      }).call(this);\n    }).call(window);\n  },\n  124: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.classes\"), sigma.classes.camera = function (e, t, i, n) {\n          sigma.classes.dispatcher.extend(this), Object.defineProperty(this, \"graph\", {\n            value: t\n          }), Object.defineProperty(this, \"id\", {\n            value: e\n          }), Object.defineProperty(this, \"readPrefix\", {\n            value: \"read_cam\" + e + \":\"\n          }), Object.defineProperty(this, \"prefix\", {\n            value: \"cam\" + e + \":\"\n          }), this.x = 0, this.y = 0, this.ratio = 1, this.angle = 0, this.isAnimated = !1, this.settings = \"object\" == typeof n && n ? i.embedObject(n) : i;\n        }, sigma.classes.camera.prototype.goTo = function (t) {\n          if (!this.settings(\"enableCamera\")) return this;\n          var i,\n              n,\n              s = t || {},\n              r = [\"x\", \"y\", \"ratio\", \"angle\"];\n\n          for (i = 0, n = r.length; i < n; i++) {\n            if (s[r[i]] !== e) {\n              if (\"number\" != typeof s[r[i]] || isNaN(s[r[i]])) throw 'Value for \"' + r[i] + '\" is not a number.';\n              this[r[i]] = s[r[i]];\n            }\n          }\n\n          return this.dispatchEvent(\"coordinatesUpdated\"), this;\n        }, sigma.classes.camera.prototype.applyView = function (t, i, n) {\n          n = n || {}, i = i !== e ? i : this.prefix, t = t !== e ? t : this.readPrefix;\n          var s,\n              r,\n              a,\n              o = n.nodes || this.graph.nodes(),\n              d = n.edges || this.graph.edges(),\n              l = Math.cos(this.angle) / this.ratio,\n              h = Math.sin(this.angle) / this.ratio,\n              c = Math.pow(this.ratio, this.settings(\"nodesPowRatio\")),\n              u = Math.pow(this.ratio, this.settings(\"edgesPowRatio\")),\n              g = (n.width || 0) / 2 - this.x * l - this.y * h,\n              f = (n.height || 0) / 2 - this.y * l + this.x * h;\n\n          for (s = 0, r = o.length; s < r; s++) {\n            (a = o[s])[i + \"x\"] = (a[t + \"x\"] || 0) * l + (a[t + \"y\"] || 0) * h + g, a[i + \"y\"] = (a[t + \"y\"] || 0) * l - (a[t + \"x\"] || 0) * h + f, a[i + \"size\"] = (a[t + \"size\"] || 0) / c;\n          }\n\n          for (s = 0, r = d.length; s < r; s++) {\n            d[s][i + \"size\"] = (d[s][t + \"size\"] || 0) / u;\n          }\n\n          return this;\n        }, sigma.classes.camera.prototype.graphPosition = function (e, t, i) {\n          var n = 0,\n              s = 0,\n              r = Math.cos(this.angle),\n              a = Math.sin(this.angle);\n          return i || (n = -(this.x * r + this.y * a) / this.ratio, s = -(this.y * r - this.x * a) / this.ratio), {\n            x: (e * r + t * a) / this.ratio + n,\n            y: (t * r - e * a) / this.ratio + s\n          };\n        }, sigma.classes.camera.prototype.cameraPosition = function (e, t, i) {\n          var n = 0,\n              s = 0,\n              r = Math.cos(this.angle),\n              a = Math.sin(this.angle);\n          return i || (n = -(this.x * r + this.y * a) / this.ratio, s = -(this.y * r - this.x * a) / this.ratio), {\n            x: ((e - n) * r - (t - s) * a) * this.ratio,\n            y: ((t - s) * r + (e - n) * a) * this.ratio\n          };\n        }, sigma.classes.camera.prototype.getMatrix = function () {\n          var e = sigma.utils.matrices.scale(1 / this.ratio),\n              t = sigma.utils.matrices.rotation(this.angle),\n              i = sigma.utils.matrices.translation(-this.x, -this.y);\n          return sigma.utils.matrices.multiply(i, sigma.utils.matrices.multiply(t, e));\n        }, sigma.classes.camera.prototype.getRectangle = function (e, t) {\n          var i = this.cameraPosition(e, 0, !0),\n              n = this.cameraPosition(0, t, !0),\n              s = this.cameraPosition(e / 2, t / 2, !0),\n              r = this.cameraPosition(e / 4, 0, !0).x,\n              a = this.cameraPosition(0, t / 4, !0).y;\n          return {\n            x1: this.x - s.x - r,\n            y1: this.y - s.y - a,\n            x2: this.x - s.x + r + i.x,\n            y2: this.y - s.y - a + i.y,\n            height: Math.sqrt(Math.pow(n.x, 2) + Math.pow(n.y + 2 * a, 2))\n          };\n        };\n      }).call(this);\n    }).call(window);\n  },\n  125: function _(e, t, i) {\n    (function () {\n      (function (i) {\n        \"use strict\";\n\n        var n = {\n          pointToSquare: function pointToSquare(e) {\n            return {\n              x1: e.x - e.size,\n              y1: e.y - e.size,\n              x2: e.x + e.size,\n              y2: e.y - e.size,\n              height: 2 * e.size\n            };\n          },\n          isAxisAligned: function isAxisAligned(e) {\n            return e.x1 === e.x2 || e.y1 === e.y2;\n          },\n          axisAlignedTopPoints: function axisAlignedTopPoints(e) {\n            return e.y1 === e.y2 && e.x1 < e.x2 ? e : e.x1 === e.x2 && e.y2 > e.y1 ? {\n              x1: e.x1 - e.height,\n              y1: e.y1,\n              x2: e.x1,\n              y2: e.y1,\n              height: e.height\n            } : e.x1 === e.x2 && e.y2 < e.y1 ? {\n              x1: e.x1,\n              y1: e.y2,\n              x2: e.x2 + e.height,\n              y2: e.y2,\n              height: e.height\n            } : {\n              x1: e.x2,\n              y1: e.y1 - e.height,\n              x2: e.x1,\n              y2: e.y1 - e.height,\n              height: e.height\n            };\n          },\n          lowerLeftCoor: function lowerLeftCoor(e) {\n            var t = Math.sqrt(Math.pow(e.x2 - e.x1, 2) + Math.pow(e.y2 - e.y1, 2));\n            return {\n              x: e.x1 - (e.y2 - e.y1) * e.height / t,\n              y: e.y1 + (e.x2 - e.x1) * e.height / t\n            };\n          },\n          lowerRightCoor: function lowerRightCoor(e, t) {\n            return {\n              x: t.x - e.x1 + e.x2,\n              y: t.y - e.y1 + e.y2\n            };\n          },\n          rectangleCorners: function rectangleCorners(e) {\n            var t = this.lowerLeftCoor(e),\n                i = this.lowerRightCoor(e, t);\n            return [{\n              x: e.x1,\n              y: e.y1\n            }, {\n              x: e.x2,\n              y: e.y2\n            }, {\n              x: t.x,\n              y: t.y\n            }, {\n              x: i.x,\n              y: i.y\n            }];\n          },\n          splitSquare: function splitSquare(e) {\n            return [[{\n              x: e.x,\n              y: e.y\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y\n            }, {\n              x: e.x,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }], [{\n              x: e.x + e.width / 2,\n              y: e.y\n            }, {\n              x: e.x + e.width,\n              y: e.y\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height / 2\n            }], [{\n              x: e.x,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x,\n              y: e.y + e.height\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height\n            }], [{\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height\n            }]];\n          },\n          axis: function axis(e, t) {\n            return [{\n              x: e[1].x - e[0].x,\n              y: e[1].y - e[0].y\n            }, {\n              x: e[1].x - e[3].x,\n              y: e[1].y - e[3].y\n            }, {\n              x: t[0].x - t[2].x,\n              y: t[0].y - t[2].y\n            }, {\n              x: t[0].x - t[1].x,\n              y: t[0].y - t[1].y\n            }];\n          },\n          projection: function projection(e, t) {\n            var i = (e.x * t.x + e.y * t.y) / (Math.pow(t.x, 2) + Math.pow(t.y, 2));\n            return {\n              x: i * t.x,\n              y: i * t.y\n            };\n          },\n          axisCollision: function axisCollision(e, t, i) {\n            for (var n = [], s = [], r = 0; r < 4; r++) {\n              var a = this.projection(t[r], e),\n                  o = this.projection(i[r], e);\n              n.push(a.x * e.x + a.y * e.y), s.push(o.x * e.x + o.y * e.y);\n            }\n\n            var d = Math.max.apply(Math, n),\n                l = Math.max.apply(Math, s),\n                h = Math.min.apply(Math, n);\n            return Math.min.apply(Math, s) <= d && l >= h;\n          },\n          collision: function collision(e, t) {\n            for (var i = this.axis(e, t), n = !0, s = 0; s < 4; s++) {\n              n = n && this.axisCollision(i[s], e, t);\n            }\n\n            return n;\n          }\n        };\n\n        function s(e, t) {\n          for (var i = [], n = 0; n < 4; n++) {\n            e.x2 >= t[n][0].x && e.x1 <= t[n][1].x && e.y1 + e.height >= t[n][0].y && e.y1 <= t[n][2].y && i.push(n);\n          }\n\n          return i;\n        }\n\n        function r(e, t) {\n          for (var i = [], s = 0; s < 4; s++) {\n            n.collision(e, t[s]) && i.push(s);\n          }\n\n          return i;\n        }\n\n        function a(e, t) {\n          var i,\n              n,\n              s = t.level + 1,\n              r = Math.round(t.bounds.width / 2),\n              a = Math.round(t.bounds.height / 2),\n              o = Math.round(t.bounds.x),\n              l = Math.round(t.bounds.y);\n\n          switch (e) {\n            case 0:\n              i = o, n = l;\n              break;\n\n            case 1:\n              i = o + r, n = l;\n              break;\n\n            case 2:\n              i = o, n = l + a;\n              break;\n\n            case 3:\n              i = o + r, n = l + a;\n          }\n\n          return d({\n            x: i,\n            y: n,\n            width: r,\n            height: a\n          }, s, t.maxElements, t.maxLevel);\n        }\n\n        function o(e, t, n) {\n          if (n.level < n.maxLevel) for (var r = s(t, n.corners), d = 0, l = r.length; d < l; d++) {\n            n.nodes[r[d]] === i && (n.nodes[r[d]] = a(r[d], n)), o(e, t, n.nodes[r[d]]);\n          } else n.elements.push(e);\n        }\n\n        function d(e, t, i, s) {\n          return {\n            level: t || 0,\n            bounds: e,\n            corners: n.splitSquare(e),\n            maxElements: i || 20,\n            maxLevel: s || 4,\n            elements: [],\n            nodes: []\n          };\n        }\n\n        var l = function l() {\n          this._geom = n, this._tree = null, this._cache = {\n            query: !1,\n            result: !1\n          };\n        };\n\n        l.prototype.index = function (e, t) {\n          if (!t.bounds) throw \"sigma.classes.quad.index: bounds information not given.\";\n          var i = t.prefix || \"\";\n          this._tree = d(t.bounds, 0, t.maxElements, t.maxLevel);\n\n          for (var s = 0, r = e.length; s < r; s++) {\n            o(e[s], n.pointToSquare({\n              x: e[s][i + \"x\"],\n              y: e[s][i + \"y\"],\n              size: e[s][i + \"size\"]\n            }), this._tree);\n          }\n\n          return this._cache = {\n            query: !1,\n            result: !1\n          }, this._tree;\n        }, l.prototype.point = function (e, t) {\n          return this._tree && function e(t, n) {\n            if (n.level < n.maxLevel) {\n              var s = function (e, t) {\n                var i = t.x + t.width / 2,\n                    n = t.y + t.height / 2,\n                    s = e.y < n,\n                    r = e.x < i;\n                return s ? r ? 0 : 1 : r ? 2 : 3;\n              }(t, n.bounds);\n\n              return n.nodes[s] !== i ? e(t, n.nodes[s]) : [];\n            }\n\n            return n.elements;\n          }({\n            x: e,\n            y: t\n          }, this._tree) || [];\n        }, l.prototype.area = function (e) {\n          var t,\n              a,\n              o = JSON.stringify(e);\n          if (this._cache.query === o) return this._cache.result;\n          n.isAxisAligned(e) ? (t = s, a = n.axisAlignedTopPoints(e)) : (t = r, a = n.rectangleCorners(e));\n          var d = this._tree ? function e(t, n, s, r) {\n            if (r = r || {}, n.level < n.maxLevel) for (var a = s(t, n.corners), o = 0, d = a.length; o < d; o++) {\n              n.nodes[a[o]] !== i && e(t, n.nodes[a[o]], s, r);\n            } else for (var l = 0, h = n.elements.length; l < h; l++) {\n              r[n.elements[l].id] === i && (r[n.elements[l].id] = n.elements[l]);\n            }\n            return r;\n          }(a, this._tree, t) : [],\n              l = [];\n\n          for (var h in d) {\n            l.push(d[h]);\n          }\n\n          return this._cache.query = o, this._cache.result = l, l;\n        }, void 0 !== this.sigma ? (this.sigma.classes = this.sigma.classes || {}, this.sigma.classes.quad = l) : (e.exports && (t = e.exports = l), t.quad = l);\n      }).call(this);\n    }).call(window);\n  },\n  126: function _(e, t, i) {\n    (function () {\n      (function (i) {\n        \"use strict\";\n\n        var n = {\n          pointToSquare: function pointToSquare(e) {\n            return {\n              x1: e.x - e.size,\n              y1: e.y - e.size,\n              x2: e.x + e.size,\n              y2: e.y - e.size,\n              height: 2 * e.size\n            };\n          },\n          lineToSquare: function lineToSquare(e) {\n            return e.y1 < e.y2 ? e.x1 < e.x2 ? {\n              x1: e.x1 - e.size,\n              y1: e.y1 - e.size,\n              x2: e.x2 + e.size,\n              y2: e.y1 - e.size,\n              height: e.y2 - e.y1 + 2 * e.size\n            } : {\n              x1: e.x2 - e.size,\n              y1: e.y1 - e.size,\n              x2: e.x1 + e.size,\n              y2: e.y1 - e.size,\n              height: e.y2 - e.y1 + 2 * e.size\n            } : e.x1 < e.x2 ? {\n              x1: e.x1 - e.size,\n              y1: e.y2 - e.size,\n              x2: e.x2 + e.size,\n              y2: e.y2 - e.size,\n              height: e.y1 - e.y2 + 2 * e.size\n            } : {\n              x1: e.x2 - e.size,\n              y1: e.y2 - e.size,\n              x2: e.x1 + e.size,\n              y2: e.y2 - e.size,\n              height: e.y1 - e.y2 + 2 * e.size\n            };\n          },\n          quadraticCurveToSquare: function quadraticCurveToSquare(e, t) {\n            var i = sigma.utils.getPointOnQuadraticCurve(.5, e.x1, e.y1, e.x2, e.y2, t.x, t.y),\n                n = Math.min(e.x1, e.x2, i.x),\n                s = Math.max(e.x1, e.x2, i.x),\n                r = Math.min(e.y1, e.y2, i.y),\n                a = Math.max(e.y1, e.y2, i.y);\n            return {\n              x1: n - e.size,\n              y1: r - e.size,\n              x2: s + e.size,\n              y2: r - e.size,\n              height: a - r + 2 * e.size\n            };\n          },\n          selfLoopToSquare: function selfLoopToSquare(e) {\n            var t = sigma.utils.getSelfLoopControlPoints(e.x, e.y, e.size),\n                i = Math.min(e.x, t.x1, t.x2),\n                n = Math.max(e.x, t.x1, t.x2),\n                s = Math.min(e.y, t.y1, t.y2),\n                r = Math.max(e.y, t.y1, t.y2);\n            return {\n              x1: i - e.size,\n              y1: s - e.size,\n              x2: n + e.size,\n              y2: s - e.size,\n              height: r - s + 2 * e.size\n            };\n          },\n          isAxisAligned: function isAxisAligned(e) {\n            return e.x1 === e.x2 || e.y1 === e.y2;\n          },\n          axisAlignedTopPoints: function axisAlignedTopPoints(e) {\n            return e.y1 === e.y2 && e.x1 < e.x2 ? e : e.x1 === e.x2 && e.y2 > e.y1 ? {\n              x1: e.x1 - e.height,\n              y1: e.y1,\n              x2: e.x1,\n              y2: e.y1,\n              height: e.height\n            } : e.x1 === e.x2 && e.y2 < e.y1 ? {\n              x1: e.x1,\n              y1: e.y2,\n              x2: e.x2 + e.height,\n              y2: e.y2,\n              height: e.height\n            } : {\n              x1: e.x2,\n              y1: e.y1 - e.height,\n              x2: e.x1,\n              y2: e.y1 - e.height,\n              height: e.height\n            };\n          },\n          lowerLeftCoor: function lowerLeftCoor(e) {\n            var t = Math.sqrt(Math.pow(e.x2 - e.x1, 2) + Math.pow(e.y2 - e.y1, 2));\n            return {\n              x: e.x1 - (e.y2 - e.y1) * e.height / t,\n              y: e.y1 + (e.x2 - e.x1) * e.height / t\n            };\n          },\n          lowerRightCoor: function lowerRightCoor(e, t) {\n            return {\n              x: t.x - e.x1 + e.x2,\n              y: t.y - e.y1 + e.y2\n            };\n          },\n          rectangleCorners: function rectangleCorners(e) {\n            var t = this.lowerLeftCoor(e),\n                i = this.lowerRightCoor(e, t);\n            return [{\n              x: e.x1,\n              y: e.y1\n            }, {\n              x: e.x2,\n              y: e.y2\n            }, {\n              x: t.x,\n              y: t.y\n            }, {\n              x: i.x,\n              y: i.y\n            }];\n          },\n          splitSquare: function splitSquare(e) {\n            return [[{\n              x: e.x,\n              y: e.y\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y\n            }, {\n              x: e.x,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }], [{\n              x: e.x + e.width / 2,\n              y: e.y\n            }, {\n              x: e.x + e.width,\n              y: e.y\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height / 2\n            }], [{\n              x: e.x,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x,\n              y: e.y + e.height\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height\n            }], [{\n              x: e.x + e.width / 2,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height / 2\n            }, {\n              x: e.x + e.width / 2,\n              y: e.y + e.height\n            }, {\n              x: e.x + e.width,\n              y: e.y + e.height\n            }]];\n          },\n          axis: function axis(e, t) {\n            return [{\n              x: e[1].x - e[0].x,\n              y: e[1].y - e[0].y\n            }, {\n              x: e[1].x - e[3].x,\n              y: e[1].y - e[3].y\n            }, {\n              x: t[0].x - t[2].x,\n              y: t[0].y - t[2].y\n            }, {\n              x: t[0].x - t[1].x,\n              y: t[0].y - t[1].y\n            }];\n          },\n          projection: function projection(e, t) {\n            var i = (e.x * t.x + e.y * t.y) / (Math.pow(t.x, 2) + Math.pow(t.y, 2));\n            return {\n              x: i * t.x,\n              y: i * t.y\n            };\n          },\n          axisCollision: function axisCollision(e, t, i) {\n            for (var n = [], s = [], r = 0; r < 4; r++) {\n              var a = this.projection(t[r], e),\n                  o = this.projection(i[r], e);\n              n.push(a.x * e.x + a.y * e.y), s.push(o.x * e.x + o.y * e.y);\n            }\n\n            var d = Math.max.apply(Math, n),\n                l = Math.max.apply(Math, s),\n                h = Math.min.apply(Math, n);\n            return Math.min.apply(Math, s) <= d && l >= h;\n          },\n          collision: function collision(e, t) {\n            for (var i = this.axis(e, t), n = !0, s = 0; s < 4; s++) {\n              n = n && this.axisCollision(i[s], e, t);\n            }\n\n            return n;\n          }\n        };\n\n        function s(e, t) {\n          for (var i = [], n = 0; n < 4; n++) {\n            e.x2 >= t[n][0].x && e.x1 <= t[n][1].x && e.y1 + e.height >= t[n][0].y && e.y1 <= t[n][2].y && i.push(n);\n          }\n\n          return i;\n        }\n\n        function r(e, t) {\n          for (var i = [], s = 0; s < 4; s++) {\n            n.collision(e, t[s]) && i.push(s);\n          }\n\n          return i;\n        }\n\n        function a(e, t) {\n          var i,\n              n,\n              s = t.level + 1,\n              r = Math.round(t.bounds.width / 2),\n              a = Math.round(t.bounds.height / 2),\n              o = Math.round(t.bounds.x),\n              l = Math.round(t.bounds.y);\n\n          switch (e) {\n            case 0:\n              i = o, n = l;\n              break;\n\n            case 1:\n              i = o + r, n = l;\n              break;\n\n            case 2:\n              i = o, n = l + a;\n              break;\n\n            case 3:\n              i = o + r, n = l + a;\n          }\n\n          return d({\n            x: i,\n            y: n,\n            width: r,\n            height: a\n          }, s, t.maxElements, t.maxLevel);\n        }\n\n        function o(e, t, n) {\n          if (n.level < n.maxLevel) for (var r = s(t, n.corners), d = 0, l = r.length; d < l; d++) {\n            n.nodes[r[d]] === i && (n.nodes[r[d]] = a(r[d], n)), o(e, t, n.nodes[r[d]]);\n          } else n.elements.push(e);\n        }\n\n        function d(e, t, i, s) {\n          return {\n            level: t || 0,\n            bounds: e,\n            corners: n.splitSquare(e),\n            maxElements: i || 40,\n            maxLevel: s || 8,\n            elements: [],\n            nodes: []\n          };\n        }\n\n        var l = function l() {\n          this._geom = n, this._tree = null, this._cache = {\n            query: !1,\n            result: !1\n          }, this._enabled = !0;\n        };\n\n        l.prototype.index = function (e, t) {\n          if (!this._enabled) return this._tree;\n          if (!t.bounds) throw \"sigma.classes.edgequad.index: bounds information not given.\";\n          var i,\n              s,\n              r,\n              a,\n              l,\n              h = t.prefix || \"\";\n          this._tree = d(t.bounds, 0, t.maxElements, t.maxLevel);\n\n          for (var c = e.edges(), u = 0, g = c.length; u < g; u++) {\n            s = e.nodes(c[u].source), r = e.nodes(c[u].target), l = {\n              x1: s[h + \"x\"],\n              y1: s[h + \"y\"],\n              x2: r[h + \"x\"],\n              y2: r[h + \"y\"],\n              size: c[u][h + \"size\"] || 0\n            }, \"curve\" === c[u].type || \"curvedArrow\" === c[u].type ? s.id === r.id ? (a = {\n              x: s[h + \"x\"],\n              y: s[h + \"y\"],\n              size: s[h + \"size\"] || 0\n            }, o(c[u], n.selfLoopToSquare(a), this._tree)) : (i = sigma.utils.getQuadraticControlPoint(l.x1, l.y1, l.x2, l.y2), o(c[u], n.quadraticCurveToSquare(l, i), this._tree)) : o(c[u], n.lineToSquare(l), this._tree);\n          }\n\n          return this._cache = {\n            query: !1,\n            result: !1\n          }, this._tree;\n        }, l.prototype.point = function (e, t) {\n          return this._enabled && this._tree && function e(t, n) {\n            if (n.level < n.maxLevel) {\n              var s = function (e, t) {\n                var i = t.x + t.width / 2,\n                    n = t.y + t.height / 2,\n                    s = e.y < n,\n                    r = e.x < i;\n                return s ? r ? 0 : 1 : r ? 2 : 3;\n              }(t, n.bounds);\n\n              return n.nodes[s] !== i ? e(t, n.nodes[s]) : [];\n            }\n\n            return n.elements;\n          }({\n            x: e,\n            y: t\n          }, this._tree) || [];\n        }, l.prototype.area = function (e) {\n          if (!this._enabled) return [];\n          var t,\n              a,\n              o = JSON.stringify(e);\n          if (this._cache.query === o) return this._cache.result;\n          n.isAxisAligned(e) ? (t = s, a = n.axisAlignedTopPoints(e)) : (t = r, a = n.rectangleCorners(e));\n          var d = this._tree ? function e(t, n, s, r) {\n            if (r = r || {}, n.level < n.maxLevel) for (var a = s(t, n.corners), o = 0, d = a.length; o < d; o++) {\n              n.nodes[a[o]] !== i && e(t, n.nodes[a[o]], s, r);\n            } else for (var l = 0, h = n.elements.length; l < h; l++) {\n              r[n.elements[l].id] === i && (r[n.elements[l].id] = n.elements[l]);\n            }\n            return r;\n          }(a, this._tree, t) : [],\n              l = [];\n\n          for (var h in d) {\n            l.push(d[h]);\n          }\n\n          return this._cache.query = o, this._cache.result = l, l;\n        }, void 0 !== this.sigma ? (this.sigma.classes = this.sigma.classes || {}, this.sigma.classes.edgequad = l) : (e.exports && (t = e.exports = l), t.edgequad = l);\n      }).call(this);\n    }).call(window);\n  },\n  127: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.captors\"), sigma.captors.mouse = function (e, t, i) {\n          var n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l,\n              h,\n              c,\n              u,\n              g,\n              f = this,\n              m = e,\n              y = t,\n              p = i;\n\n          function x(e) {\n            var t, i, u;\n            if (p(\"mouseEnabled\") && (f.dispatchEvent(\"mousemove\", sigma.utils.mouseCoords(e)), l)) return h = !0, c = !0, g && clearTimeout(g), g = setTimeout(function () {\n              h = !1;\n            }, p(\"dragTimeout\")), sigma.misc.animation.killAll(y), y.isMoving = !0, u = y.cameraPosition(sigma.utils.getX(e) - o, sigma.utils.getY(e) - d, !0), t = n - u.x, i = s - u.y, t === y.x && i === y.y || (r = y.x, a = y.y, y.goTo({\n              x: t,\n              y: i\n            })), e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation(), !1;\n          }\n\n          function v(e) {\n            if (p(\"mouseEnabled\") && l) {\n              l = !1, g && clearTimeout(g), y.isMoving = !1;\n              var t = sigma.utils.getX(e),\n                  i = sigma.utils.getY(e);\n              h ? (sigma.misc.animation.killAll(y), sigma.misc.animation.camera(y, {\n                x: y.x + p(\"mouseInertiaRatio\") * (y.x - r),\n                y: y.y + p(\"mouseInertiaRatio\") * (y.y - a)\n              }, {\n                easing: \"quadraticOut\",\n                duration: p(\"mouseInertiaDuration\")\n              })) : o === t && d === i || y.goTo({\n                x: y.x,\n                y: y.y\n              }), f.dispatchEvent(\"mouseup\", sigma.utils.mouseCoords(e)), h = !1;\n            }\n          }\n\n          function b(e) {\n            if (p(\"mouseEnabled\")) switch (n = y.x, s = y.y, r = y.x, a = y.y, o = sigma.utils.getX(e), d = sigma.utils.getY(e), c = !1, u = new Date().getTime(), e.which) {\n              case 2:\n                break;\n\n              case 3:\n                f.dispatchEvent(\"rightclick\", sigma.utils.mouseCoords(e, o, d));\n                break;\n\n              default:\n                l = !0, f.dispatchEvent(\"mousedown\", sigma.utils.mouseCoords(e, o, d));\n            }\n          }\n\n          function w(e) {\n            p(\"mouseEnabled\") && f.dispatchEvent(\"mouseout\");\n          }\n\n          function E(e) {\n            if (p(\"mouseEnabled\")) {\n              var t = sigma.utils.mouseCoords(e);\n              t.isDragging = new Date().getTime() - u > 100 && c, f.dispatchEvent(\"click\", t);\n            }\n\n            return e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation(), !1;\n          }\n\n          function C(e) {\n            var t,\n                i,\n                n,\n                s = sigma.utils.getDelta(e);\n            if (p(\"mouseEnabled\") && p(\"mouseWheelEnabled\") && 0 !== s) return i = s > 0 ? 1 / p(\"zoomingRatio\") : p(\"zoomingRatio\"), t = y.cameraPosition(sigma.utils.getX(e) - sigma.utils.getCenter(e).x, sigma.utils.getY(e) - sigma.utils.getCenter(e).y, !0), n = {\n              duration: p(\"mouseZoomDuration\")\n            }, sigma.utils.zoomTo(y, t.x, t.y, i, n), e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation(), !1;\n          }\n\n          sigma.classes.dispatcher.extend(this), sigma.utils.doubleClick(m, \"click\", function (e) {\n            var t, i, n;\n            if (p(\"mouseEnabled\")) return i = 1 / p(\"doubleClickZoomingRatio\"), f.dispatchEvent(\"doubleclick\", sigma.utils.mouseCoords(e, o, d)), p(\"doubleClickEnabled\") && (t = y.cameraPosition(sigma.utils.getX(e) - sigma.utils.getCenter(e).x, sigma.utils.getY(e) - sigma.utils.getCenter(e).y, !0), n = {\n              duration: p(\"doubleClickZoomDuration\")\n            }, sigma.utils.zoomTo(y, t.x, t.y, i, n)), e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation(), !1;\n          }), m.addEventListener(\"DOMMouseScroll\", C, !1), m.addEventListener(\"mousewheel\", C, !1), m.addEventListener(\"mousemove\", x, !1), m.addEventListener(\"mousedown\", b, !1), m.addEventListener(\"click\", E, !1), m.addEventListener(\"mouseout\", w, !1), document.addEventListener(\"mouseup\", v, !1), this.kill = function () {\n            sigma.utils.unbindDoubleClick(m, \"click\"), m.removeEventListener(\"DOMMouseScroll\", C), m.removeEventListener(\"mousewheel\", C), m.removeEventListener(\"mousemove\", x), m.removeEventListener(\"mousedown\", b), m.removeEventListener(\"click\", E), m.removeEventListener(\"mouseout\", w), document.removeEventListener(\"mouseup\", v);\n          };\n        };\n      }).call(this);\n    }).call(window);\n  },\n  128: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.captors\"), sigma.captors.touch = function (e, t, i) {\n          var n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l,\n              h,\n              c,\n              u,\n              g,\n              f,\n              m,\n              y,\n              p,\n              x,\n              v = this,\n              b = e,\n              w = t,\n              E = i,\n              C = [];\n\n          function k(e) {\n            var t = sigma.utils.getOffset(b);\n            return {\n              x: e.pageX - t.left,\n              y: e.pageY - t.top\n            };\n          }\n\n          function M(e) {\n            var t, i, y, p, x, v;\n            if (E(\"touchEnabled\")) switch ((C = e.touches).length) {\n              case 1:\n                w.isMoving = !0, m = 1, n = w.x, s = w.y, o = w.x, d = w.y, x = k(C[0]), l = x.x, h = x.y;\n                break;\n\n              case 2:\n                return w.isMoving = !0, m = 2, x = k(C[0]), v = k(C[1]), t = x.x, y = x.y, i = v.x, p = v.y, o = w.x, d = w.y, r = w.angle, a = w.ratio, n = w.x, s = w.y, l = t, h = y, c = i, u = p, g = Math.atan2(u - h, c - l), f = Math.sqrt((u - h) * (u - h) + (c - l) * (c - l)), e.preventDefault(), !1;\n            }\n          }\n\n          function N(e) {\n            if (E(\"touchEnabled\")) {\n              C = e.touches;\n              var t = E(\"touchInertiaRatio\");\n\n              switch (x && (y = !1, clearTimeout(x)), m) {\n                case 2:\n                  if (1 === e.touches.length) {\n                    M(e), e.preventDefault();\n                    break;\n                  }\n\n                case 1:\n                  w.isMoving = !1, v.dispatchEvent(\"stopDrag\"), y && (p = !1, sigma.misc.animation.camera(w, {\n                    x: w.x + t * (w.x - o),\n                    y: w.y + t * (w.y - d)\n                  }, {\n                    easing: \"quadraticOut\",\n                    duration: E(\"touchInertiaDuration\")\n                  })), y = !1, m = 0;\n              }\n            }\n          }\n\n          function O(e) {\n            if (!p && E(\"touchEnabled\")) {\n              var t, i, b, M, N, O, z, P, S, T, j, I, A, _, L, D, q;\n\n              switch (C = e.touches, y = !0, x && clearTimeout(x), x = setTimeout(function () {\n                y = !1;\n              }, E(\"dragTimeout\")), m) {\n                case 1:\n                  t = (P = k(C[0])).x, b = P.y, T = w.cameraPosition(t - l, b - h, !0), _ = n - T.x, L = s - T.y, _ === w.x && L === w.y || (o = w.x, d = w.y, w.goTo({\n                    x: _,\n                    y: L\n                  }), v.dispatchEvent(\"mousemove\", sigma.utils.mouseCoords(e, P.x, P.y)), v.dispatchEvent(\"drag\"));\n                  break;\n\n                case 2:\n                  P = k(C[0]), S = k(C[1]), t = P.x, b = P.y, i = S.x, M = S.y, j = w.cameraPosition((l + c) / 2 - sigma.utils.getCenter(e).x, (h + u) / 2 - sigma.utils.getCenter(e).y, !0), z = w.cameraPosition((t + i) / 2 - sigma.utils.getCenter(e).x, (b + M) / 2 - sigma.utils.getCenter(e).y, !0), I = Math.atan2(M - b, i - t) - g, A = Math.sqrt((M - b) * (M - b) + (i - t) * (i - t)) / f, t = j.x, b = j.y, D = a / A, b *= A, q = r - I, i = (t *= A) * (N = Math.cos(-I)) + b * (O = Math.sin(-I)), b = M = b * N - t * O, _ = (t = i) - z.x + n, L = b - z.y + s, D === w.ratio && q === w.angle && _ === w.x && L === w.y || (o = w.x, d = w.y, w.angle, w.ratio, w.goTo({\n                    x: _,\n                    y: L,\n                    angle: q,\n                    ratio: D\n                  }), v.dispatchEvent(\"drag\"));\n              }\n\n              return e.preventDefault(), !1;\n            }\n          }\n\n          sigma.classes.dispatcher.extend(this), sigma.utils.doubleClick(b, \"touchstart\", function (e) {\n            var t, i, n;\n            if (e.touches && 1 === e.touches.length && E(\"touchEnabled\")) return p = !0, i = 1 / E(\"doubleClickZoomingRatio\"), t = k(e.touches[0]), v.dispatchEvent(\"doubleclick\", sigma.utils.mouseCoords(e, t.x, t.y)), E(\"doubleClickEnabled\") && (t = w.cameraPosition(t.x - sigma.utils.getCenter(e).x, t.y - sigma.utils.getCenter(e).y, !0), n = {\n              duration: E(\"doubleClickZoomDuration\"),\n              onComplete: function onComplete() {\n                p = !1;\n              }\n            }, sigma.utils.zoomTo(w, t.x, t.y, i, n)), e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation(), !1;\n          }), b.addEventListener(\"touchstart\", M, !1), b.addEventListener(\"touchend\", N, !1), b.addEventListener(\"touchcancel\", N, !1), b.addEventListener(\"touchleave\", N, !1), b.addEventListener(\"touchmove\", O, !1), this.kill = function () {\n            sigma.utils.unbindDoubleClick(b, \"touchstart\"), b.addEventListener(\"touchstart\", M), b.addEventListener(\"touchend\", N), b.addEventListener(\"touchcancel\", N), b.addEventListener(\"touchleave\", N), b.addEventListener(\"touchmove\", O);\n          };\n        };\n      }).call(this);\n    }).call(window);\n  },\n  129: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        if (\"undefined\" == typeof conrad) throw \"conrad is not declared\";\n        sigma.utils.pkg(\"sigma.renderers\"), sigma.renderers.canvas = function (e, t, i, n) {\n          if (\"object\" != typeof n) throw \"sigma.renderers.canvas: Wrong arguments.\";\n          if (!(n.container instanceof HTMLElement)) throw \"Container not found.\";\n          var s, r, a, o;\n\n          for (sigma.classes.dispatcher.extend(this), Object.defineProperty(this, \"conradId\", {\n            value: sigma.utils.id()\n          }), this.graph = e, this.camera = t, this.contexts = {}, this.domElements = {}, this.options = n, this.container = this.options.container, this.settings = \"object\" == typeof n.settings && n.settings ? i.embedObjects(n.settings) : i, this.nodesOnScreen = [], this.edgesOnScreen = [], this.jobs = {}, this.options.prefix = \"renderer\" + this.conradId + \":\", this.settings(\"batchEdgesDrawing\") ? (this.initDOM(\"canvas\", \"edges\"), this.initDOM(\"canvas\", \"scene\"), this.contexts.nodes = this.contexts.scene, this.contexts.labels = this.contexts.scene) : (this.initDOM(\"canvas\", \"scene\"), this.contexts.edges = this.contexts.scene, this.contexts.nodes = this.contexts.scene, this.contexts.labels = this.contexts.scene), this.initDOM(\"canvas\", \"mouse\"), this.contexts.hover = this.contexts.mouse, this.captors = [], s = 0, r = (a = this.options.captors || [sigma.captors.mouse, sigma.captors.touch]).length; s < r; s++) {\n            o = \"function\" == typeof a[s] ? a[s] : sigma.captors[a[s]], this.captors.push(new o(this.domElements.mouse, this.camera, this.settings));\n          }\n\n          sigma.misc.bindEvents.call(this, this.options.prefix), sigma.misc.drawHovers.call(this, this.options.prefix), this.resize(!1);\n        }, sigma.renderers.canvas.prototype.render = function (t) {\n          t = t || {};\n          var i,\n              n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l,\n              h,\n              c,\n              u,\n              g,\n              f,\n              m = {},\n              y = this.graph,\n              p = this.graph.nodes,\n              x = (this.options.prefix, this.settings(t, \"drawEdges\")),\n              v = this.settings(t, \"drawNodes\"),\n              b = this.settings(t, \"drawLabels\"),\n              w = this.settings(t, \"drawEdgeLabels\"),\n              E = this.settings.embedObjects(t, {\n            prefix: this.options.prefix\n          });\n\n          for (s in this.resize(!1), this.settings(t, \"hideEdgesOnMove\") && (this.camera.isAnimated || this.camera.isMoving) && (x = !1), this.camera.applyView(e, this.options.prefix, {\n            width: this.width,\n            height: this.height\n          }), this.clear(), this.jobs) {\n            conrad.hasJob(s) && conrad.killJob(s);\n          }\n\n          for (this.edgesOnScreen = [], this.nodesOnScreen = this.camera.quadtree.area(this.camera.getRectangle(this.width, this.height)), i = this.nodesOnScreen, n = 0, r = i.length; n < r; n++) {\n            m[i[n].id] = i[n];\n          }\n\n          if (x) {\n            for (i = y.edges(), n = 0, r = i.length; n < r; n++) {\n              !m[(a = i[n]).source] && !m[a.target] || a.hidden || p(a.source).hidden || p(a.target).hidden || this.edgesOnScreen.push(a);\n            }\n\n            if (this.settings(t, \"batchEdgesDrawing\")) o = \"edges_\" + this.conradId, g = E(\"canvasEdgesBatchSize\"), r = (c = this.edgesOnScreen).length, h = 0, d = Math.min(c.length, h + g), l = function l() {\n              for (f = this.contexts.edges.globalCompositeOperation, this.contexts.edges.globalCompositeOperation = \"destination-over\", u = sigma.canvas.edges, n = h; n < d; n++) {\n                a = c[n], (u[a.type || this.settings(t, \"defaultEdgeType\")] || u.def)(a, y.nodes(a.source), y.nodes(a.target), this.contexts.edges, E);\n              }\n\n              if (w) for (u = sigma.canvas.edges.labels, n = h; n < d; n++) {\n                (a = c[n]).hidden || (u[a.type || this.settings(t, \"defaultEdgeType\")] || u.def)(a, y.nodes(a.source), y.nodes(a.target), this.contexts.labels, E);\n              }\n              return this.contexts.edges.globalCompositeOperation = f, d === c.length ? (delete this.jobs[o], !1) : (h = d + 1, d = Math.min(c.length, h + g), !0);\n            }, this.jobs[o] = l, conrad.addJob(o, l.bind(this));else {\n              for (u = sigma.canvas.edges, i = this.edgesOnScreen, n = 0, r = i.length; n < r; n++) {\n                a = i[n], (u[a.type || this.settings(t, \"defaultEdgeType\")] || u.def)(a, y.nodes(a.source), y.nodes(a.target), this.contexts.edges, E);\n              }\n\n              if (w) for (u = sigma.canvas.edges.labels, i = this.edgesOnScreen, n = 0, r = i.length; n < r; n++) {\n                i[n].hidden || (u[i[n].type || this.settings(t, \"defaultEdgeType\")] || u.def)(i[n], y.nodes(i[n].source), y.nodes(i[n].target), this.contexts.labels, E);\n              }\n            }\n          }\n\n          if (v) for (u = sigma.canvas.nodes, i = this.nodesOnScreen, n = 0, r = i.length; n < r; n++) {\n            i[n].hidden || (u[i[n].type || this.settings(t, \"defaultNodeType\")] || u.def)(i[n], this.contexts.nodes, E);\n          }\n          if (b) for (u = sigma.canvas.labels, i = this.nodesOnScreen, n = 0, r = i.length; n < r; n++) {\n            i[n].hidden || (u[i[n].type || this.settings(t, \"defaultNodeType\")] || u.def)(i[n], this.contexts.labels, E);\n          }\n          return this.dispatchEvent(\"render\"), this;\n        }, sigma.renderers.canvas.prototype.initDOM = function (e, t) {\n          var i = document.createElement(e);\n          i.style.position = \"absolute\", i.setAttribute(\"class\", \"sigma-\" + t), this.domElements[t] = i, this.container.appendChild(i), \"canvas\" === e.toLowerCase() && (this.contexts[t] = i.getContext(\"2d\"));\n        }, sigma.renderers.canvas.prototype.resize = function (t, i) {\n          var n,\n              s = this.width,\n              r = this.height,\n              a = sigma.utils.getPixelRatio();\n          if (t !== e && i !== e ? (this.width = t, this.height = i) : (this.width = this.container.offsetWidth, this.height = this.container.offsetHeight, t = this.width, i = this.height), s !== this.width || r !== this.height) for (n in this.domElements) {\n            this.domElements[n].style.width = t + \"px\", this.domElements[n].style.height = i + \"px\", \"canvas\" === this.domElements[n].tagName.toLowerCase() && (this.domElements[n].setAttribute(\"width\", t * a + \"px\"), this.domElements[n].setAttribute(\"height\", i * a + \"px\"), 1 !== a && this.contexts[n].scale(a, a));\n          }\n          return this;\n        }, sigma.renderers.canvas.prototype.clear = function () {\n          for (var e in this.contexts) {\n            this.contexts[e].clearRect(0, 0, this.width, this.height);\n          }\n\n          return this;\n        }, sigma.renderers.canvas.prototype.kill = function () {\n          for (var e, t; t = this.captors.pop();) {\n            t.kill();\n          }\n\n          for (e in delete this.captors, this.domElements) {\n            this.domElements[e].parentNode.removeChild(this.domElements[e]), delete this.domElements[e], delete this.contexts[e];\n          }\n\n          delete this.domElements, delete this.contexts;\n        }, sigma.utils.pkg(\"sigma.canvas.nodes\"), sigma.utils.pkg(\"sigma.canvas.edges\"), sigma.utils.pkg(\"sigma.canvas.labels\");\n      }).call(this);\n    }).call(window);\n  },\n  130: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.canvas.labels\"), sigma.canvas.labels.def = function (e, t, i) {\n          var n,\n              s = i(\"prefix\") || \"\",\n              r = e[s + \"size\"];\n          r < i(\"labelThreshold\") || e.label && \"string\" == typeof e.label && (n = \"fixed\" === i(\"labelSize\") ? i(\"defaultLabelSize\") : i(\"labelSizeRatio\") * r, t.font = (i(\"fontStyle\") ? i(\"fontStyle\") + \" \" : \"\") + n + \"px \" + i(\"font\"), t.fillStyle = \"node\" === i(\"labelColor\") ? e.color || i(\"defaultNodeColor\") : i(\"defaultLabelColor\"), t.fillText(e.label, Math.round(e[s + \"x\"] + r + 3), Math.round(e[s + \"y\"] + n / 3)));\n        };\n      }).call(this);\n    }).call(window);\n  },\n  131: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.canvas.hovers\"), sigma.canvas.hovers.def = function (e, t, i) {\n          var n,\n              s,\n              r,\n              a,\n              o,\n              d = i(\"hoverFontStyle\") || i(\"fontStyle\"),\n              l = i(\"prefix\") || \"\",\n              h = e[l + \"size\"],\n              c = \"fixed\" === i(\"labelSize\") ? i(\"defaultLabelSize\") : i(\"labelSizeRatio\") * h;\n          t.font = (d ? d + \" \" : \"\") + c + \"px \" + (i(\"hoverFont\") || i(\"font\")), t.beginPath(), t.fillStyle = \"node\" === i(\"labelHoverBGColor\") ? e.color || i(\"defaultNodeColor\") : i(\"defaultHoverLabelBGColor\"), e.label && i(\"labelHoverShadow\") && (t.shadowOffsetX = 0, t.shadowOffsetY = 0, t.shadowBlur = 8, t.shadowColor = i(\"labelHoverShadowColor\")), e.label && \"string\" == typeof e.label && (n = Math.round(e[l + \"x\"] - c / 2 - 2), s = Math.round(e[l + \"y\"] - c / 2 - 2), r = Math.round(t.measureText(e.label).width + c / 2 + h + 7), a = Math.round(c + 4), o = Math.round(c / 2 + 2), t.moveTo(n, s + o), t.arcTo(n, s, n + o, s, o), t.lineTo(n + r, s), t.lineTo(n + r, s + a), t.lineTo(n + o, s + a), t.arcTo(n, s + a, n, s + a - o, o), t.lineTo(n, s + o), t.closePath(), t.fill(), t.shadowOffsetX = 0, t.shadowOffsetY = 0, t.shadowBlur = 0), i(\"borderSize\") > 0 && (t.beginPath(), t.fillStyle = \"node\" === i(\"nodeBorderColor\") ? e.color || i(\"defaultNodeColor\") : i(\"defaultNodeBorderColor\"), t.arc(e[l + \"x\"], e[l + \"y\"], h + i(\"borderSize\"), 0, 2 * Math.PI, !0), t.closePath(), t.fill()), (sigma.canvas.nodes[e.type] || sigma.canvas.nodes.def)(e, t, i), e.label && \"string\" == typeof e.label && (t.fillStyle = \"node\" === i(\"labelHoverColor\") ? e.color || i(\"defaultNodeColor\") : i(\"defaultLabelHoverColor\"), t.fillText(e.label, Math.round(e[l + \"x\"] + h + 3), Math.round(e[l + \"y\"] + c / 3)));\n        };\n      }).call(this);\n    }).call(window);\n  },\n  132: function _(e, t) {\n    (function () {\n      !function () {\n        \"use strict\";\n\n        sigma.utils.pkg(\"sigma.canvas.nodes\"), sigma.canvas.nodes.def = function (e, t, i) {\n          var n = i(\"prefix\") || \"\";\n          t.fillStyle = e.color || i(\"defaultNodeColor\"), t.beginPath(), t.arc(e[n + \"x\"], e[n + \"y\"], e[n + \"size\"], 0, 2 * Math.PI, !0), t.closePath(), t.fill();\n        };\n      }();\n    }).call(window);\n  },\n  133: function _(e, t) {\n    (function () {\n      !function () {\n        \"use strict\";\n\n        sigma.utils.pkg(\"sigma.canvas.edges\"), sigma.canvas.edges.def = function (e, t, i, n, s) {\n          var r = e.color,\n              a = s(\"prefix\") || \"\",\n              o = e[a + \"size\"] || 1,\n              d = s(\"edgeColor\"),\n              l = s(\"defaultNodeColor\"),\n              h = s(\"defaultEdgeColor\");\n          if (!r) switch (d) {\n            case \"source\":\n              r = t.color || l;\n              break;\n\n            case \"target\":\n              r = i.color || l;\n              break;\n\n            default:\n              r = h;\n          }\n          n.strokeStyle = r, n.lineWidth = o, n.beginPath(), n.moveTo(t[a + \"x\"], t[a + \"y\"]), n.lineTo(i[a + \"x\"], i[a + \"y\"]), n.stroke();\n        };\n      }();\n    }).call(window);\n  },\n  134: function _(e, t) {\n    (function () {\n      !function () {\n        \"use strict\";\n\n        sigma.utils.pkg(\"sigma.canvas.edgehovers\"), sigma.canvas.edgehovers.def = function (e, t, i, n, s) {\n          var r = e.color,\n              a = s(\"prefix\") || \"\",\n              o = e[a + \"size\"] || 1,\n              d = s(\"edgeColor\"),\n              l = s(\"defaultNodeColor\"),\n              h = s(\"defaultEdgeColor\");\n          if (!r) switch (d) {\n            case \"source\":\n              r = t.color || l;\n              break;\n\n            case \"target\":\n              r = i.color || l;\n              break;\n\n            default:\n              r = h;\n          }\n          r = \"edge\" === s(\"edgeHoverColor\") ? e.hover_color || r : e.hover_color || s(\"defaultEdgeHoverColor\") || r, o *= s(\"edgeHoverSizeRatio\"), n.strokeStyle = r, n.lineWidth = o, n.beginPath(), n.moveTo(t[a + \"x\"], t[a + \"y\"]), n.lineTo(i[a + \"x\"], i[a + \"y\"]), n.stroke();\n        };\n      }();\n    }).call(window);\n  },\n  135: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.canvas.extremities\"), sigma.canvas.extremities.def = function (e, t, i, n, s) {\n          (sigma.canvas.hovers[t.type] || sigma.canvas.hovers.def)(t, n, s), (sigma.canvas.hovers[i.type] || sigma.canvas.hovers.def)(i, n, s);\n        };\n      }).call(this);\n    }).call(window);\n  },\n  136: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.middlewares\"), sigma.utils.pkg(\"sigma.utils\"), sigma.middlewares.rescale = function (e, t, i) {\n          var n,\n              s,\n              r,\n              a,\n              o,\n              d,\n              l,\n              h,\n              c = this.graph.nodes(),\n              u = this.graph.edges(),\n              g = this.settings.embedObjects(i || {}),\n              f = g(\"bounds\") || sigma.utils.getBoundaries(this.graph, e, !0),\n              m = f.minX,\n              y = f.minY,\n              p = f.maxX,\n              x = f.maxY,\n              v = f.sizeMax,\n              b = f.weightMax,\n              w = g(\"width\") || 1,\n              E = g(\"height\") || 1,\n              C = g(\"autoRescale\"),\n              k = {\n            nodePosition: 1,\n            nodeSize: 1,\n            edgeSize: 1\n          };\n\n          for (C instanceof Array || (C = [\"nodePosition\", \"nodeSize\", \"edgeSize\"]), n = 0, s = C.length; n < s; n++) {\n            if (!k[C[n]]) throw new Error('The rescale setting \"' + C[n] + '\" is not recognized.');\n          }\n\n          var M = ~C.indexOf(\"nodePosition\"),\n              N = ~C.indexOf(\"nodeSize\"),\n              O = ~C.indexOf(\"edgeSize\");\n\n          for (l = \"outside\" === g(\"scalingMode\") ? Math.max(w / Math.max(p - m, 1), E / Math.max(x - y, 1)) : Math.min(w / Math.max(p - m, 1), E / Math.max(x - y, 1)), p += h = (g(\"rescaleIgnoreSize\") ? 0 : (g(\"maxNodeSize\") || v) / l) + (g(\"sideMargin\") || 0), m -= h, x += h, y -= h, l = \"outside\" === g(\"scalingMode\") ? Math.max(w / Math.max(p - m, 1), E / Math.max(x - y, 1)) : Math.min(w / Math.max(p - m, 1), E / Math.max(x - y, 1)), g(\"maxNodeSize\") || g(\"minNodeSize\") ? g(\"maxNodeSize\") === g(\"minNodeSize\") ? (r = 0, a = +g(\"maxNodeSize\")) : (r = (g(\"maxNodeSize\") - g(\"minNodeSize\")) / v, a = +g(\"minNodeSize\")) : (r = 1, a = 0), g(\"maxEdgeSize\") || g(\"minEdgeSize\") ? g(\"maxEdgeSize\") === g(\"minEdgeSize\") ? (o = 0, d = +g(\"minEdgeSize\")) : (o = (g(\"maxEdgeSize\") - g(\"minEdgeSize\")) / b, d = +g(\"minEdgeSize\")) : (o = 1, d = 0), n = 0, s = u.length; n < s; n++) {\n            u[n][t + \"size\"] = u[n][e + \"size\"] * (O ? o : 1) + (O ? d : 0);\n          }\n\n          for (n = 0, s = c.length; n < s; n++) {\n            c[n][t + \"size\"] = c[n][e + \"size\"] * (N ? r : 1) + (N ? a : 0), c[n][t + \"x\"] = (c[n][e + \"x\"] - (p + m) / 2) * (M ? l : 1), c[n][t + \"y\"] = (c[n][e + \"y\"] - (x + y) / 2) * (M ? l : 1);\n          }\n        }, sigma.utils.getBoundaries = function (e, t, i) {\n          var n,\n              s,\n              r = e.edges(),\n              a = e.nodes(),\n              o = -1 / 0,\n              d = -1 / 0,\n              l = 1 / 0,\n              h = 1 / 0,\n              c = -1 / 0,\n              u = -1 / 0;\n          if (i) for (n = 0, s = r.length; n < s; n++) {\n            o = Math.max(r[n][t + \"size\"], o);\n          }\n\n          for (n = 0, s = a.length; n < s; n++) {\n            d = Math.max(a[n][t + \"size\"], d), c = Math.max(a[n][t + \"x\"], c), l = Math.min(a[n][t + \"x\"], l), u = Math.max(a[n][t + \"y\"], u), h = Math.min(a[n][t + \"y\"], h);\n          }\n\n          return {\n            weightMax: o = o || 1,\n            sizeMax: d = d || 1,\n            minX: l,\n            minY: h,\n            maxX: c,\n            maxY: u\n          };\n        };\n      }).call(this);\n    }).call(window);\n  },\n  137: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.middlewares\"), sigma.middlewares.copy = function (e, t) {\n          var i, n, s;\n\n          if (t + \"\" != e + \"\") {\n            for (i = 0, n = (s = this.graph.nodes()).length; i < n; i++) {\n              s[i][t + \"x\"] = s[i][e + \"x\"], s[i][t + \"y\"] = s[i][e + \"y\"], s[i][t + \"size\"] = s[i][e + \"size\"];\n            }\n\n            for (i = 0, n = (s = this.graph.edges()).length; i < n; i++) {\n              s[i][t + \"size\"] = s[i][e + \"size\"];\n            }\n          }\n        };\n      }).call(this);\n    }).call(window);\n  },\n  138: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.misc.animation.running\");\n        var t,\n            i = (t = 0, function () {\n          return \"\" + ++t;\n        });\n        sigma.misc.animation.camera = function (t, n, s) {\n          if (!(t instanceof sigma.classes.camera && \"object\" == typeof n && n)) throw \"animation.camera: Wrong arguments.\";\n          if (\"number\" != typeof n.x && \"number\" != typeof n.y && \"number\" != typeof n.ratio && \"number\" != typeof n.angle) throw \"There must be at least one valid coordinate in the given val.\";\n\n          var _r,\n              a,\n              o,\n              d,\n              l,\n              h = s || {},\n              c = sigma.utils.dateNow();\n\n          return l = {\n            x: t.x,\n            y: t.y,\n            ratio: t.ratio,\n            angle: t.angle\n          }, h.duration, d = \"function\" != typeof h.easing ? sigma.utils.easings[h.easing || \"quadraticInOut\"] : h.easing, _r = function r() {\n            var i,\n                s = h.duration ? (sigma.utils.dateNow() - c) / h.duration : 1;\n            s >= 1 ? (t.isAnimated = !1, t.goTo({\n              x: n.x !== e ? n.x : l.x,\n              y: n.y !== e ? n.y : l.y,\n              ratio: n.ratio !== e ? n.ratio : l.ratio,\n              angle: n.angle !== e ? n.angle : l.angle\n            }), cancelAnimationFrame(a), delete sigma.misc.animation.running[a], \"function\" == typeof h.onComplete && h.onComplete()) : (i = d(s), t.isAnimated = !0, t.goTo({\n              x: n.x !== e ? l.x + (n.x - l.x) * i : l.x,\n              y: n.y !== e ? l.y + (n.y - l.y) * i : l.y,\n              ratio: n.ratio !== e ? l.ratio + (n.ratio - l.ratio) * i : l.ratio,\n              angle: n.angle !== e ? l.angle + (n.angle - l.angle) * i : l.angle\n            }), \"function\" == typeof h.onNewFrame && h.onNewFrame(), o.frameId = requestAnimationFrame(_r));\n          }, a = i(), o = {\n            frameId: requestAnimationFrame(_r),\n            target: t,\n            type: \"camera\",\n            options: h,\n            fn: _r\n          }, sigma.misc.animation.running[a] = o, a;\n        }, sigma.misc.animation.kill = function (e) {\n          if (1 !== arguments.length || \"number\" != typeof e) throw \"animation.kill: Wrong arguments.\";\n          var t = sigma.misc.animation.running[e];\n          return t && (cancelAnimationFrame(e), delete sigma.misc.animation.running[t.frameId], \"camera\" === t.type && (t.target.isAnimated = !1), \"function\" == typeof (t.options || {}).onComplete && t.options.onComplete()), this;\n        }, sigma.misc.animation.killAll = function (e) {\n          var t,\n              i,\n              n = 0,\n              s = \"string\" == typeof e ? e : null,\n              r = \"object\" == typeof e ? e : null,\n              a = sigma.misc.animation.running;\n\n          for (i in a) {\n            s && a[i].type !== s || r && a[i].target !== r || (t = sigma.misc.animation.running[i], cancelAnimationFrame(t.frameId), delete sigma.misc.animation.running[i], \"camera\" === t.type && (t.target.isAnimated = !1), n++, \"function\" == typeof (t.options || {}).onComplete && t.options.onComplete());\n          }\n\n          return n;\n        }, sigma.misc.animation.has = function (e) {\n          var t,\n              i = \"string\" == typeof e ? e : null,\n              n = \"object\" == typeof e ? e : null,\n              s = sigma.misc.animation.running;\n\n          for (t in s) {\n            if (!(i && s[t].type !== i || n && s[t].target !== n)) return !0;\n          }\n\n          return !1;\n        };\n      }).call(this);\n    }).call(window);\n  },\n  139: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.misc\"), sigma.misc.bindEvents = function (t) {\n          var i,\n              n,\n              s,\n              r,\n              a = this;\n\n          function o(e) {\n            e && (s = \"x\" in e.data ? e.data.x : s, r = \"y\" in e.data ? e.data.y : r);\n            var i,\n                n,\n                o,\n                d,\n                l,\n                h,\n                c,\n                u,\n                g = [],\n                f = s + a.width / 2,\n                m = r + a.height / 2,\n                y = a.camera.cameraPosition(s, r),\n                p = a.camera.quadtree.point(y.x, y.y);\n            if (p.length) for (i = 0, o = p.length; i < o; i++) {\n              if (l = (d = p[i])[t + \"x\"], h = d[t + \"y\"], c = d[t + \"size\"], !d.hidden && f > l - c && f < l + c && m > h - c && m < h + c && Math.sqrt(Math.pow(f - l, 2) + Math.pow(m - h, 2)) < c) {\n                for (u = !1, n = 0; n < g.length; n++) {\n                  if (d.size > g[n].size) {\n                    g.splice(n, 0, d), u = !0;\n                    break;\n                  }\n                }\n\n                u || g.push(d);\n              }\n            }\n            return g;\n          }\n\n          function d(i) {\n            if (!a.settings(\"enableEdgeHovering\")) return [];\n            var n = sigma.renderers.canvas && a instanceof sigma.renderers.canvas;\n            if (!n) throw new Error(\"The edge events feature is not compatible with the WebGL renderer\");\n            i && (s = \"x\" in i.data ? i.data.x : s, r = \"y\" in i.data ? i.data.y : r);\n            var o,\n                d,\n                l,\n                h,\n                c,\n                u,\n                g,\n                f,\n                m,\n                y,\n                p = a.settings(\"edgeHoverPrecision\"),\n                x = {},\n                v = [],\n                b = s + a.width / 2,\n                w = r + a.height / 2,\n                E = a.camera.cameraPosition(s, r),\n                C = [];\n            if (n) for (o = 0, l = (h = a.camera.quadtree.area(a.camera.getRectangle(a.width, a.height))).length; o < l; o++) {\n              x[h[o].id] = h[o];\n            }\n\n            function k(e, t) {\n              for (y = !1, d = 0; d < e.length; d++) {\n                if (t.size > e[d].size) {\n                  e.splice(d, 0, t), y = !0;\n                  break;\n                }\n              }\n\n              y || e.push(t);\n            }\n\n            if (a.camera.edgequadtree !== e && (C = a.camera.edgequadtree.point(E.x, E.y)), C.length) for (o = 0, l = C.length; o < l; o++) {\n              c = C[o], g = a.graph.nodes(c.source), f = a.graph.nodes(c.target), u = c[t + \"size\"] || c[\"read_\" + t + \"size\"], !c.hidden && !g.hidden && !f.hidden && (!n || x[c.source] || x[c.target]) && sigma.utils.getDistance(g[t + \"x\"], g[t + \"y\"], b, w) > g[t + \"size\"] && sigma.utils.getDistance(f[t + \"x\"], f[t + \"y\"], b, w) > f[t + \"size\"] && (\"curve\" == c.type || \"curvedArrow\" == c.type ? g.id === f.id ? (m = sigma.utils.getSelfLoopControlPoints(g[t + \"x\"], g[t + \"y\"], g[t + \"size\"]), sigma.utils.isPointOnBezierCurve(b, w, g[t + \"x\"], g[t + \"y\"], f[t + \"x\"], f[t + \"y\"], m.x1, m.y1, m.x2, m.y2, Math.max(u, p)) && k(v, c)) : (m = sigma.utils.getQuadraticControlPoint(g[t + \"x\"], g[t + \"y\"], f[t + \"x\"], f[t + \"y\"]), sigma.utils.isPointOnQuadraticCurve(b, w, g[t + \"x\"], g[t + \"y\"], f[t + \"x\"], f[t + \"y\"], m.x, m.y, Math.max(u, p)) && k(v, c)) : sigma.utils.isPointOnSegment(b, w, g[t + \"x\"], g[t + \"y\"], f[t + \"x\"], f[t + \"y\"], Math.max(u, p)) && k(v, c));\n            }\n            return v;\n          }\n\n          function l(e) {\n            var t,\n                i,\n                n = {},\n                s = {};\n\n            function r(e) {\n              if (a.settings(\"eventsEnabled\")) {\n                t = o(e), i = d(e);\n                var r,\n                    l,\n                    h,\n                    c,\n                    u = [],\n                    g = [],\n                    f = {},\n                    m = t.length,\n                    y = [],\n                    p = [],\n                    x = {},\n                    v = i.length;\n\n                for (r = 0; r < m; r++) {\n                  f[(h = t[r]).id] = h, n[h.id] || (g.push(h), n[h.id] = h);\n                }\n\n                for (l in n) {\n                  f[l] || (u.push(n[l]), delete n[l]);\n                }\n\n                for (r = 0, m = g.length; r < m; r++) {\n                  a.dispatchEvent(\"overNode\", {\n                    node: g[r],\n                    captor: e.data\n                  });\n                }\n\n                for (r = 0, m = u.length; r < m; r++) {\n                  a.dispatchEvent(\"outNode\", {\n                    node: u[r],\n                    captor: e.data\n                  });\n                }\n\n                for (g.length && a.dispatchEvent(\"overNodes\", {\n                  nodes: g,\n                  captor: e.data\n                }), u.length && a.dispatchEvent(\"outNodes\", {\n                  nodes: u,\n                  captor: e.data\n                }), r = 0; r < v; r++) {\n                  x[(c = i[r]).id] = c, s[c.id] || (p.push(c), s[c.id] = c);\n                }\n\n                for (l in s) {\n                  x[l] || (y.push(s[l]), delete s[l]);\n                }\n\n                for (r = 0, v = p.length; r < v; r++) {\n                  a.dispatchEvent(\"overEdge\", {\n                    edge: p[r],\n                    captor: e.data\n                  });\n                }\n\n                for (r = 0, v = y.length; r < v; r++) {\n                  a.dispatchEvent(\"outEdge\", {\n                    edge: y[r],\n                    captor: e.data\n                  });\n                }\n\n                p.length && a.dispatchEvent(\"overEdges\", {\n                  edges: p,\n                  captor: e.data\n                }), y.length && a.dispatchEvent(\"outEdges\", {\n                  edges: y,\n                  captor: e.data\n                });\n              }\n            }\n\n            e.bind(\"click\", function (e) {\n              a.settings(\"eventsEnabled\") && (a.dispatchEvent(\"click\", e.data), t = o(e), i = d(e), t.length ? (a.dispatchEvent(\"clickNode\", {\n                node: t[0],\n                captor: e.data\n              }), a.dispatchEvent(\"clickNodes\", {\n                node: t,\n                captor: e.data\n              })) : i.length ? (a.dispatchEvent(\"clickEdge\", {\n                edge: i[0],\n                captor: e.data\n              }), a.dispatchEvent(\"clickEdges\", {\n                edge: i,\n                captor: e.data\n              })) : a.dispatchEvent(\"clickStage\", {\n                captor: e.data\n              }));\n            }), e.bind(\"mousedown\", r), e.bind(\"mouseup\", r), e.bind(\"mousemove\", r), e.bind(\"mouseout\", function (e) {\n              if (a.settings(\"eventsEnabled\")) {\n                var t,\n                    i,\n                    r,\n                    o,\n                    d = [],\n                    l = [];\n\n                for (t in n) {\n                  d.push(n[t]);\n                }\n\n                for (n = {}, i = 0, r = d.length; i < r; i++) {\n                  a.dispatchEvent(\"outNode\", {\n                    node: d[i],\n                    captor: e.data\n                  });\n                }\n\n                for (d.length && a.dispatchEvent(\"outNodes\", {\n                  nodes: d,\n                  captor: e.data\n                }), s = {}, i = 0, o = l.length; i < o; i++) {\n                  a.dispatchEvent(\"outEdge\", {\n                    edge: l[i],\n                    captor: e.data\n                  });\n                }\n\n                l.length && a.dispatchEvent(\"outEdges\", {\n                  edges: l,\n                  captor: e.data\n                });\n              }\n            }), e.bind(\"doubleclick\", function (e) {\n              a.settings(\"eventsEnabled\") && (a.dispatchEvent(\"doubleClick\", e.data), t = o(e), i = d(e), t.length ? (a.dispatchEvent(\"doubleClickNode\", {\n                node: t[0],\n                captor: e.data\n              }), a.dispatchEvent(\"doubleClickNodes\", {\n                node: t,\n                captor: e.data\n              })) : i.length ? (a.dispatchEvent(\"doubleClickEdge\", {\n                edge: i[0],\n                captor: e.data\n              }), a.dispatchEvent(\"doubleClickEdges\", {\n                edge: i,\n                captor: e.data\n              })) : a.dispatchEvent(\"doubleClickStage\", {\n                captor: e.data\n              }));\n            }), e.bind(\"rightclick\", function (e) {\n              a.settings(\"eventsEnabled\") && (a.dispatchEvent(\"rightClick\", e.data), t = o(e), i = d(e), t.length ? (a.dispatchEvent(\"rightClickNode\", {\n                node: t[0],\n                captor: e.data\n              }), a.dispatchEvent(\"rightClickNodes\", {\n                node: t,\n                captor: e.data\n              })) : i.length ? (a.dispatchEvent(\"rightClickEdge\", {\n                edge: i[0],\n                captor: e.data\n              }), a.dispatchEvent(\"rightClickEdges\", {\n                edge: i,\n                captor: e.data\n              })) : a.dispatchEvent(\"rightClickStage\", {\n                captor: e.data\n              }));\n            }), a.bind(\"render\", r);\n          }\n\n          for (i = 0, n = this.captors.length; i < n; i++) {\n            l(this.captors[i]);\n          }\n        };\n      }).call(this);\n    }).call(window);\n  },\n  140: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.misc\"), sigma.misc.bindDOMEvents = function (e) {\n          var t = this,\n              i = this.graph;\n\n          function n(e) {\n            this.attr = function (t) {\n              return e.getAttributeNS(null, t);\n            }, this.tag = e.tagName, this.class = this.attr(\"class\"), this.id = this.attr(\"id\"), this.isNode = function () {\n              return !!~this.class.indexOf(t.settings(\"classPrefix\") + \"-node\");\n            }, this.isEdge = function () {\n              return !!~this.class.indexOf(t.settings(\"classPrefix\") + \"-edge\");\n            }, this.isHover = function () {\n              return !!~this.class.indexOf(t.settings(\"classPrefix\") + \"-hover\");\n            };\n          }\n\n          function s(e) {\n            if (t.settings(\"eventsEnabled\")) {\n              t.dispatchEvent(\"click\", e);\n              var s = new n(e.target);\n              s.isNode() ? t.dispatchEvent(\"clickNode\", {\n                node: i.nodes(s.attr(\"data-node-id\"))\n              }) : t.dispatchEvent(\"clickStage\"), e.preventDefault(), e.stopPropagation();\n            }\n          }\n\n          function r(e) {\n            if (t.settings(\"eventsEnabled\")) {\n              t.dispatchEvent(\"doubleClick\", e);\n              var s = new n(e.target);\n              s.isNode() ? t.dispatchEvent(\"doubleClickNode\", {\n                node: i.nodes(s.attr(\"data-node-id\"))\n              }) : t.dispatchEvent(\"doubleClickStage\"), e.preventDefault(), e.stopPropagation();\n            }\n          }\n\n          e.addEventListener(\"click\", s, !1), sigma.utils.doubleClick(e, \"click\", r), e.addEventListener(\"touchstart\", s, !1), sigma.utils.doubleClick(e, \"touchstart\", r), e.addEventListener(\"mouseover\", function (e) {\n            var s = e.toElement || e.target;\n\n            if (t.settings(\"eventsEnabled\") && s) {\n              var r = new n(s);\n              if (r.isNode()) t.dispatchEvent(\"overNode\", {\n                node: i.nodes(r.attr(\"data-node-id\"))\n              });else if (r.isEdge()) {\n                var a = i.edges(r.attr(\"data-edge-id\"));\n                t.dispatchEvent(\"overEdge\", {\n                  edge: a,\n                  source: i.nodes(a.source),\n                  target: i.nodes(a.target)\n                });\n              }\n            }\n          }, !0), e.addEventListener(\"mouseout\", function (e) {\n            var s = e.fromElement || e.originalTarget;\n\n            if (t.settings(\"eventsEnabled\")) {\n              var r = new n(s);\n              if (r.isNode()) t.dispatchEvent(\"outNode\", {\n                node: i.nodes(r.attr(\"data-node-id\"))\n              });else if (r.isEdge()) {\n                var a = i.edges(r.attr(\"data-edge-id\"));\n                t.dispatchEvent(\"outEdge\", {\n                  edge: a,\n                  source: i.nodes(a.source),\n                  target: i.nodes(a.target)\n                });\n              }\n            }\n          }, !0);\n        };\n      }).call(this);\n    }).call(window);\n  },\n  141: function _(e, t) {\n    (function () {\n      (function (e) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw \"sigma is not declared\";\n        sigma.utils.pkg(\"sigma.misc\"), sigma.misc.drawHovers = function (e) {\n          var t = this,\n              i = {},\n              n = {};\n\n          function s() {\n            var s,\n                r,\n                a,\n                o,\n                d,\n                l = t.contexts.hover.canvas,\n                h = t.settings(\"defaultNodeType\"),\n                c = t.settings(\"defaultEdgeType\"),\n                u = sigma.canvas.hovers,\n                g = sigma.canvas.edgehovers,\n                f = sigma.canvas.extremities,\n                m = t.settings.embedObjects({\n              prefix: e\n            });\n            if (t.contexts.hover.clearRect(0, 0, l.width, l.height), m(\"enableHovering\") && m(\"singleHover\") && Object.keys(i).length && (u[(o = i[Object.keys(i)[0]]).type] || u[h] || u.def)(o, t.contexts.hover, m), m(\"enableHovering\") && !m(\"singleHover\")) for (s in i) {\n              (u[i[s].type] || u[h] || u.def)(i[s], t.contexts.hover, m);\n            }\n            if (m(\"enableEdgeHovering\") && m(\"singleHover\") && Object.keys(n).length && (d = n[Object.keys(n)[0]], r = t.graph.nodes(d.source), a = t.graph.nodes(d.target), d.hidden || ((g[d.type] || g[c] || g.def)(d, r, a, t.contexts.hover, m), m(\"edgeHoverExtremities\") ? (f[d.type] || f.def)(d, r, a, t.contexts.hover, m) : ((sigma.canvas.nodes[r.type] || sigma.canvas.nodes.def)(r, t.contexts.hover, m), (sigma.canvas.nodes[a.type] || sigma.canvas.nodes.def)(a, t.contexts.hover, m)))), m(\"enableEdgeHovering\") && !m(\"singleHover\")) for (s in n) {\n              d = n[s], r = t.graph.nodes(d.source), a = t.graph.nodes(d.target), d.hidden || ((g[d.type] || g[c] || g.def)(d, r, a, t.contexts.hover, m), m(\"edgeHoverExtremities\") ? (f[d.type] || f.def)(d, r, a, t.contexts.hover, m) : ((sigma.canvas.nodes[r.type] || sigma.canvas.nodes.def)(r, t.contexts.hover, m), (sigma.canvas.nodes[a.type] || sigma.canvas.nodes.def)(a, t.contexts.hover, m)));\n            }\n          }\n\n          this.bind(\"overNode\", function (e) {\n            var t = e.data.node;\n            t.hidden || (i[t.id] = t, s());\n          }), this.bind(\"outNode\", function (e) {\n            delete i[e.data.node.id], s();\n          }), this.bind(\"overEdge\", function (e) {\n            var t = e.data.edge;\n            t.hidden || (n[t.id] = t, s());\n          }), this.bind(\"outEdge\", function (e) {\n            delete n[e.data.edge.id], s();\n          }), this.bind(\"render\", function (e) {\n            s();\n          });\n        };\n      }).call(this);\n    }).call(window);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}