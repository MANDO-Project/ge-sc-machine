{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction anyNumberOfTimes(re) {\n  return concat('(', re, ')*');\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/** @type LanguageFn */\n\n\nfunction gams(hljs) {\n  const KEYWORDS = {\n    keyword: 'abort acronym acronyms alias all and assign binary card diag display ' + 'else eq file files for free ge gt if integer le loop lt maximizing ' + 'minimizing model models ne negative no not option options or ord ' + 'positive prod put putpage puttl repeat sameas semicont semiint smax ' + 'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal: 'eps inf na',\n    built_in: 'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' + 'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' + 'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' + 'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' + 'randBinomial randLinear randTriangle round rPower sigmoid sign ' + 'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' + 'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' + 'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' + 'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' + 'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' + 'handleCollect handleDelete handleStatus handleSubmit heapFree ' + 'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' + 'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' + 'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [{\n      begin: /=[lgenxc]=/\n    }, {\n      begin: /\\$/\n    }]\n  };\n  const QSTR = {\n    // One-line quoted comment string\n    className: 'comment',\n    variants: [{\n      begin: '\\'',\n      end: '\\''\n    }, {\n      begin: '\"',\n      end: '\"'\n    }],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [QSTR, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = {\n    // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [QSTR, ASSIGNMENT, {\n      className: 'comment',\n      // one comment word, then possibly more\n      begin: concat(COMMENT_WORD, // [ ] because \\s would be too broad (matching newlines)\n      anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))),\n      relevance: 0\n    }]\n  };\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT(/^\\$ontext/, /^\\$offtext/), {\n      className: 'meta',\n      begin: '^\\\\$[a-z0-9]+',\n      end: '$',\n      returnBegin: true,\n      contains: [{\n        className: 'meta-keyword',\n        begin: '^\\\\$[a-z0-9]+'\n      }]\n    }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, // Declarations\n    {\n      beginKeywords: 'set sets parameter parameters variable variables ' + 'scalar scalars equation equations',\n      end: ';',\n      contains: [hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, ASSIGNMENT, DESCTEXT]\n    }, {\n      // table environment\n      beginKeywords: 'table',\n      end: ';',\n      returnBegin: true,\n      contains: [{\n        // table header row\n        beginKeywords: 'table',\n        end: '$',\n        contains: [DESCTEXT]\n      }, hljs.COMMENT('^\\\\*', '$'), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE // Table does not contain DESCTEXT or ASSIGNMENT\n      ]\n    }, // Function definitions\n    {\n      className: 'function',\n      begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n      returnBegin: true,\n      contains: [{\n        // Function title\n        className: 'title',\n        begin: /^[a-z0-9_]+/\n      }, PARAMS, SYMBOLS]\n    }, hljs.C_NUMBER_MODE, SYMBOLS]\n  };\n}\n\nmodule.exports = gams;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/gams.js"],"names":["source","re","anyNumberOfTimes","concat","args","joined","map","x","join","gams","hljs","KEYWORDS","keyword","literal","built_in","PARAMS","className","begin","end","excludeBegin","excludeEnd","SYMBOLS","variants","QSTR","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","endsWithParent","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(', re, ')*');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abort acronym acronyms alias all and assign binary card diag display ' +\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\n      'minimizing model models ne negative no not option options or ord ' +\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal:\n      'eps inf na',\n    built_in:\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\n      'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      {\n        begin: /=[lgenxc]=/\n      },\n      {\n        begin: /\\$/\n      }\n    ]\n  };\n  const QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {\n        begin: '\\'',\n        end: '\\''\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        // one comment word, then possibly more\n        begin: concat(\n          COMMENT_WORD,\n          // [ ] because \\s would be too broad (matching newlines)\n          anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))\n        ),\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'meta-keyword',\n            begin: '^\\\\$[a-z0-9]+'\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables ' +\n          'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [DESCTEXT]\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n          { // Function title\n            className: 'title',\n            begin: /^[a-z0-9_]+/\n          },\n          PARAMS,\n          SYMBOLS\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS\n    ]\n  };\n}\n\nmodule.exports = gams;\n"]},"metadata":{},"sourceType":"script"}