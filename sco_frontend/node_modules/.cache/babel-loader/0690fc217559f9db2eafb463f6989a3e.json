{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var joined = args.map(function (x) {\n    return source(x);\n  }).join(\"\");\n  return joined;\n}\n/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: common, protocols\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\n\nfunction http(hljs) {\n  var VERSION = 'HTTP/(2|1\\\\.[01])';\n  var HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  var HEADER = {\n    className: 'attribute',\n    begin: concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: {\n      contains: [{\n        className: \"punctuation\",\n        begin: /: /,\n        relevance: 0,\n        starts: {\n          end: '$',\n          relevance: 0\n        }\n      }]\n    }\n  };\n  var HEADERS_AND_BODY = [HEADER, {\n    begin: '\\\\n\\\\n',\n    starts: {\n      subLanguage: [],\n      endsWithParent: true\n    }\n  }];\n  return {\n    name: 'HTTP',\n    aliases: ['https'],\n    illegal: /\\S/,\n    contains: [// response\n    {\n      begin: '^(?=' + VERSION + \" \\\\d{3})\",\n      end: /$/,\n      contains: [{\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'number',\n        begin: '\\\\b\\\\d{3}\\\\b'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    }, // request\n    {\n      begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n      end: /$/,\n      contains: [{\n        className: 'string',\n        begin: ' ',\n        end: ' ',\n        excludeBegin: true,\n        excludeEnd: true\n      }, {\n        className: \"meta\",\n        begin: VERSION\n      }, {\n        className: 'keyword',\n        begin: '[A-Z]+'\n      }],\n      starts: {\n        end: /\\b\\B/,\n        illegal: /\\S/,\n        contains: HEADERS_AND_BODY\n      }\n    }, // to allow headers to work even without a preamble\n    hljs.inherit(HEADER, {\n      relevance: 0\n    })]\n  };\n}\n\nmodule.exports = http;","map":null,"metadata":{},"sourceType":"script"}