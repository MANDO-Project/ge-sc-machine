{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var joined = args.map(function (x) {\n    return source(x);\n  }).join(\"\");\n  return joined;\n}\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\n\n\nfunction either() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var joined = '(' + args.map(function (x) {\n    return source(x);\n  }).join(\"|\") + \")\";\n  return joined;\n}\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Audit: 2020\n */\n\n/** @type LanguageFn */\n\n\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  var HTTP_VERBS = [\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"CONNECT\", \"OPTIONS\", \"PATCH\", \"TRACE\"];\n  return {\n    name: 'Apache Access Log',\n    contains: [// IP\n    {\n      className: 'number',\n      begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n      relevance: 5\n    }, // Other numbers\n    {\n      className: 'number',\n      begin: /\\b\\d+\\b/,\n      relevance: 0\n    }, // Requests\n    {\n      className: 'string',\n      begin: concat(/\"/, either.apply(void 0, HTTP_VERBS)),\n      end: /\"/,\n      keywords: HTTP_VERBS,\n      illegal: /\\n/,\n      relevance: 5,\n      contains: [{\n        begin: /HTTP\\/[12]\\.\\d'/,\n        relevance: 5\n      }]\n    }, // Dates\n    {\n      className: 'string',\n      // dates must have a certain length, this prevents matching\n      // simple array accesses a[123] and [] and other common patterns\n      // found in other languages\n      begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n      illegal: /\\n/,\n      relevance: 1\n    }, {\n      className: 'string',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: /\\n/,\n      relevance: 0\n    }, // User agent / relevance boost\n    {\n      className: 'string',\n      begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 3\n    }, // Strings\n    {\n      className: 'string',\n      begin: /\"/,\n      end: /\"/,\n      illegal: /\\n/,\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = accesslog;","map":null,"metadata":{},"sourceType":"script"}