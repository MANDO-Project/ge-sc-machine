{"ast":null,"code":"THREE.ColladaLoader = require('../../lib/ColladaLoader');\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\n\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {\n    type: 'asset'\n  },\n  init: function init() {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n  update: function update() {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) {\n      return;\n    }\n\n    this.remove();\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {\n        format: 'collada',\n        model: self.model\n      });\n    });\n  },\n  remove: function remove() {\n    if (!this.model) {\n      return;\n    }\n\n    this.el.removeObject3D('mesh');\n  }\n});","map":null,"metadata":{},"sourceType":"script"}