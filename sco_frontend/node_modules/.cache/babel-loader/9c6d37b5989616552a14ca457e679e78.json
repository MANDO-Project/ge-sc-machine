{"ast":null,"code":"/*\nLanguage: RenderMan RSL\nAuthor: Konstantin Evdokimenko <qewerty@gmail.com>\nContributors: Shuen-Huei Guan <drake.guan@gmail.com>\nWebsite: https://renderman.pixar.com/resources/RenderMan_20/shadingLanguage.html\nCategory: graphics\n*/\nfunction rsl(hljs) {\n  return {\n    name: 'RenderMan RSL',\n    keywords: {\n      keyword: 'float color point normal vector matrix while for if do return else break extern continue',\n      built_in: 'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' + 'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' + 'faceforward filterstep floor format fresnel incident length lightsource log match ' + 'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' + 'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' + 'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' + 'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n    },\n    illegal: '</',\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE, {\n      className: 'meta',\n      begin: '#',\n      end: '$'\n    }, {\n      className: 'class',\n      beginKeywords: 'surface displacement light volume imager',\n      end: '\\\\('\n    }, {\n      beginKeywords: 'illuminate illuminance gather',\n      end: '\\\\('\n    }]\n  };\n}\n\nmodule.exports = rsl;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/rsl.js"],"names":["rsl","hljs","name","keywords","keyword","built_in","illegal","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","className","begin","end","beginKeywords","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,CAAaC,IAAb,EAAmB;AACjB,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,0FAFM;AAGRC,MAAAA,QAAQ,EACN,yFACA,mFADA,GAEA,oFAFA,GAGA,iFAHA,GAIA,oFAJA,GAKA,iFALA,GAMA;AAVM,KAFL;AAcLC,IAAAA,OAAO,EAAE,IAdJ;AAeLC,IAAAA,QAAQ,EAAE,CACRN,IAAI,CAACO,mBADG,EAERP,IAAI,CAACQ,oBAFG,EAGRR,IAAI,CAACS,iBAHG,EAIRT,IAAI,CAACU,gBAJG,EAKRV,IAAI,CAACW,aALG,EAMR;AACEC,MAAAA,SAAS,EAAE,MADb;AAEEC,MAAAA,KAAK,EAAE,GAFT;AAGEC,MAAAA,GAAG,EAAE;AAHP,KANQ,EAWR;AACEF,MAAAA,SAAS,EAAE,OADb;AAEEG,MAAAA,aAAa,EAAE,0CAFjB;AAGED,MAAAA,GAAG,EAAE;AAHP,KAXQ,EAgBR;AACEC,MAAAA,aAAa,EAAE,+BADjB;AAEED,MAAAA,GAAG,EAAE;AAFP,KAhBQ;AAfL,GAAP;AAqCD;;AAEDE,MAAM,CAACC,OAAP,GAAiBlB,GAAjB","sourcesContent":["/*\nLanguage: RenderMan RSL\nAuthor: Konstantin Evdokimenko <qewerty@gmail.com>\nContributors: Shuen-Huei Guan <drake.guan@gmail.com>\nWebsite: https://renderman.pixar.com/resources/RenderMan_20/shadingLanguage.html\nCategory: graphics\n*/\n\nfunction rsl(hljs) {\n  return {\n    name: 'RenderMan RSL',\n    keywords: {\n      keyword:\n        'float color point normal vector matrix while for if do return else break extern continue',\n      built_in:\n        'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' +\n        'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' +\n        'faceforward filterstep floor format fresnel incident length lightsource log match ' +\n        'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' +\n        'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' +\n        'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' +\n        'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'surface displacement light volume imager',\n        end: '\\\\('\n      },\n      {\n        beginKeywords: 'illuminate illuminance gather',\n        end: '\\\\('\n      }\n    ]\n  };\n}\n\nmodule.exports = rsl;\n"]},"metadata":{},"sourceType":"script"}