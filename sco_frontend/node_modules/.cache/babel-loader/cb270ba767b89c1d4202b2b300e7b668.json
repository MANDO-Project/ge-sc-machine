{"ast":null,"code":"/*\nLanguage: Prolog\nDescription: Prolog is a general purpose logic programming language associated with artificial intelligence and computational linguistics.\nAuthor: Raivo Laanemets <raivo@infdot.com>\nWebsite: https://en.wikipedia.org/wiki/Prolog\n*/\nfunction prolog(hljs) {\n  const ATOM = {\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n  const VAR = {\n    className: 'symbol',\n    variants: [{\n      begin: /[A-Z][a-zA-Z0-9_]*/\n    }, {\n      begin: /_[A-Za-z0-9_]*/\n    }],\n    relevance: 0\n  };\n  const PARENTED = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n  const LIST = {\n    begin: /\\[/,\n    end: /\\]/\n  };\n  const LINE_COMMENT = {\n    className: 'comment',\n    begin: /%/,\n    end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n  const BACKTICK_STRING = {\n    className: 'string',\n    begin: /`/,\n    end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const CHAR_CODE = {\n    className: 'string',\n    // 0'a etc.\n    begin: /0'(\\\\'|.)/\n  };\n  const SPACE_CODE = {\n    className: 'string',\n    begin: /0'\\\\s/ // 0'\\s\n\n  };\n  const PRED_OP = {\n    // relevance booster\n    begin: /:-/\n  };\n  const inner = [ATOM, VAR, PARENTED, PRED_OP, LIST, LINE_COMMENT, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, BACKTICK_STRING, CHAR_CODE, SPACE_CODE, hljs.C_NUMBER_MODE];\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n  return {\n    name: 'Prolog',\n    contains: inner.concat([{\n      // relevance booster\n      begin: /\\.$/\n    }])\n  };\n}\n\nmodule.exports = prolog;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/prolog.js"],"names":["prolog","hljs","ATOM","begin","relevance","VAR","className","variants","PARENTED","end","LIST","LINE_COMMENT","contains","PHRASAL_WORDS_MODE","BACKTICK_STRING","BACKSLASH_ESCAPE","CHAR_CODE","SPACE_CODE","PRED_OP","inner","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","name","concat","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,IAAI,GAAG;AAEXC,IAAAA,KAAK,EAAE,oBAFI;AAGXC,IAAAA,SAAS,EAAE;AAHA,GAAb;AAMA,QAAMC,GAAG,GAAG;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,KAAK,EAAE;AADT,KADQ,EAIR;AACEA,MAAAA,KAAK,EAAE;AADT,KAJQ,CAHA;AAWVC,IAAAA,SAAS,EAAE;AAXD,GAAZ;AAcA,QAAMI,QAAQ,GAAG;AAEfL,IAAAA,KAAK,EAAE,IAFQ;AAGfM,IAAAA,GAAG,EAAE,IAHU;AAIfL,IAAAA,SAAS,EAAE;AAJI,GAAjB;AAOA,QAAMM,IAAI,GAAG;AAEXP,IAAAA,KAAK,EAAE,IAFI;AAGXM,IAAAA,GAAG,EAAE;AAHM,GAAb;AAMA,QAAME,YAAY,GAAG;AAEnBL,IAAAA,SAAS,EAAE,SAFQ;AAGnBH,IAAAA,KAAK,EAAE,GAHY;AAInBM,IAAAA,GAAG,EAAE,GAJc;AAKnBG,IAAAA,QAAQ,EAAE,CAAEX,IAAI,CAACY,kBAAP;AALS,GAArB;AAQA,QAAMC,eAAe,GAAG;AAEtBR,IAAAA,SAAS,EAAE,QAFW;AAGtBH,IAAAA,KAAK,EAAE,GAHe;AAItBM,IAAAA,GAAG,EAAE,GAJiB;AAKtBG,IAAAA,QAAQ,EAAE,CAAEX,IAAI,CAACc,gBAAP;AALY,GAAxB;AAQA,QAAMC,SAAS,GAAG;AAChBV,IAAAA,SAAS,EAAE,QADK;AACK;AACrBH,IAAAA,KAAK,EAAE;AAFS,GAAlB;AAKA,QAAMc,UAAU,GAAG;AACjBX,IAAAA,SAAS,EAAE,QADM;AAEjBH,IAAAA,KAAK,EAAE,OAFU,CAEF;;AAFE,GAAnB;AAKA,QAAMe,OAAO,GAAG;AAAE;AAChBf,IAAAA,KAAK,EAAE;AADO,GAAhB;AAIA,QAAMgB,KAAK,GAAG,CAEZjB,IAFY,EAGZG,GAHY,EAIZG,QAJY,EAKZU,OALY,EAMZR,IANY,EAOZC,YAPY,EAQZV,IAAI,CAACmB,oBARO,EASZnB,IAAI,CAACoB,iBATO,EAUZpB,IAAI,CAACqB,gBAVO,EAWZR,eAXY,EAYZE,SAZY,EAaZC,UAbY,EAcZhB,IAAI,CAACsB,aAdO,CAAd;AAiBAf,EAAAA,QAAQ,CAACI,QAAT,GAAoBO,KAApB;AACAT,EAAAA,IAAI,CAACE,QAAL,GAAgBO,KAAhB;AAEA,SAAO;AACLK,IAAAA,IAAI,EAAE,QADD;AAELZ,IAAAA,QAAQ,EAAEO,KAAK,CAACM,MAAN,CAAa,CACrB;AAAE;AACAtB,MAAAA,KAAK,EAAE;AADT,KADqB,CAAb;AAFL,GAAP;AAQD;;AAEDuB,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["/*\nLanguage: Prolog\nDescription: Prolog is a general purpose logic programming language associated with artificial intelligence and computational linguistics.\nAuthor: Raivo Laanemets <raivo@infdot.com>\nWebsite: https://en.wikipedia.org/wiki/Prolog\n*/\n\nfunction prolog(hljs) {\n  const ATOM = {\n\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n\n  const VAR = {\n\n    className: 'symbol',\n    variants: [\n      {\n        begin: /[A-Z][a-zA-Z0-9_]*/\n      },\n      {\n        begin: /_[A-Za-z0-9_]*/\n      }\n    ],\n    relevance: 0\n  };\n\n  const PARENTED = {\n\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n\n  const LIST = {\n\n    begin: /\\[/,\n    end: /\\]/\n  };\n\n  const LINE_COMMENT = {\n\n    className: 'comment',\n    begin: /%/,\n    end: /$/,\n    contains: [ hljs.PHRASAL_WORDS_MODE ]\n  };\n\n  const BACKTICK_STRING = {\n\n    className: 'string',\n    begin: /`/,\n    end: /`/,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n\n  const CHAR_CODE = {\n    className: 'string', // 0'a etc.\n    begin: /0'(\\\\'|.)/\n  };\n\n  const SPACE_CODE = {\n    className: 'string',\n    begin: /0'\\\\s/ // 0'\\s\n  };\n\n  const PRED_OP = { // relevance booster\n    begin: /:-/\n  };\n\n  const inner = [\n\n    ATOM,\n    VAR,\n    PARENTED,\n    PRED_OP,\n    LIST,\n    LINE_COMMENT,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.APOS_STRING_MODE,\n    BACKTICK_STRING,\n    CHAR_CODE,\n    SPACE_CODE,\n    hljs.C_NUMBER_MODE\n  ];\n\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n\n  return {\n    name: 'Prolog',\n    contains: inner.concat([\n      { // relevance booster\n        begin: /\\.$/\n      }\n    ])\n  };\n}\n\nmodule.exports = prolog;\n"]},"metadata":{},"sourceType":"script"}