{"ast":null,"code":"/*\nLanguage: Crystal\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nWebsite: https://crystal-lang.org\n*/\n\n/** @type LanguageFn */\nfunction crystal(hljs) {\n  const INT_SUFFIX = '(_?[ui](8|16|32|64|128))?';\n  const FLOAT_SUFFIX = '(_?f(32|64))?';\n  const CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  const CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\\\*\\\\*|\\\\[\\\\][=?]?';\n  const CRYSTAL_PATH_RE = '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?';\n  const CRYSTAL_KEYWORDS = {\n    $pattern: CRYSTAL_IDENT_RE,\n    keyword: 'abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' + 'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' + 'return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield ' + '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: CRYSTAL_KEYWORDS\n  };\n  const EXPANSION = {\n    className: 'template-variable',\n    variants: [{\n      begin: '\\\\{\\\\{',\n      end: '\\\\}\\\\}'\n    }, {\n      begin: '\\\\{%',\n      end: '%\\\\}'\n    }],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    const contains = [{\n      begin: begin,\n      end: end\n    }];\n    contains[0].contains = contains;\n    return contains;\n  }\n\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: '%[Qwi]?\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%[Qwi]?\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%[Qwi]?\\\\{',\n      end: /\\}/,\n      contains: recursiveParen(/\\{/, /\\}/)\n    }, {\n      begin: '%[Qwi]?<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%[Qwi]?\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-\\w+$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  const Q_STRING = {\n    className: 'string',\n    variants: [{\n      begin: '%q\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%q\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%q\\\\{',\n      end: /\\}/,\n      contains: recursiveParen(/\\{/, /\\}/)\n    }, {\n      begin: '%q<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%q\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-'\\w+'$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  const REGEXP = {\n    begin: '(?!%\\\\})(' + hljs.RE_STARTERS_RE + '|\\\\n|\\\\b(case|if|select|unless|until|when|while)\\\\b)\\\\s*',\n    keywords: 'case if select unless until when while',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '//[a-z]*',\n        relevance: 0\n      }, {\n        begin: '/(?!\\\\/)',\n        end: '/[a-z]*'\n      }]\n    }],\n    relevance: 0\n  };\n  const REGEXP2 = {\n    className: 'regexp',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: '%r\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%r\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%r\\\\{',\n      end: /\\}/,\n      contains: recursiveParen(/\\{/, /\\}/)\n    }, {\n      begin: '%r<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%r\\\\|',\n      end: '\\\\|'\n    }],\n    relevance: 0\n  };\n  const ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[',\n    end: '\\\\]',\n    contains: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      className: 'meta-string'\n    })]\n  };\n  const CRYSTAL_DEFAULT_CONTAINS = [EXPANSION, STRING, Q_STRING, REGEXP2, REGEXP, ATTRIBUTE, hljs.HASH_COMMENT_MODE, {\n    className: 'class',\n    beginKeywords: 'class module struct',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_PATH_RE\n    }), {\n      // relevance booster for inheritance\n      begin: '<'\n    }]\n  }, {\n    className: 'class',\n    beginKeywords: 'lib enum union',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_PATH_RE\n    })]\n  }, {\n    beginKeywords: 'annotation',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_PATH_RE\n    })],\n    relevance: 2\n  }, {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })]\n  }, {\n    className: 'function',\n    beginKeywords: 'fun macro',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })],\n    relevance: 2\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':',\n    contains: [STRING, {\n      begin: CRYSTAL_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b0b([01_]+)' + INT_SUFFIX\n    }, {\n      begin: '\\\\b0o([0-7_]+)' + INT_SUFFIX\n    }, {\n      begin: '\\\\b0x([A-Fa-f0-9_]+)' + INT_SUFFIX\n    }, {\n      begin: '\\\\b([1-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?' + FLOAT_SUFFIX + '(?!_)'\n    }, {\n      begin: '\\\\b([1-9][0-9_]*|0)' + INT_SUFFIX\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    name: 'Crystal',\n    aliases: ['cr'],\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = crystal;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/crystal.js"],"names":["crystal","hljs","INT_SUFFIX","FLOAT_SUFFIX","CRYSTAL_IDENT_RE","CRYSTAL_METHOD_RE","CRYSTAL_PATH_RE","CRYSTAL_KEYWORDS","$pattern","keyword","literal","SUBST","className","begin","end","keywords","EXPANSION","variants","recursiveParen","contains","STRING","BACKSLASH_ESCAPE","relevance","Q_STRING","REGEXP","RE_STARTERS_RE","REGEXP2","ATTRIBUTE","inherit","QUOTE_STRING_MODE","CRYSTAL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","beginKeywords","illegal","TITLE_MODE","endsParent","UNDERSCORE_IDENT_RE","slice","name","aliases","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Crystal\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nWebsite: https://crystal-lang.org\n*/\n\n/** @type LanguageFn */\nfunction crystal(hljs) {\n  const INT_SUFFIX = '(_?[ui](8|16|32|64|128))?';\n  const FLOAT_SUFFIX = '(_?f(32|64))?';\n  const CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  const CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\\\*\\\\*|\\\\[\\\\][=?]?';\n  const CRYSTAL_PATH_RE = '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?';\n  const CRYSTAL_KEYWORDS = {\n    $pattern: CRYSTAL_IDENT_RE,\n    keyword:\n      'abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +\n      'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +\n      'return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield ' +\n      '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: CRYSTAL_KEYWORDS\n  };\n  const EXPANSION = {\n    className: 'template-variable',\n    variants: [\n      {\n        begin: '\\\\{\\\\{',\n        end: '\\\\}\\\\}'\n      },\n      {\n        begin: '\\\\{%',\n        end: '%\\\\}'\n      }\n    ],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    const\n        contains = [\n          {\n            begin: begin,\n            end: end\n          }\n        ];\n    contains[0].contains = contains;\n    return contains;\n  }\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: '%[Qwi]?\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%[Qwi]?\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%[Qwi]?\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%[Qwi]?<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%[Qwi]?\\\\|',\n        end: '\\\\|'\n      },\n      {\n        begin: /<<-\\w+$/,\n        end: /^\\s*\\w+$/\n      }\n    ],\n    relevance: 0\n  };\n  const Q_STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '%q\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%q\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%q\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%q<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%q\\\\|',\n        end: '\\\\|'\n      },\n      {\n        begin: /<<-'\\w+'$/,\n        end: /^\\s*\\w+$/\n      }\n    ],\n    relevance: 0\n  };\n  const REGEXP = {\n    begin: '(?!%\\\\})(' + hljs.RE_STARTERS_RE + '|\\\\n|\\\\b(case|if|select|unless|until|when|while)\\\\b)\\\\s*',\n    keywords: 'case if select unless until when while',\n    contains: [\n      {\n        className: 'regexp',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ],\n        variants: [\n          {\n            begin: '//[a-z]*',\n            relevance: 0\n          },\n          {\n            begin: '/(?!\\\\/)',\n            end: '/[a-z]*'\n          }\n        ]\n      }\n    ],\n    relevance: 0\n  };\n  const REGEXP2 = {\n    className: 'regexp',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: '%r\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      },\n      {\n        begin: '%r\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      },\n      {\n        begin: '%r\\\\{',\n        end: /\\}/,\n        contains: recursiveParen(/\\{/, /\\}/)\n      },\n      {\n        begin: '%r<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      },\n      {\n        begin: '%r\\\\|',\n        end: '\\\\|'\n      }\n    ],\n    relevance: 0\n  };\n  const ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[',\n    end: '\\\\]',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        className: 'meta-string'\n      })\n    ]\n  };\n  const CRYSTAL_DEFAULT_CONTAINS = [\n    EXPANSION,\n    STRING,\n    Q_STRING,\n    REGEXP2,\n    REGEXP,\n    ATTRIBUTE,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'class',\n      beginKeywords: 'class module struct',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        }),\n        { // relevance booster for inheritance\n          begin: '<'\n        }\n      ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'lib enum union',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        })\n      ]\n    },\n    {\n      beginKeywords: 'annotation',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_PATH_RE\n        })\n      ],\n      relevance: 2\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def',\n      end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'fun macro',\n      end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ],\n      relevance: 2\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [\n        STRING,\n        {\n          begin: CRYSTAL_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      variants: [\n        {\n          begin: '\\\\b0b([01_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b0o([0-7_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b0x([A-Fa-f0-9_]+)' + INT_SUFFIX\n        },\n        {\n          begin: '\\\\b([1-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?' + FLOAT_SUFFIX + '(?!_)'\n        },\n        {\n          begin: '\\\\b([1-9][0-9_]*|0)' + INT_SUFFIX\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    name: 'Crystal',\n    aliases: [ 'cr' ],\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = crystal;\n"]},"metadata":{},"sourceType":"script"}