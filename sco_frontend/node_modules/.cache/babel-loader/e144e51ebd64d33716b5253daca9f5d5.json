{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\src\\\\components\\\\SH_code.js\";\nimport React, { Component } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { coy } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nvar SyntaxHighlighter_code = /*#__PURE__*/function (_Component) {\n  _inherits(SyntaxHighlighter_code, _Component);\n\n  function SyntaxHighlighter_code(props) {\n    var _this;\n\n    _classCallCheck(this, SyntaxHighlighter_code);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SyntaxHighlighter_code).call(this, props));\n    _this.state = {\n      // Initially, no file is selected \n      arrayerrorline: []\n    };\n    return _this;\n  }\n\n  _createClass(SyntaxHighlighter_code, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.detectResults !== this.props.detectResults || prevProps.ClickNode !== this.props.ClickNode) {\n        var array = [];\n        var ArrayUniq = [];\n        var self = this;\n        var data = this.props.detectResults;\n        data[\"results\"].forEach(function (node, index) {\n          if (node[\"vulnerability\"] == 1) {\n            array = [].concat(_toConsumableArray(array), _toConsumableArray(node[\"code_lines\"]));\n            ArrayUniq = _toConsumableArray(new Set(array));\n          }\n        });\n        self.setState({\n          arrayerrorline: ArrayUniq\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var linesToHighlight = this.state.arrayerrorline,\n          startingLineNumber = 1;\n      return /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n        startingLineNumber: startingLineNumber,\n        language: \"solidity\",\n        style: coy,\n        className: \"highlight\",\n        showLineNumbers: true,\n        wrapLines: true,\n        lineProps: function lineProps(lineNumber) {\n          var style = {\n            display: \"block\",\n            width: \"fit-content\"\n          };\n\n          if (linesToHighlight.includes(lineNumber)) {\n            style.backgroundColor = \"#ffe7a4\";\n          }\n\n          if (_this2.props.ClickNode.includes(lineNumber)) {\n            style.backgroundColor = \"#DC143C\";\n          }\n\n          return {\n            style: style\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, this.props.codeString);\n    }\n  }]);\n\n  return SyntaxHighlighter_code;\n}(Component);\n\nexport { SyntaxHighlighter_code as default };","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/src/components/SH_code.js"],"names":["React","Component","Prism","SyntaxHighlighter","coy","SyntaxHighlighter_code","props","state","arrayerrorline","prevProps","prevState","detectResults","ClickNode","array","ArrayUniq","self","data","forEach","node","index","Set","setState","linesToHighlight","startingLineNumber","lineNumber","style","display","width","includes","backgroundColor","codeString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAAQC,GAAR,QAAkB,gDAAlB;;IACqBC,sB;;;AACnB,kCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,gGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACX;AAEAC,MAAAA,cAAc,EAAC;AAHJ,KAAb;AAFgB;AAQjB;;;;uCAEkBC,S,EAAUC,S,EAAU;AACrC,UAAID,SAAS,CAACE,aAAV,KAA0B,KAAKL,KAAL,CAAWK,aAAtC,IAAsDF,SAAS,CAACG,SAAV,KAAsB,KAAKN,KAAL,CAAWM,SAA1F,EAAoG;AAElG,YAAIC,KAAK,GAAG,EAAZ;AACA,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIC,IAAI,GAAC,IAAT;AAEA,YAAIC,IAAI,GAAC,KAAKV,KAAL,CAAWK,aAApB;AACAK,QAAAA,IAAI,CAAC,SAAD,CAAJ,CAAgBC,OAAhB,CAAwB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvC,cAAID,IAAI,CAAC,eAAD,CAAJ,IAAyB,CAA7B,EAAgC;AAC9BL,YAAAA,KAAK,gCAAOA,KAAP,sBAAiBK,IAAI,CAAC,YAAD,CAArB,EAAL;AACAJ,YAAAA,SAAS,sBAAO,IAAIM,GAAJ,CAAQP,KAAR,CAAP,CAAT;AACD;AACF,SALD;AAMAE,QAAAA,IAAI,CAACM,QAAL,CAAc;AAACb,UAAAA,cAAc,EAACM;AAAhB,SAAd;AACD;AACF;;;6BAIS;AAAA;;AACN,UAAMQ,gBAAgB,GAAG,KAAKf,KAAL,CAAWC,cAApC;AAAA,UAAmDe,kBAAkB,GAAG,CAAxE;AAEE,0BACI,oBAAC,iBAAD;AACM,QAAA,kBAAkB,EAAEA,kBAD1B;AAEM,QAAA,QAAQ,EAAC,UAFf;AAGM,QAAA,KAAK,EAAEnB,GAHb;AAIM,QAAA,SAAS,EAAC,WAJhB;AAKM,QAAA,eAAe,MALrB;AAMM,QAAA,SAAS,MANf;AAOM,QAAA,SAAS,EAAE,mBAACoB,UAAD,EAAgB;AACvB,cAAMC,KAAK,GAAG;AAAEC,YAAAA,OAAO,EAAE,OAAX;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WAAd;;AACA,cAAIL,gBAAgB,CAACM,QAAjB,CAA0BJ,UAA1B,CAAJ,EAA2C;AACvCC,YAAAA,KAAK,CAACI,eAAN,GAAwB,SAAxB;AACH;;AACD,cAAG,MAAI,CAACvB,KAAL,CAAWM,SAAX,CAAqBgB,QAArB,CAA8BJ,UAA9B,CAAH,EAA6C;AAC3CC,YAAAA,KAAK,CAACI,eAAN,GAAwB,SAAxB;AACD;;AACD,iBAAO;AAAEJ,YAAAA,KAAK,EAALA;AAAF,WAAP;AACH,SAhBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBO,KAAKnB,KAAL,CAAWwB,UAjBlB,CADJ;AAsBH;;;;EAxD+C7B,S;;SAA/BI,sB","sourcesContent":["import React,{Component} from 'react';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport {coy} from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nexport default class SyntaxHighlighter_code extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      // Initially, no file is selected \r\n      \r\n      arrayerrorline:[],\r\n    }; \r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if((prevProps.detectResults!==this.props.detectResults)||prevProps.ClickNode!==this.props.ClickNode){\r\n      \r\n      let array = []\r\n      let ArrayUniq = []\r\n      let self=this\r\n\r\n      var data=this.props.detectResults;\r\n      data[\"results\"].forEach((node, index) => {\r\n        if (node[\"vulnerability\"] == 1) {\r\n          array = [...array, ...node[\"code_lines\"]]\r\n          ArrayUniq = [...new Set(array)];\r\n        }\r\n      })\r\n      self.setState({arrayerrorline:ArrayUniq});\r\n    }\r\n  };\r\n\r\n\r\n\r\n    render(){\r\n      const linesToHighlight = this.state.arrayerrorline,startingLineNumber = 1;\r\n        \r\n        return(\r\n            <SyntaxHighlighter\r\n                  startingLineNumber={startingLineNumber}\r\n                  language='solidity'\r\n                  style={coy}\r\n                  className='highlight'\r\n                  showLineNumbers\r\n                  wrapLines\r\n                  lineProps={(lineNumber) => {\r\n                      const style = { display: \"block\", width: \"fit-content\" };\r\n                      if (linesToHighlight.includes(lineNumber)) {\r\n                          style.backgroundColor = \"#ffe7a4\";\r\n                      }\r\n                      if(this.props.ClickNode.includes(lineNumber)){\r\n                        style.backgroundColor = \"#DC143C\";\r\n                      }\r\n                      return { style };\r\n                  }}>\r\n                  {this.props.codeString}\r\n              </SyntaxHighlighter>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}