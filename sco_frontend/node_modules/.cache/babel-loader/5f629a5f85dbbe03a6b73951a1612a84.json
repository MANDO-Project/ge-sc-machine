{"ast":null,"code":"THREE.FBXLoader = require('../../lib/FBXLoader');\n/**\n * fbx-model\n *\n * Loader for FBX format. Supports ASCII, but *not* binary, models.\n */\n\nmodule.exports = AFRAME.registerComponent('fbx-model', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    crossorigin: {\n      default: ''\n    }\n  },\n  init: function init() {\n    this.model = null;\n  },\n  update: function update() {\n    var data = this.data;\n    if (!data.src) return;\n    this.remove();\n    var loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n  load: function load(model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {\n      format: 'fbx',\n      model: model\n    });\n  },\n  remove: function remove() {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});","map":null,"metadata":{},"sourceType":"script"}