{"ast":null,"code":"var Sigma = function (n) {\n  var i = {};\n\n  function t(e) {\n    if (i[e]) return i[e].exports;\n    var o = i[e] = {\n      i: e,\n      l: !1,\n      exports: {}\n    };\n    return n[e].call(o.exports, o, o.exports, t), o.l = !0, o.exports;\n  }\n\n  return t.m = n, t.c = i, t.d = function (n, i, e) {\n    t.o(n, i) || Object.defineProperty(n, i, {\n      enumerable: !0,\n      get: e\n    });\n  }, t.r = function (n) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(n, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(n, \"__esModule\", {\n      value: !0\n    });\n  }, t.t = function (n, i) {\n    if (1 & i && (n = t(n)), 8 & i) return n;\n    if (4 & i && \"object\" == typeof n && n && n.__esModule) return n;\n    var e = Object.create(null);\n    if (t.r(e), Object.defineProperty(e, \"default\", {\n      enumerable: !0,\n      value: n\n    }), 2 & i && \"string\" != typeof n) for (var o in n) {\n      t.d(e, o, function (i) {\n        return n[i];\n      }.bind(null, o));\n    }\n    return e;\n  }, t.n = function (n) {\n    var i = n && n.__esModule ? function () {\n      return n.default;\n    } : function () {\n      return n;\n    };\n    return t.d(i, \"a\", i), i;\n  }, t.o = function (n, i) {\n    return Object.prototype.hasOwnProperty.call(n, i);\n  }, t.p = \"\", t(t.s = 372);\n}({\n  372: function _(n, i) {\n    (function () {\n      (function (n) {\n        \"use strict\";\n\n        if (\"undefined\" == typeof sigma) throw new Error(\"sigma is not declared\");\n        sigma.utils.pkg(\"sigma.layout.noverlap\");\n        var i = {\n          speed: 3,\n          scaleNodes: 1.2,\n          nodeMargin: 5,\n          gridSize: 20,\n          permittedExpansion: 1.1,\n          rendererIndex: 0,\n          maxIterations: 500\n        },\n            t = {},\n            e = {};\n\n        function o() {\n          var n = this;\n          this.init = function (n, t) {\n            if (t = t || {}, this.sigInst = n, this.config = sigma.utils.extend(t, i), this.easing = t.easing, this.duration = t.duration, t.nodes && (this.nodes = t.nodes, delete t.nodes), !sigma.plugins || void 0 === sigma.plugins.animate) throw new Error(\"sigma.plugins.animate is not declared\");\n            this.running = !1;\n          }, this.atomicGo = function () {\n            if (!this.running || this.iterCount < 1) return !1;\n\n            var i,\n                t,\n                e,\n                o,\n                s,\n                r,\n                d,\n                a,\n                g,\n                f,\n                c,\n                u,\n                l,\n                h,\n                p,\n                _,\n                m,\n                x,\n                y,\n                M,\n                v,\n                z = this.nodes || this.sigInst.graph.nodes(),\n                I = z.length,\n                S = 1 / 0,\n                E = -1 / 0,\n                N = 1 / 0,\n                b = -1 / 0;\n\n            for (this.iterCount--, this.running = !1, i = 0; i < I; i++) {\n              (t = z[i]).dn.dx = 0, t.dn.dy = 0, S = Math.min(S, t.dn_x - (t.dn_size * n.config.scaleNodes + n.config.nodeMargin)), E = Math.max(E, t.dn_x + (t.dn_size * n.config.scaleNodes + n.config.nodeMargin)), N = Math.min(N, t.dn_y - (t.dn_size * n.config.scaleNodes + n.config.nodeMargin)), b = Math.max(b, t.dn_y + (t.dn_size * n.config.scaleNodes + n.config.nodeMargin));\n            }\n\n            for (o = E - S, s = b - N, d = (N + b) / 2, S = (r = (S + E) / 2) - n.config.permittedExpansion * o / 2, E = r + n.config.permittedExpansion * o / 2, N = d - n.config.permittedExpansion * s / 2, b = d + n.config.permittedExpansion * s / 2, a = {}, g = 0; g < n.config.gridSize; g++) {\n              for (a[g] = {}, f = 0; f < n.config.gridSize; f++) {\n                a[g][f] = [];\n              }\n            }\n\n            for (i = 0; i < I; i++) {\n              for (x = (t = z[i]).dn_x - (t.dn_size * n.config.scaleNodes + n.config.nodeMargin), y = t.dn_x + (t.dn_size * n.config.scaleNodes + n.config.nodeMargin), M = t.dn_y - (t.dn_size * n.config.scaleNodes + n.config.nodeMargin), v = t.dn_y + (t.dn_size * n.config.scaleNodes + n.config.nodeMargin), c = Math.floor(n.config.gridSize * (x - S) / (E - S)), u = Math.floor(n.config.gridSize * (y - S) / (E - S)), l = Math.floor(n.config.gridSize * (M - N) / (b - N)), h = Math.floor(n.config.gridSize * (v - N) / (b - N)), f = c; f <= u; f++) {\n                for (g = l; g <= h; g++) {\n                  a[g][f].push(t.id);\n                }\n              }\n            }\n\n            for (p = {}, g = 0; g < n.config.gridSize; g++) {\n              for (f = 0; f < n.config.gridSize; f++) {\n                a[g][f].forEach(function (i) {\n                  for (p[i] || (p[i] = []), _ = Math.max(0, g - 1); _ <= Math.min(g + 1, n.config.gridSize - 1); _++) {\n                    for (m = Math.max(0, f - 1); m <= Math.min(f + 1, n.config.gridSize - 1); m++) {\n                      a[_][m].forEach(function (n) {\n                        n !== i && -1 === p[i].indexOf(n) && p[i].push(n);\n                      });\n                    }\n                  }\n                });\n              }\n            }\n\n            for (i = 0; i < I; i++) {\n              e = z[i], p[e.id].forEach(function (i) {\n                var t = n.sigInst.graph.nodes(i),\n                    r = t.dn_x - e.dn_x,\n                    d = t.dn_y - e.dn_y,\n                    a = Math.sqrt(r * r + d * d);\n                a < e.dn_size * n.config.scaleNodes + n.config.nodeMargin + (t.dn_size * n.config.scaleNodes + n.config.nodeMargin) && (n.running = !0, a > 0 ? (t.dn.dx += r / a * (1 + e.dn_size), t.dn.dy += d / a * (1 + e.dn_size)) : (t.dn.dx += .01 * o * (.5 - Math.random()), t.dn.dy += .01 * s * (.5 - Math.random())));\n              });\n            }\n\n            for (i = 0; i < I; i++) {\n              (t = z[i]).fixed || (t.dn_x = t.dn_x + .1 * t.dn.dx * n.config.speed, t.dn_y = t.dn_y + .1 * t.dn.dy * n.config.speed);\n            }\n\n            return this.running && this.iterCount < 1 && (this.running = !1), this.running;\n          }, this.go = function () {\n            for (this.iterCount = this.config.maxIterations; this.running;) {\n              this.atomicGo();\n            }\n\n            this.stop();\n          }, this.start = function () {\n            if (!this.running) {\n              var i = this.sigInst.graph.nodes(),\n                  t = this.sigInst.renderers[n.config.rendererIndex].options.prefix;\n              this.running = !0;\n\n              for (var o = 0; o < i.length; o++) {\n                i[o].dn_x = i[o][t + \"x\"], i[o].dn_y = i[o][t + \"y\"], i[o].dn_size = i[o][t + \"size\"], i[o].dn = {\n                  dx: 0,\n                  dy: 0\n                };\n              }\n\n              e[n.sigInst.id].dispatchEvent(\"start\"), this.go();\n            }\n          }, this.stop = function () {\n            var i = this.sigInst.graph.nodes();\n            if (this.running = !1, this.easing) e[n.sigInst.id].dispatchEvent(\"interpolate\"), sigma.plugins.animate(n.sigInst, {\n              x: \"dn_x\",\n              y: \"dn_y\"\n            }, {\n              easing: n.easing,\n              onComplete: function onComplete() {\n                n.sigInst.refresh();\n\n                for (var t = 0; t < i.length; t++) {\n                  i[t].dn = null, i[t].dn_x = null, i[t].dn_y = null;\n                }\n\n                e[n.sigInst.id].dispatchEvent(\"stop\");\n              },\n              duration: n.duration\n            });else {\n              for (var t = 0; t < i.length; t++) {\n                i[t].x = i[t].dn_x, i[t].y = i[t].dn_y;\n              }\n\n              this.sigInst.refresh();\n\n              for (t = 0; t < i.length; t++) {\n                i[t].dn = null, i[t].dn_x = null, i[t].dn_y = null;\n              }\n\n              e[n.sigInst.id].dispatchEvent(\"stop\");\n            }\n          }, this.kill = function () {\n            this.sigInst = null, this.config = null, this.easing = null;\n          };\n        }\n\n        sigma.prototype.configNoverlap = function (n) {\n          var i = this;\n          if (!n) throw new Error('Missing argument: \"config\"');\n          return t[i.id] || (t[i.id] = new o(), e[i.id] = {}, sigma.classes.dispatcher.extend(e[i.id]), i.bind(\"kill\", function () {\n            t[i.id].kill(), t[i.id] = null, e[i.id] = null;\n          })), t[i.id].init(i, n), e[i.id];\n        }, sigma.prototype.startNoverlap = function (n) {\n          return n && this.configNoverlap(this, n), t[this.id].start(), e[this.id];\n        }, sigma.prototype.isNoverlapRunning = function () {\n          return !!t[this.id] && t[this.id].running;\n        };\n      }).call(this);\n    }).call(window);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}