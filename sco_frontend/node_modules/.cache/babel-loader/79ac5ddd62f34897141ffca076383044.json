{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\n\n\nfunction either() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  const joined = '(' + args.map(x => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\n\nfunction sql(hljs) {\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [{\n      begin: /'/,\n      end: /'/,\n      contains: [{\n        begin: /''/\n      }]\n    }]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [{\n      begin: /\"\"/\n    }]\n  };\n  const LITERALS = [\"true\", \"false\", // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n  // \"null\",\n  \"unknown\"];\n  const MULTI_WORD_TYPES = [\"double precision\", \"large object\", \"with timezone\", \"without timezone\"];\n  const TYPES = ['bigint', 'binary', 'blob', 'boolean', 'char', 'character', 'clob', 'date', 'dec', 'decfloat', 'decimal', 'float', 'int', 'integer', 'interval', 'nchar', 'nclob', 'national', 'numeric', 'real', 'row', 'smallint', 'time', 'timestamp', 'varchar', 'varying', // modifier (character varying)\n  'varbinary'];\n  const NON_RESERVED_WORDS = [\"add\", \"asc\", \"collation\", \"desc\", \"final\", \"first\", \"last\", \"view\"]; // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n\n  const RESERVED_WORDS = [\"abs\", \"acos\", \"all\", \"allocate\", \"alter\", \"and\", \"any\", \"are\", \"array\", \"array_agg\", \"array_max_cardinality\", \"as\", \"asensitive\", \"asin\", \"asymmetric\", \"at\", \"atan\", \"atomic\", \"authorization\", \"avg\", \"begin\", \"begin_frame\", \"begin_partition\", \"between\", \"bigint\", \"binary\", \"blob\", \"boolean\", \"both\", \"by\", \"call\", \"called\", \"cardinality\", \"cascaded\", \"case\", \"cast\", \"ceil\", \"ceiling\", \"char\", \"char_length\", \"character\", \"character_length\", \"check\", \"classifier\", \"clob\", \"close\", \"coalesce\", \"collate\", \"collect\", \"column\", \"commit\", \"condition\", \"connect\", \"constraint\", \"contains\", \"convert\", \"copy\", \"corr\", \"corresponding\", \"cos\", \"cosh\", \"count\", \"covar_pop\", \"covar_samp\", \"create\", \"cross\", \"cube\", \"cume_dist\", \"current\", \"current_catalog\", \"current_date\", \"current_default_transform_group\", \"current_path\", \"current_role\", \"current_row\", \"current_schema\", \"current_time\", \"current_timestamp\", \"current_path\", \"current_role\", \"current_transform_group_for_type\", \"current_user\", \"cursor\", \"cycle\", \"date\", \"day\", \"deallocate\", \"dec\", \"decimal\", \"decfloat\", \"declare\", \"default\", \"define\", \"delete\", \"dense_rank\", \"deref\", \"describe\", \"deterministic\", \"disconnect\", \"distinct\", \"double\", \"drop\", \"dynamic\", \"each\", \"element\", \"else\", \"empty\", \"end\", \"end_frame\", \"end_partition\", \"end-exec\", \"equals\", \"escape\", \"every\", \"except\", \"exec\", \"execute\", \"exists\", \"exp\", \"external\", \"extract\", \"false\", \"fetch\", \"filter\", \"first_value\", \"float\", \"floor\", \"for\", \"foreign\", \"frame_row\", \"free\", \"from\", \"full\", \"function\", \"fusion\", \"get\", \"global\", \"grant\", \"group\", \"grouping\", \"groups\", \"having\", \"hold\", \"hour\", \"identity\", \"in\", \"indicator\", \"initial\", \"inner\", \"inout\", \"insensitive\", \"insert\", \"int\", \"integer\", \"intersect\", \"intersection\", \"interval\", \"into\", \"is\", \"join\", \"json_array\", \"json_arrayagg\", \"json_exists\", \"json_object\", \"json_objectagg\", \"json_query\", \"json_table\", \"json_table_primitive\", \"json_value\", \"lag\", \"language\", \"large\", \"last_value\", \"lateral\", \"lead\", \"leading\", \"left\", \"like\", \"like_regex\", \"listagg\", \"ln\", \"local\", \"localtime\", \"localtimestamp\", \"log\", \"log10\", \"lower\", \"match\", \"match_number\", \"match_recognize\", \"matches\", \"max\", \"member\", \"merge\", \"method\", \"min\", \"minute\", \"mod\", \"modifies\", \"module\", \"month\", \"multiset\", \"national\", \"natural\", \"nchar\", \"nclob\", \"new\", \"no\", \"none\", \"normalize\", \"not\", \"nth_value\", \"ntile\", \"null\", \"nullif\", \"numeric\", \"octet_length\", \"occurrences_regex\", \"of\", \"offset\", \"old\", \"omit\", \"on\", \"one\", \"only\", \"open\", \"or\", \"order\", \"out\", \"outer\", \"over\", \"overlaps\", \"overlay\", \"parameter\", \"partition\", \"pattern\", \"per\", \"percent\", \"percent_rank\", \"percentile_cont\", \"percentile_disc\", \"period\", \"portion\", \"position\", \"position_regex\", \"power\", \"precedes\", \"precision\", \"prepare\", \"primary\", \"procedure\", \"ptf\", \"range\", \"rank\", \"reads\", \"real\", \"recursive\", \"ref\", \"references\", \"referencing\", \"regr_avgx\", \"regr_avgy\", \"regr_count\", \"regr_intercept\", \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"release\", \"result\", \"return\", \"returns\", \"revoke\", \"right\", \"rollback\", \"rollup\", \"row\", \"row_number\", \"rows\", \"running\", \"savepoint\", \"scope\", \"scroll\", \"search\", \"second\", \"seek\", \"select\", \"sensitive\", \"session_user\", \"set\", \"show\", \"similar\", \"sin\", \"sinh\", \"skip\", \"smallint\", \"some\", \"specific\", \"specifictype\", \"sql\", \"sqlexception\", \"sqlstate\", \"sqlwarning\", \"sqrt\", \"start\", \"static\", \"stddev_pop\", \"stddev_samp\", \"submultiset\", \"subset\", \"substring\", \"substring_regex\", \"succeeds\", \"sum\", \"symmetric\", \"system\", \"system_time\", \"system_user\", \"table\", \"tablesample\", \"tan\", \"tanh\", \"then\", \"time\", \"timestamp\", \"timezone_hour\", \"timezone_minute\", \"to\", \"trailing\", \"translate\", \"translate_regex\", \"translation\", \"treat\", \"trigger\", \"trim\", \"trim_array\", \"true\", \"truncate\", \"uescape\", \"union\", \"unique\", \"unknown\", \"unnest\", \"update   \", \"upper\", \"user\", \"using\", \"value\", \"values\", \"value_of\", \"var_pop\", \"var_samp\", \"varbinary\", \"varchar\", \"varying\", \"versioning\", \"when\", \"whenever\", \"where\", \"width_bucket\", \"window\", \"with\", \"within\", \"without\", \"year\"]; // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n\n  const RESERVED_FUNCTIONS = [\"abs\", \"acos\", \"array_agg\", \"asin\", \"atan\", \"avg\", \"cast\", \"ceil\", \"ceiling\", \"coalesce\", \"corr\", \"cos\", \"cosh\", \"count\", \"covar_pop\", \"covar_samp\", \"cume_dist\", \"dense_rank\", \"deref\", \"element\", \"exp\", \"extract\", \"first_value\", \"floor\", \"json_array\", \"json_arrayagg\", \"json_exists\", \"json_object\", \"json_objectagg\", \"json_query\", \"json_table\", \"json_table_primitive\", \"json_value\", \"lag\", \"last_value\", \"lead\", \"listagg\", \"ln\", \"log\", \"log10\", \"lower\", \"max\", \"min\", \"mod\", \"nth_value\", \"ntile\", \"nullif\", \"percent_rank\", \"percentile_cont\", \"percentile_disc\", \"position\", \"position_regex\", \"power\", \"rank\", \"regr_avgx\", \"regr_avgy\", \"regr_count\", \"regr_intercept\", \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"row_number\", \"sin\", \"sinh\", \"sqrt\", \"stddev_pop\", \"stddev_samp\", \"substring\", \"substring_regex\", \"sum\", \"tan\", \"tanh\", \"translate\", \"translate_regex\", \"treat\", \"trim\", \"trim_array\", \"unnest\", \"upper\", \"value_of\", \"var_pop\", \"var_samp\", \"width_bucket\"]; // these functions can\n\n  const POSSIBLE_WITHOUT_PARENS = [\"current_catalog\", \"current_date\", \"current_default_transform_group\", \"current_path\", \"current_role\", \"current_schema\", \"current_transform_group_for_type\", \"current_user\", \"session_user\", \"system_time\", \"system_user\", \"current_time\", \"localtime\", \"current_timestamp\", \"localtimestamp\"]; // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n\n  const COMBOS = [\"create table\", \"insert into\", \"primary key\", \"foreign key\", \"not null\", \"alter table\", \"add constraint\", \"grouping sets\", \"on overflow\", \"character set\", \"respect nulls\", \"ignore nulls\", \"nulls first\", \"nulls last\", \"depth first\", \"breadth first\"];\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n  const KEYWORDS = [...RESERVED_WORDS, ...NON_RESERVED_WORDS].filter(keyword => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9]+/\n  };\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0\n  };\n  const FUNCTION_CALL = {\n    begin: concat(/\\b/, either(...FUNCTIONS), /\\s*\\(/),\n    keywords: {\n      built_in: FUNCTIONS\n    }\n  }; // keywords with less than 3 letters are reduced in relevancy\n\n  function reduceRelevancy(list) {\n    let {\n      exceptions,\n      when\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map(item => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword: reduceRelevancy(KEYWORDS, {\n        when: x => x.length < 3\n      }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [{\n      begin: either(...COMBOS),\n      keywords: {\n        $pattern: /[\\w\\.]+/,\n        keyword: KEYWORDS.concat(COMBOS),\n        literal: LITERALS,\n        type: TYPES\n      }\n    }, {\n      className: \"type\",\n      begin: either(...MULTI_WORD_TYPES)\n    }, FUNCTION_CALL, VARIABLE, STRING, QUOTED_IDENTIFIER, hljs.C_NUMBER_MODE, hljs.C_BLOCK_COMMENT_MODE, COMMENT_MODE, OPERATOR]\n  };\n}\n\nmodule.exports = sql;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/sql.js"],"names":["source","re","concat","args","joined","map","x","join","either","sql","hljs","COMMENT_MODE","COMMENT","STRING","className","variants","begin","end","contains","QUOTED_IDENTIFIER","LITERALS","MULTI_WORD_TYPES","TYPES","NON_RESERVED_WORDS","RESERVED_WORDS","RESERVED_FUNCTIONS","POSSIBLE_WITHOUT_PARENS","COMBOS","FUNCTIONS","KEYWORDS","filter","keyword","includes","VARIABLE","OPERATOR","relevance","FUNCTION_CALL","keywords","built_in","reduceRelevancy","list","exceptions","when","qualifyFn","item","match","name","case_insensitive","illegal","$pattern","length","literal","type","C_NUMBER_MODE","C_BLOCK_COMMENT_MODE","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: SQL\n Website: https://en.wikipedia.org/wiki/SQL\n Category: common, database\n */\n\nfunction sql(hljs) {\n  const COMMENT_MODE = hljs.COMMENT('--', '$');\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/,\n        contains: [\n          {begin: /''/ }\n        ]\n      }\n    ]\n  };\n  const QUOTED_IDENTIFIER = {\n    begin: /\"/,\n    end: /\"/,\n    contains: [ { begin: /\"\"/ } ]\n  };\n\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    // Not sure it's correct to call NULL literal, and clauses like IS [NOT] NULL look strange that way.\n    // \"null\",\n    \"unknown\"\n  ];\n\n  const MULTI_WORD_TYPES = [\n    \"double precision\",\n    \"large object\",\n    \"with timezone\",\n    \"without timezone\"\n  ];\n\n  const TYPES = [\n    'bigint',\n    'binary',\n    'blob',\n    'boolean',\n    'char',\n    'character',\n    'clob',\n    'date',\n    'dec',\n    'decfloat',\n    'decimal',\n    'float',\n    'int',\n    'integer',\n    'interval',\n    'nchar',\n    'nclob',\n    'national',\n    'numeric',\n    'real',\n    'row',\n    'smallint',\n    'time',\n    'timestamp',\n    'varchar',\n    'varying', // modifier (character varying)\n    'varbinary'\n  ];\n\n  const NON_RESERVED_WORDS = [\n    \"add\",\n    \"asc\",\n    \"collation\",\n    \"desc\",\n    \"final\",\n    \"first\",\n    \"last\",\n    \"view\"\n  ];\n\n  // https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html#reserved-word\n  const RESERVED_WORDS = [\n    \"abs\",\n    \"acos\",\n    \"all\",\n    \"allocate\",\n    \"alter\",\n    \"and\",\n    \"any\",\n    \"are\",\n    \"array\",\n    \"array_agg\",\n    \"array_max_cardinality\",\n    \"as\",\n    \"asensitive\",\n    \"asin\",\n    \"asymmetric\",\n    \"at\",\n    \"atan\",\n    \"atomic\",\n    \"authorization\",\n    \"avg\",\n    \"begin\",\n    \"begin_frame\",\n    \"begin_partition\",\n    \"between\",\n    \"bigint\",\n    \"binary\",\n    \"blob\",\n    \"boolean\",\n    \"both\",\n    \"by\",\n    \"call\",\n    \"called\",\n    \"cardinality\",\n    \"cascaded\",\n    \"case\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"char\",\n    \"char_length\",\n    \"character\",\n    \"character_length\",\n    \"check\",\n    \"classifier\",\n    \"clob\",\n    \"close\",\n    \"coalesce\",\n    \"collate\",\n    \"collect\",\n    \"column\",\n    \"commit\",\n    \"condition\",\n    \"connect\",\n    \"constraint\",\n    \"contains\",\n    \"convert\",\n    \"copy\",\n    \"corr\",\n    \"corresponding\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"create\",\n    \"cross\",\n    \"cube\",\n    \"cume_dist\",\n    \"current\",\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_row\",\n    \"current_schema\",\n    \"current_time\",\n    \"current_timestamp\",\n    \"current_path\",\n    \"current_role\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"cursor\",\n    \"cycle\",\n    \"date\",\n    \"day\",\n    \"deallocate\",\n    \"dec\",\n    \"decimal\",\n    \"decfloat\",\n    \"declare\",\n    \"default\",\n    \"define\",\n    \"delete\",\n    \"dense_rank\",\n    \"deref\",\n    \"describe\",\n    \"deterministic\",\n    \"disconnect\",\n    \"distinct\",\n    \"double\",\n    \"drop\",\n    \"dynamic\",\n    \"each\",\n    \"element\",\n    \"else\",\n    \"empty\",\n    \"end\",\n    \"end_frame\",\n    \"end_partition\",\n    \"end-exec\",\n    \"equals\",\n    \"escape\",\n    \"every\",\n    \"except\",\n    \"exec\",\n    \"execute\",\n    \"exists\",\n    \"exp\",\n    \"external\",\n    \"extract\",\n    \"false\",\n    \"fetch\",\n    \"filter\",\n    \"first_value\",\n    \"float\",\n    \"floor\",\n    \"for\",\n    \"foreign\",\n    \"frame_row\",\n    \"free\",\n    \"from\",\n    \"full\",\n    \"function\",\n    \"fusion\",\n    \"get\",\n    \"global\",\n    \"grant\",\n    \"group\",\n    \"grouping\",\n    \"groups\",\n    \"having\",\n    \"hold\",\n    \"hour\",\n    \"identity\",\n    \"in\",\n    \"indicator\",\n    \"initial\",\n    \"inner\",\n    \"inout\",\n    \"insensitive\",\n    \"insert\",\n    \"int\",\n    \"integer\",\n    \"intersect\",\n    \"intersection\",\n    \"interval\",\n    \"into\",\n    \"is\",\n    \"join\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"language\",\n    \"large\",\n    \"last_value\",\n    \"lateral\",\n    \"lead\",\n    \"leading\",\n    \"left\",\n    \"like\",\n    \"like_regex\",\n    \"listagg\",\n    \"ln\",\n    \"local\",\n    \"localtime\",\n    \"localtimestamp\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"match\",\n    \"match_number\",\n    \"match_recognize\",\n    \"matches\",\n    \"max\",\n    \"member\",\n    \"merge\",\n    \"method\",\n    \"min\",\n    \"minute\",\n    \"mod\",\n    \"modifies\",\n    \"module\",\n    \"month\",\n    \"multiset\",\n    \"national\",\n    \"natural\",\n    \"nchar\",\n    \"nclob\",\n    \"new\",\n    \"no\",\n    \"none\",\n    \"normalize\",\n    \"not\",\n    \"nth_value\",\n    \"ntile\",\n    \"null\",\n    \"nullif\",\n    \"numeric\",\n    \"octet_length\",\n    \"occurrences_regex\",\n    \"of\",\n    \"offset\",\n    \"old\",\n    \"omit\",\n    \"on\",\n    \"one\",\n    \"only\",\n    \"open\",\n    \"or\",\n    \"order\",\n    \"out\",\n    \"outer\",\n    \"over\",\n    \"overlaps\",\n    \"overlay\",\n    \"parameter\",\n    \"partition\",\n    \"pattern\",\n    \"per\",\n    \"percent\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"period\",\n    \"portion\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"precedes\",\n    \"precision\",\n    \"prepare\",\n    \"primary\",\n    \"procedure\",\n    \"ptf\",\n    \"range\",\n    \"rank\",\n    \"reads\",\n    \"real\",\n    \"recursive\",\n    \"ref\",\n    \"references\",\n    \"referencing\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"release\",\n    \"result\",\n    \"return\",\n    \"returns\",\n    \"revoke\",\n    \"right\",\n    \"rollback\",\n    \"rollup\",\n    \"row\",\n    \"row_number\",\n    \"rows\",\n    \"running\",\n    \"savepoint\",\n    \"scope\",\n    \"scroll\",\n    \"search\",\n    \"second\",\n    \"seek\",\n    \"select\",\n    \"sensitive\",\n    \"session_user\",\n    \"set\",\n    \"show\",\n    \"similar\",\n    \"sin\",\n    \"sinh\",\n    \"skip\",\n    \"smallint\",\n    \"some\",\n    \"specific\",\n    \"specifictype\",\n    \"sql\",\n    \"sqlexception\",\n    \"sqlstate\",\n    \"sqlwarning\",\n    \"sqrt\",\n    \"start\",\n    \"static\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"submultiset\",\n    \"subset\",\n    \"substring\",\n    \"substring_regex\",\n    \"succeeds\",\n    \"sum\",\n    \"symmetric\",\n    \"system\",\n    \"system_time\",\n    \"system_user\",\n    \"table\",\n    \"tablesample\",\n    \"tan\",\n    \"tanh\",\n    \"then\",\n    \"time\",\n    \"timestamp\",\n    \"timezone_hour\",\n    \"timezone_minute\",\n    \"to\",\n    \"trailing\",\n    \"translate\",\n    \"translate_regex\",\n    \"translation\",\n    \"treat\",\n    \"trigger\",\n    \"trim\",\n    \"trim_array\",\n    \"true\",\n    \"truncate\",\n    \"uescape\",\n    \"union\",\n    \"unique\",\n    \"unknown\",\n    \"unnest\",\n    \"update   \",\n    \"upper\",\n    \"user\",\n    \"using\",\n    \"value\",\n    \"values\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"varbinary\",\n    \"varchar\",\n    \"varying\",\n    \"versioning\",\n    \"when\",\n    \"whenever\",\n    \"where\",\n    \"width_bucket\",\n    \"window\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"year\",\n  ];\n\n  // these are reserved words we have identified to be functions\n  // and should only be highlighted in a dispatch-like context\n  // ie, array_agg(...), etc.\n  const RESERVED_FUNCTIONS = [\n    \"abs\",\n    \"acos\",\n    \"array_agg\",\n    \"asin\",\n    \"atan\",\n    \"avg\",\n    \"cast\",\n    \"ceil\",\n    \"ceiling\",\n    \"coalesce\",\n    \"corr\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"covar_pop\",\n    \"covar_samp\",\n    \"cume_dist\",\n    \"dense_rank\",\n    \"deref\",\n    \"element\",\n    \"exp\",\n    \"extract\",\n    \"first_value\",\n    \"floor\",\n    \"json_array\",\n    \"json_arrayagg\",\n    \"json_exists\",\n    \"json_object\",\n    \"json_objectagg\",\n    \"json_query\",\n    \"json_table\",\n    \"json_table_primitive\",\n    \"json_value\",\n    \"lag\",\n    \"last_value\",\n    \"lead\",\n    \"listagg\",\n    \"ln\",\n    \"log\",\n    \"log10\",\n    \"lower\",\n    \"max\",\n    \"min\",\n    \"mod\",\n    \"nth_value\",\n    \"ntile\",\n    \"nullif\",\n    \"percent_rank\",\n    \"percentile_cont\",\n    \"percentile_disc\",\n    \"position\",\n    \"position_regex\",\n    \"power\",\n    \"rank\",\n    \"regr_avgx\",\n    \"regr_avgy\",\n    \"regr_count\",\n    \"regr_intercept\",\n    \"regr_r2\",\n    \"regr_slope\",\n    \"regr_sxx\",\n    \"regr_sxy\",\n    \"regr_syy\",\n    \"row_number\",\n    \"sin\",\n    \"sinh\",\n    \"sqrt\",\n    \"stddev_pop\",\n    \"stddev_samp\",\n    \"substring\",\n    \"substring_regex\",\n    \"sum\",\n    \"tan\",\n    \"tanh\",\n    \"translate\",\n    \"translate_regex\",\n    \"treat\",\n    \"trim\",\n    \"trim_array\",\n    \"unnest\",\n    \"upper\",\n    \"value_of\",\n    \"var_pop\",\n    \"var_samp\",\n    \"width_bucket\",\n  ];\n\n  // these functions can\n  const POSSIBLE_WITHOUT_PARENS = [\n    \"current_catalog\",\n    \"current_date\",\n    \"current_default_transform_group\",\n    \"current_path\",\n    \"current_role\",\n    \"current_schema\",\n    \"current_transform_group_for_type\",\n    \"current_user\",\n    \"session_user\",\n    \"system_time\",\n    \"system_user\",\n    \"current_time\",\n    \"localtime\",\n    \"current_timestamp\",\n    \"localtimestamp\"\n  ];\n\n  // those exist to boost relevance making these very\n  // \"SQL like\" keyword combos worth +1 extra relevance\n  const COMBOS = [\n    \"create table\",\n    \"insert into\",\n    \"primary key\",\n    \"foreign key\",\n    \"not null\",\n    \"alter table\",\n    \"add constraint\",\n    \"grouping sets\",\n    \"on overflow\",\n    \"character set\",\n    \"respect nulls\",\n    \"ignore nulls\",\n    \"nulls first\",\n    \"nulls last\",\n    \"depth first\",\n    \"breadth first\"\n  ];\n\n  const FUNCTIONS = RESERVED_FUNCTIONS;\n\n  const KEYWORDS = [...RESERVED_WORDS, ...NON_RESERVED_WORDS].filter((keyword) => {\n    return !RESERVED_FUNCTIONS.includes(keyword);\n  });\n\n  const VARIABLE = {\n    className: \"variable\",\n    begin: /@[a-z0-9]+/,\n  };\n\n  const OPERATOR = {\n    className: \"operator\",\n    begin: /[-+*/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,\n    relevance: 0,\n  };\n\n  const FUNCTION_CALL = {\n    begin: concat(/\\b/, either(...FUNCTIONS), /\\s*\\(/),\n    keywords: {\n      built_in: FUNCTIONS\n    }\n  };\n\n  // keywords with less than 3 letters are reduced in relevancy\n  function reduceRelevancy(list, {exceptions, when} = {}) {\n    const qualifyFn = when;\n    exceptions = exceptions || [];\n    return list.map((item) => {\n      if (item.match(/\\|\\d+$/) || exceptions.includes(item)) {\n        return item;\n      } else if (qualifyFn(item)) {\n        return `${item}|0`;\n      } else {\n        return item;\n      }\n    });\n  }\n\n  return {\n    name: 'SQL',\n    case_insensitive: true,\n    // does not include {} or HTML tags `</`\n    illegal: /[{}]|<\\//,\n    keywords: {\n      $pattern: /\\b[\\w\\.]+/,\n      keyword:\n        reduceRelevancy(KEYWORDS, { when: (x) => x.length < 3 }),\n      literal: LITERALS,\n      type: TYPES,\n      built_in: POSSIBLE_WITHOUT_PARENS\n    },\n    contains: [\n      {\n        begin: either(...COMBOS),\n        keywords: {\n          $pattern: /[\\w\\.]+/,\n          keyword: KEYWORDS.concat(COMBOS),\n          literal: LITERALS,\n          type: TYPES\n        },\n      },\n      {\n        className: \"type\",\n        begin: either(...MULTI_WORD_TYPES)\n      },\n      FUNCTION_CALL,\n      VARIABLE,\n      STRING,\n      QUOTED_IDENTIFIER,\n      hljs.C_NUMBER_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE,\n      OPERATOR\n    ]\n  };\n}\n\nmodule.exports = sql;\n"]},"metadata":{},"sourceType":"script"}