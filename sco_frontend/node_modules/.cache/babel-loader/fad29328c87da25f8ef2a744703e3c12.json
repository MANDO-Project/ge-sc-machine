{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Styles from \"./components/Styles\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { coy } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onSubmit = () => {\n      // Create an object of formData \n      const formData = new FormData();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'key': 'MqQVfJ6Fq1umZnUI7ZuaycciCjxi3gM0'\n        },\n        body: JSON.stringify({\n          filename: this.state.selectedFile.name\n        })\n      };\n      fetch('http://localhost:5555/v1.0.0/vulnerability/detection/line', requestOptions).then(response => response.json()).then(data => this.setState({\n        detectResults: data\n      }));\n      console.log(this.state.detectResults);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null,\n      detectResults: null,\n      codeString: \"\",\n      arrayerrorline: []\n    };\n  } // On file select (from the pop up) \n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.detectResults !== this.state.detectResults) {\n      var input = document.querySelector('input[type=file]').files[0];\n      var reader = new FileReader();\n      let array = [];\n      let ArrayUniq = [];\n      let self = this;\n      var data = this.state.detectResults;\n\n      reader.onload = function (event) {\n        self.setState({\n          codeString: event.target.result\n        });\n        data[\"results\"].forEach((node, index) => {\n          if (node[\"vulnerability\"] == 1) {\n            array = [...array, ...node[\"code_lines\"]];\n            ArrayUniq = [...new Set(array)];\n          }\n        });\n        self.setState({\n          arrayerrorline: ArrayUniq\n        });\n      };\n\n      reader.readAsBinaryString(input);\n    }\n  }\n\n  render() {\n    const linesToHighlight = this.state.arrayerrorline,\n          startingLineNumber = 1;\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFC1 Smart Contract Vulnerability Detection - SCO Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/erichoang/ge-sc\",\n          children: \"More details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"This is the quick vulnerability detection demo for \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"reentrancy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 66\n          }, this), \" bug in smart contract.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: this.onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", JSON.stringify(this.state.selectedFileName)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        startingLineNumber: startingLineNumber,\n        language: \"solidity\",\n        style: coy,\n        showLineNumbers: true,\n        wrapLines: true,\n        lineProps: lineNumber => {\n          const style = {\n            display: \"block\",\n            width: \"fit-content\"\n          };\n\n          if (linesToHighlight.includes(lineNumber)) {\n            style.backgroundColor = \"#ffe7a4\";\n          }\n\n          return {\n            style\n          };\n        },\n        children: this.state.codeString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/src/App.js"],"names":["React","Component","Styles","Prism","SyntaxHighlighter","coy","App","constructor","props","onFileChange","event","setState","selectedFile","target","files","onSubmit","formData","FormData","requestOptions","method","headers","body","JSON","stringify","filename","state","name","fetch","then","response","json","data","detectResults","console","log","handleSubmit","preventDefault","codeString","arrayerrorline","componentDidUpdate","prevProps","prevState","input","document","querySelector","reader","FileReader","array","ArrayUniq","self","onload","result","forEach","node","index","Set","readAsBinaryString","render","linesToHighlight","startingLineNumber","selectedFileName","lineNumber","style","display","width","includes","backgroundColor"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'; \nimport Styles from \"./components/Styles\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport {coy} from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass App extends Component { \n\n    constructor(props){\n      super(props);\n      this.state = { \n        // Initially, no file is selected \n        selectedFile: null,\n        detectResults: null,\n        codeString :\"\",\n        arrayerrorline:[]\n      }; \n\n    }\n\n    // On file select (from the pop up) \n    onFileChange = event => { \n      // Update the state \n      this.setState({ selectedFile: event.target.files[0] });\n    }\n    // On file upload (click the upload button) \n    onSubmit = () => {\n      \n      // Create an object of formData \n      const formData = new FormData(); \n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'key': 'MqQVfJ6Fq1umZnUI7ZuaycciCjxi3gM0'},\n        body: JSON.stringify({ filename: this.state.selectedFile.name})\n      };\n      fetch('http://localhost:5555/v1.0.0/vulnerability/detection/line', requestOptions)\n      .then(response => response.json())\n      .then(data => this.setState({ detectResults: data}));\n      \n      console.log(this.state.detectResults);\n        \n    }; \n    componentDidUpdate(prevProps,prevState){\n      if(prevState.detectResults!==this.state.detectResults){\n        var input = document.querySelector('input[type=file]').files[0];\n          \n        var reader = new FileReader();\n        \n        let array = []\n        let ArrayUniq = []\n        let self=this\n\n        var data=this.state.detectResults;\n\n        reader.onload = function (event) {\n          self.setState({codeString: event.target.result})\n           \n          data[\"results\"].forEach((node, index) => {\n            if (node[\"vulnerability\"] == 1) {\n              array = [...array, ...node[\"code_lines\"]]\n              ArrayUniq = [...new Set(array)];\n            }\n          })\n          self.setState({arrayerrorline:ArrayUniq});  \n        };\n        reader.readAsBinaryString(input);\n      }\n    };\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n    };\n    \n     \n    render() {\n      const linesToHighlight = this.state.arrayerrorline,startingLineNumber = 1;\n      return ( \n        <Styles>\n          <div>\n            <h1>🏁 Smart Contract Vulnerability Detection - SCO Demo</h1>\n            <a href=\"https://github.com/erichoang/ge-sc\">\n              More details\n            </a>\n            <p>\n              This is the quick vulnerability detection demo for <em>reentrancy</em> bug in smart contract.\n            </p>\n          </div>\n          <form onSubmit={this.handleSubmit} id=\"form\">\n            <div> \n                <input type=\"file\" id=\"input\" onChange={this.onFileChange} />\n                <div className=\"buttons\">\n                  <button\n                    type=\"submit\"\n                    onClick={this.onSubmit}\n                  >\n                    Submit\n                  </button>\n                </div>\n            </div>\n            <p>File Name: {JSON.stringify(this.state.selectedFileName)}</p>\n          </form>\n          <SyntaxHighlighter\n                  startingLineNumber={startingLineNumber}\n                  language='solidity'\n                  style={coy}\n                  showLineNumbers\n                  wrapLines\n                  lineProps={(lineNumber) => {\n                      const style = { display: \"block\", width: \"fit-content\" };\n                      if (linesToHighlight.includes(lineNumber)) {\n                          style.backgroundColor = \"#ffe7a4\";\n                      }\n                      return { style };\n                  }}\n                  \n                  >\n                  {this.state.codeString}\n              </SyntaxHighlighter>\n        \n        </Styles> \n      ); \n    } \n  } \n  \n  export default App; \n  \n"]},"metadata":{},"sourceType":"module"}