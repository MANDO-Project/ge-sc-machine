{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Styles from \"./components/Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onSubmit = () => {\n      // Create an object of formData \n      const formData = new FormData();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'key': 'MqQVfJ6Fq1umZnUI7ZuaycciCjxi3gM0'\n        },\n        body: JSON.stringify({\n          filename: this.state.selectedFile.name\n        })\n      };\n      fetch('http://localhost:5555/v1.0.0/vulnerability/detection/line', requestOptions).then(response => response.json()).then(data => this.setState({\n        detectResults: data\n      }));\n      console.log(this.state.detectResults);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null,\n      detectResults: null,\n      htmlElement: \"\"\n    };\n  } // On file select (from the pop up) \n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.detectResults !== this.state.detectResults) {\n      var input = document.querySelector('input[type=file]').files[0];\n      var output = document.getElementById(\"output\");\n      var reader = new FileReader();\n      let i = 0;\n      let string = ``;\n      let arrayString = [];\n      let array = [];\n      let ArrayUniq = [];\n      let temp = ``;\n      var data = this.state.detectResults;\n\n      reader.onload = function (event) {\n        const file = event.target.result;\n        const allLines = file.split(/\\r\\n|\\n/); // Reading line by line\n\n        data[\"results\"].forEach((node, index) => {\n          if (node[\"vulnerability\"] == 1) {\n            array = [...array, ...node[\"code_lines\"]];\n            ArrayUniq = [...new Set(array)];\n          }\n        });\n        allLines.forEach(line => {\n          i += 1;\n          string = `${i} ${line}`;\n          arrayString.push(string); // console.log('line', line)\n        });\n        arrayString.forEach((line, index) => {\n          if (!ArrayUniq.includes(index)) {\n            temp += `<p>${line}</p> \\n`;\n          } else {\n            temp += `<p class='color-red'>${line}</p>\\n`;\n          }\n        });\n      };\n\n      reader.onloadend = function (e) {\n        output.innerHTML = temp;\n      };\n\n      reader.readAsBinaryString(input);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFC1 Smart Contract Vulnerability Detection - SCO Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/erichoang/ge-sc\",\n          children: \"More details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"This is the quick vulnerability detection demo for \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"reentrancy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 66\n          }, this), \" bug in smart contract.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input\",\n            onChange: this.onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: this.onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", JSON.stringify(this.state.selectedFileName)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          id: \"output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/src/App.js"],"names":["React","Component","Styles","App","constructor","props","onFileChange","event","setState","selectedFile","target","files","onSubmit","formData","FormData","requestOptions","method","headers","body","JSON","stringify","filename","state","name","fetch","then","response","json","data","detectResults","console","log","handleSubmit","preventDefault","htmlElement","componentDidUpdate","prevProps","prevState","input","document","querySelector","output","getElementById","reader","FileReader","i","string","arrayString","array","ArrayUniq","temp","onload","file","result","allLines","split","forEach","node","index","Set","line","push","includes","onloadend","e","innerHTML","readAsBinaryString","render","selectedFileName"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'; \nimport Styles from \"./components/Styles\";\n\nclass App extends Component { \n\n    constructor(props){\n      super(props);\n      this.state = { \n        // Initially, no file is selected \n        selectedFile: null,\n        detectResults: null,\n        htmlElement: \"\"\n      }; \n\n    }\n\n    // On file select (from the pop up) \n    onFileChange = event => { \n      // Update the state \n      this.setState({ selectedFile: event.target.files[0] });\n    }\n    // On file upload (click the upload button) \n    onSubmit = () => {\n      \n      // Create an object of formData \n      const formData = new FormData(); \n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'key': 'MqQVfJ6Fq1umZnUI7ZuaycciCjxi3gM0'},\n        body: JSON.stringify({ filename: this.state.selectedFile.name})\n      };\n      fetch('http://localhost:5555/v1.0.0/vulnerability/detection/line', requestOptions)\n      .then(response => response.json())\n      .then(data => this.setState({ detectResults: data}));\n      \n      console.log(this.state.detectResults);\n        \n    }; \n    componentDidUpdate(prevProps,prevState){\n      if(prevState.detectResults!==this.state.detectResults){\n        var input = document.querySelector('input[type=file]').files[0];\n        var output = document.getElementById(\"output\");\n          \n        var reader = new FileReader();\n        let i = 0;\n        let string = ``;\n        \n        let arrayString = []\n        let array = []\n        let ArrayUniq = []\n        let temp = ``\n\n        var data=this.state.detectResults;\n\n        reader.onload = function (event) {\n          const file = event.target.result;\n          const allLines = file.split(/\\r\\n|\\n/);\n          // Reading line by line\n           \n          data[\"results\"].forEach((node, index) => {\n            if (node[\"vulnerability\"] == 1) {\n              array = [...array, ...node[\"code_lines\"]]\n              ArrayUniq = [...new Set(array)];\n            }\n          })\n\n          allLines.forEach((line) => {\n            i += 1\n            string = `${i} ${line}`\n            arrayString.push(string)\n            // console.log('line', line)\n          })\n\n          arrayString.forEach((line, index) => {\n            if (!ArrayUniq.includes(index)) {\n              temp += `<p>${line}</p> \\n`\n            }\n            else {\n              temp += `<p class='color-red'>${line}</p>\\n`\n            }\n          })\n        };\n\n        reader.onloadend=function(e){\n          output.innerHTML=temp\n        };\n        reader.readAsBinaryString(input);\n      }\n    };\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n    };\n    \n     \n    render() {\n       \n      return ( \n        <Styles>\n          <form onSubmit={this.handleSubmit} id=\"form\">\n            <h1>🏁 Smart Contract Vulnerability Detection - SCO Demo</h1>\n            <a href=\"https://github.com/erichoang/ge-sc\">\n              More details\n            </a>\n            <p>\n              This is the quick vulnerability detection demo for <em>reentrancy</em> bug in smart contract.\n            </p>\n            <div> \n                <input type=\"file\" id=\"input\" onChange={this.onFileChange} />\n                <div className=\"buttons\">\n                  <button\n                    type=\"submit\"\n                    onClick={this.onSubmit}\n                  >\n                    Submit\n                  </button>\n                </div>\n            </div>\n            <p>File Name: {JSON.stringify(this.state.selectedFileName)}</p>\n            <pre id=\"output\"></pre>\n          </form>\n        \n        </Styles> \n      ); \n    } \n  } \n  \n  export default App; \n  \n"]},"metadata":{},"sourceType":"module"}