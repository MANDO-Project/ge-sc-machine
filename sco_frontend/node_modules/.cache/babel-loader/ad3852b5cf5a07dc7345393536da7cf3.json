{"ast":null,"code":"/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube: {}\n  },\n  mappings: {\n    path: 'tube.path',\n    segments: 'tube.segments',\n    radius: 'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed: 'tube.closed'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path: {\n      default: []\n    },\n    segments: {\n      default: 64\n    },\n    radius: {\n      default: 1\n    },\n    radialSegments: {\n      default: 8\n    },\n    closed: {\n      default: false\n    }\n  },\n  init: function init() {\n    var el = this.el,\n        data = this.data;\n    var material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    var curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    var geometry = new THREE.TubeGeometry(curve, data.segments, data.radius, data.radialSegments, data.closed);\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n  update: function update(prevData) {\n    if (!Object.keys(prevData).length) return;\n    this.remove();\n    this.init();\n  },\n  remove: function remove() {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});","map":null,"metadata":{},"sourceType":"script"}