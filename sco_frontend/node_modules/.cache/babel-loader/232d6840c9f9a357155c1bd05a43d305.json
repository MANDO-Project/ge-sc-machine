{"ast":null,"code":"/*\nLanguage: F#\nAuthor: Jonas Follesø <jonas@follesoe.no>\nContributors: Troy Kershaw <hello@troykershaw.com>, Henrik Feldt <henrik@haf.se>\nWebsite: https://docs.microsoft.com/en-us/dotnet/fsharp/\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction fsharp(hljs) {\n  const TYPEPARAM = {\n    begin: '<',\n    end: '>',\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: /'[a-zA-Z0-9_]+/\n    })]\n  };\n  return {\n    name: 'F#',\n    aliases: ['fs'],\n    keywords: 'abstract and as assert base begin class default delegate do done ' + 'downcast downto elif else end exception extern false finally for ' + 'fun function global if in inherit inline interface internal lazy let ' + 'match member module mutable namespace new null of open or ' + 'override private public rec return sig static struct then to ' + 'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [{\n      // monad builder keywords (matches before non-bang kws)\n      className: 'keyword',\n      begin: /\\b(yield|return|let|do)!/\n    }, {\n      className: 'string',\n      begin: '@\"',\n      end: '\"',\n      contains: [{\n        begin: '\"\"'\n      }]\n    }, {\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"'\n    }, hljs.COMMENT('\\\\(\\\\*(\\\\s)', '\\\\*\\\\)', {\n      contains: [\"self\"]\n    }), {\n      className: 'class',\n      beginKeywords: 'type',\n      end: '\\\\(|=|$',\n      excludeEnd: true,\n      contains: [hljs.UNDERSCORE_TITLE_MODE, TYPEPARAM]\n    }, {\n      className: 'meta',\n      begin: '\\\\[<',\n      end: '>\\\\]',\n      relevance: 10\n    }, {\n      className: 'symbol',\n      begin: '\\\\B(\\'[A-Za-z])\\\\b',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, hljs.C_LINE_COMMENT_MODE, hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), hljs.C_NUMBER_MODE]\n  };\n}\n\nmodule.exports = fsharp;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/fsharp.js"],"names":["fsharp","hljs","TYPEPARAM","begin","end","contains","inherit","TITLE_MODE","name","aliases","keywords","illegal","className","COMMENT","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","relevance","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE,GADS;AAEhBC,IAAAA,GAAG,EAAE,GAFW;AAGhBC,IAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACM,UAAlB,EAA8B;AAC5BJ,MAAAA,KAAK,EAAE;AADqB,KAA9B,CADQ;AAHM,GAAlB;AAUA,SAAO;AACLK,IAAAA,IAAI,EAAE,IADD;AAELC,IAAAA,OAAO,EAAE,CAAC,IAAD,CAFJ;AAGLC,IAAAA,QAAQ,EACN,sEACA,mEADA,GAEA,uEAFA,GAGA,4DAHA,GAIA,+DAJA,GAKA,yDATG;AAULC,IAAAA,OAAO,EAAE,MAVJ;AAWLN,IAAAA,QAAQ,EAAE,CACR;AACE;AACAO,MAAAA,SAAS,EAAE,SAFb;AAGET,MAAAA,KAAK,EAAE;AAHT,KADQ,EAMR;AACES,MAAAA,SAAS,EAAE,QADb;AAEET,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,GAAG,EAAE,GAHP;AAIEC,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,KAAK,EAAE;AADT,OADQ;AAJZ,KANQ,EAgBR;AACES,MAAAA,SAAS,EAAE,QADb;AAEET,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAhBQ,EAqBRH,IAAI,CAACY,OAAL,CAAa,aAAb,EAA4B,QAA5B,EAAsC;AACpCR,MAAAA,QAAQ,EAAE,CAAC,MAAD;AAD0B,KAAtC,CArBQ,EAwBR;AACEO,MAAAA,SAAS,EAAE,OADb;AAEEE,MAAAA,aAAa,EAAE,MAFjB;AAGEV,MAAAA,GAAG,EAAE,SAHP;AAIEW,MAAAA,UAAU,EAAE,IAJd;AAKEV,MAAAA,QAAQ,EAAE,CACRJ,IAAI,CAACe,qBADG,EAERd,SAFQ;AALZ,KAxBQ,EAkCR;AACEU,MAAAA,SAAS,EAAE,MADb;AAEET,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,GAAG,EAAE,MAHP;AAIEa,MAAAA,SAAS,EAAE;AAJb,KAlCQ,EAwCR;AACEL,MAAAA,SAAS,EAAE,QADb;AAEET,MAAAA,KAAK,EAAE,oBAFT;AAGEE,MAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACiB,gBAAN;AAHZ,KAxCQ,EA6CRjB,IAAI,CAACkB,mBA7CG,EA8CRlB,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACmB,iBAAlB,EAAqC;AACnCT,MAAAA,OAAO,EAAE;AAD0B,KAArC,CA9CQ,EAiDRV,IAAI,CAACoB,aAjDG;AAXL,GAAP;AA+DD;;AAEDC,MAAM,CAACC,OAAP,GAAiBvB,MAAjB","sourcesContent":["/*\nLanguage: F#\nAuthor: Jonas Follesø <jonas@follesoe.no>\nContributors: Troy Kershaw <hello@troykershaw.com>, Henrik Feldt <henrik@haf.se>\nWebsite: https://docs.microsoft.com/en-us/dotnet/fsharp/\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction fsharp(hljs) {\n  const TYPEPARAM = {\n    begin: '<',\n    end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: /'[a-zA-Z0-9_]+/\n      })\n    ]\n  };\n\n  return {\n    name: 'F#',\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"',\n        end: '\"',\n        contains: [\n          {\n            begin: '\"\"'\n          }\n        ]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"',\n        end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*(\\\\s)', '\\\\*\\\\)', {\n        contains: [\"self\"]\n      }),\n      {\n        className: 'class',\n        beginKeywords: 'type',\n        end: '\\\\(|=|$',\n        excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<',\n        end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null\n      }),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = fsharp;\n"]},"metadata":{},"sourceType":"script"}