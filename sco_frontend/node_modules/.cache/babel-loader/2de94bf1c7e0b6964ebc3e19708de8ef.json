{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\n\n\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n  return {\n    name: 'ActionScript',\n    aliases: ['as'],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' + 'else extends final finally for function get if implements import in include ' + 'instanceof interface internal is namespace native new override package private ' + 'protected public return set static super switch this throw try typeof use var void ' + 'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.C_NUMBER_MODE, {\n      className: 'class',\n      beginKeywords: 'package',\n      end: /\\{/,\n      contains: [hljs.TITLE_MODE]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface',\n      end: /\\{/,\n      excludeEnd: true,\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.TITLE_MODE]\n    }, {\n      className: 'meta',\n      beginKeywords: 'import include',\n      end: /;/,\n      keywords: {\n        'meta-keyword': 'import include'\n      }\n    }, {\n      className: 'function',\n      beginKeywords: 'function',\n      end: /[{;]/,\n      excludeEnd: true,\n      illegal: /\\S/,\n      contains: [hljs.TITLE_MODE, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, AS3_REST_ARG_MODE]\n      }, {\n        begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE)\n      }]\n    }, hljs.METHOD_GUARD],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/actionscript.js"],"names":["source","re","concat","args","joined","map","x","join","actionscript","hljs","IDENT_RE","IDENT_FUNC_RETURN_TYPE_RE","AS3_REST_ARG_MODE","className","begin","end","relevance","name","aliases","keywords","keyword","literal","contains","APOS_STRING_MODE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","beginKeywords","TITLE_MODE","excludeEnd","illegal","METHOD_GUARD","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    name: 'ActionScript',\n    aliases: [ 'as' ],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include',\n        end: /;/,\n        keywords: { 'meta-keyword': 'import include' }\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          { begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE) }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;\n"]},"metadata":{},"sourceType":"script"}