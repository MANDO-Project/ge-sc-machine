{"ast":null,"code":"/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\nfunction haskell(hljs) {\n  const COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT(/\\{-/, /-\\}/, {\n      contains: ['self']\n    })]\n  };\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [PRAGMA, PREPROCESSOR, {\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[_a-z][\\\\w\\']*'\n    }), COMMENT]\n  };\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords: 'let in if then else case of where do module import hiding ' + 'qualified type data newtype deriving class instance as default ' + 'infix infixl infixr foreign export ccall stdcall cplusplus ' + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'module',\n      end: 'where',\n      keywords: 'module where',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: '\\\\bimport\\\\b',\n      end: '$',\n      keywords: 'import qualified as hiding',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'class',\n      begin: '^(\\\\s*)?(class|instance)\\\\b',\n      end: 'where',\n      keywords: 'class family instance where',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      className: 'class',\n      begin: '\\\\b(data|(new)?type)\\\\b',\n      end: '$',\n      keywords: 'data family type newtype deriving',\n      contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'default',\n      end: '$',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: '\\\\bforeign\\\\b',\n      end: '$',\n      keywords: 'foreign import export ccall stdcall cplusplus jvm ' + 'dotnet safe unsafe',\n      contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n    }, {\n      className: 'meta',\n      begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n      end: '$'\n    }, // \"Whitespaces\".\n    PRAGMA, PREPROCESSOR, // Literals and names.\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      // No markup, relevance booster\n      begin: '->|<-'\n    }]\n  };\n}\n\nmodule.exports = haskell;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/haskell.js"],"names":["haskell","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","name","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '[_a-z][\\\\w\\']*'\n      }),\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n      // Top-level constructions.\n      {\n        beginKeywords: 'module',\n        end: 'where',\n        keywords: 'module where',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b',\n        end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b',\n        end: 'where',\n        keywords: 'class family instance where',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b',\n        end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [\n          PRAGMA,\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'default',\n        end: '$',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: '\\\\bforeign\\\\b',\n        end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [\n          CONSTRUCTOR,\n          hljs.QUOTE_STRING_MODE,\n          COMMENT\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n        end: '$'\n      },\n      // \"Whitespaces\".\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n      { // No markup, relevance booster\n        begin: '->|<-'\n      }\n    ]\n  };\n}\n\nmodule.exports = haskell;\n"]},"metadata":{},"sourceType":"script"}