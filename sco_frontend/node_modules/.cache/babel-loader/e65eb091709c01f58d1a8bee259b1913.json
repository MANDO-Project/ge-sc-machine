{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Music\\\\MANDO\\\\ge-sc-machine\\\\sco_frontend\\\\src\\\\components\\\\Graph.js\";\nimport React, { Component, useCallback } from 'react';\nimport { ForceGraph2D } from 'react-force-graph';\nimport \"./graph.css\";\n\nvar Graph = /*#__PURE__*/function (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Graph).call(this, props));\n    _this.state = {\n      graph: {\n        nodes: [],\n        links: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.detectResults !== this.props.detectResults) {\n        var self = this;\n        var data = this.props.detectResults;\n        self.setState({\n          graph: data[\"graph\"]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.graph;\n      var nodes = data[\"nodes\"].flat().map(function (app) {\n        return {\n          id: app.id,\n          name: app.name,\n          nodeColor: app.color,\n          code_lines: app.code_lines,\n          error: app.error\n        };\n      });\n      var links = data[\"links\"].flat().map(function (app) {\n        return {\n          \"source\": app.source,\n          \"target\": app.target\n        };\n      });\n      var myGraph = {\n        nodes: nodes,\n        links: links\n      };\n\n      var paintRing = function paintRing(node, ctx) {\n        // add ring just for highlighted nodes\n        var gData = myGraph;\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, 5 * 1.8, 0, 2 * Math.PI, false);\n        ctx.fillStyle = gData.nodes[node.id].nodeColor;\n        ctx.fill();\n        ctx.stroke();\n      };\n\n      var handleClick = function handleClick(node) {\n        var result = myGraph.nodes[node.id].code_lines;\n\n        _this2.props.parentCallback(result);\n      };\n\n      var draw_red_circle = function draw_red_circle() {\n        var canvas = document.getElementById('circle');\n\n        if (canvas.getContext) {\n          var ctx = canvas.getContext('2d');\n          var X = canvas.width / 2;\n          var Y = canvas.height / 2;\n          var R = 45;\n          ctx.beginPath();\n          ctx.arc(X, Y, R, 0, 2 * Math.PI, false);\n          ctx.lineWidth = 3;\n          ctx.strokeStyle = '#FF0000';\n          ctx.stroke();\n          ctx.fill();\n        }\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onLoad: draw_red_circle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"entrypoint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 43\n        }\n      }), \"  Entry_point\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"new_var\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 43\n        }\n      }), \"New_var\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"expression\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 43\n        }\n      }), \"  Expression\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"if\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 43\n        }\n      }), \"  If\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"endif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 43\n        }\n      }), \" EndIf\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"bg_loop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 43\n        }\n      }), \"  BG Loop  \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"other\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 43\n        }\n      }), \"  Other\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"throw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 43\n        }\n      }), \"  Throw\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"continue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }\n      }), \"  Continue\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"return\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }\n      }), \"  Return\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"inline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 43\n        }\n      }), \"  Inline ASM\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"func\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 43\n        }\n      }), \"  Func\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"end_loop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 43\n        }\n      }), \"  End Loop\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"ifloop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 43\n        }\n      }), \"  If Loop\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"_\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 43\n        }\n      }), \"  _\"))), /*#__PURE__*/React.createElement(ForceGraph2D, {\n        graphData: myGraph,\n        nodeRelSize: 5,\n        width: 580,\n        height: 520,\n        nodeCanvasObject: paintRing,\n        nodeCanvasObjectMode: function nodeCanvasObjectMode(node) {\n          return 'before';\n        },\n        nodeColor: function nodeColor(node) {\n          return myGraph.nodes[node.id].error == 1 ? \"red\" : \"white\";\n        },\n        linkDirectionalParticles: 4,\n        nodeLabel: function nodeLabel(node) {\n          return myGraph.nodes[node.id].name;\n        },\n        onNodeClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line_note\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"note\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 40\n        }\n      }), \" Bug\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"note\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 40\n        }\n      }), \" Clean\")));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\nexport { Graph as default };","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/src/components/Graph.js"],"names":["React","Component","useCallback","ForceGraph2D","Graph","props","state","graph","nodes","links","prevProps","prevState","detectResults","self","data","setState","flat","map","app","id","name","nodeColor","color","code_lines","error","source","target","myGraph","paintRing","node","ctx","gData","beginPath","arc","x","y","Math","PI","fillStyle","fill","stroke","handleClick","result","parentCallback","draw_red_circle","canvas","document","getElementById","getContext","X","width","Y","height","R","lineWidth","strokeStyle"],"mappings":"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","sourcesContent":["import React,{Component,useCallback} from 'react';\r\nimport { ForceGraph2D} from 'react-force-graph';\r\nimport \"./graph.css\";\r\nexport default class Graph extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {  \r\n          graph:{nodes: [],links: [],},\r\n        }; \r\n      }\r\n      \r\n\r\n      componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.detectResults!==this.props.detectResults){\r\n            let self=this\r\n  \r\n            var data=this.props.detectResults;\r\n            self.setState({graph:data[\"graph\"]})\r\n        }\r\n      };  \r\n    \r\n    render(){\r\n\r\n        const data=this.state.graph\r\n        const nodes=data[\"nodes\"].flat().map(app=>({id:app.id,name:app.name,nodeColor: app.color,code_lines:app.code_lines,error:app.error}))\r\n        const links=data[\"links\"].flat().map(app=>({\"source\":app.source,\"target\":app.target}))\r\n        const myGraph={nodes,links};\r\n        \r\n\r\n\r\n        const paintRing = (node, ctx) => {\r\n            // add ring just for highlighted nodes\r\n            let gData=myGraph;\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, 5 * 1.8, 0, 2 * Math.PI, false);\r\n            ctx.fillStyle = gData.nodes[node.id].nodeColor;\r\n            ctx.fill();\r\n            ctx.stroke();\r\n          };\r\n\r\n          \r\n        const handleClick=(node)=>{\r\n            let result=myGraph.nodes[node.id].code_lines;\r\n            this.props.parentCallback(result);\r\n        };\r\n        const draw_red_circle=()=>{\r\n        var canvas = document.getElementById('circle');\r\n        if (canvas.getContext)\r\n            {\r\n            var ctx = canvas.getContext('2d'); \r\n            var X = canvas.width / 2;\r\n            var Y = canvas.height / 2;\r\n            var R = 45;\r\n            ctx.beginPath();\r\n            ctx.arc(X, Y, R, 0, 2 * Math.PI, false);\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = '#FF0000';\r\n            ctx.stroke();\r\n            ctx.fill();\r\n            }\r\n        }\r\n        return(\r\n            <div onLoad={draw_red_circle}>\r\n                <div className='comment'>\r\n                <div className='line'>\r\n                    <div className='col' ><span id='entrypoint' ></span>  Entry_point</div> \r\n                    <div className='col' ><span id='new_var' ></span>New_var</div>  \r\n                    <div className='col' ><span id='expression' ></span>  Expression</div>   \r\n                    <div className='col' ><span id='if' ></span>  If</div>  \r\n                    <div className='col' ><span id='endif' ></span> EndIf</div>  \r\n                </div>\r\n                <div className='line'>\r\n                    <div className='col' ><span id='bg_loop' ></span>  BG Loop  </div>  \r\n                    <div className='col' ><span id='other' ></span>  Other</div>  \r\n                    <div className='col' ><span id='throw' ></span>  Throw</div>   \r\n                    <div className='col' ><span id='continue' ></span>  Continue</div>  \r\n                    <div className='col' ><span id='return' ></span>  Return</div>  \r\n                </div>\r\n                <div className='line'>\r\n                    <div className='col' ><span id='inline' ></span>  Inline ASM</div> \r\n                    <div className='col' ><span id='func' ></span>  Func</div> \r\n                    <div className='col' ><span id='end_loop' ></span>  End Loop</div>   \r\n                    <div className='col' ><span id='ifloop' ></span>  If Loop</div> \r\n                    <div className='col' ><span id='_' ></span>  _</div>  \r\n                </div>\r\n                </div>\r\n                <ForceGraph2D graphData={myGraph} \r\n                nodeRelSize={5} width={580} height={520}\r\n                nodeCanvasObject={paintRing}\r\n                nodeCanvasObjectMode={node => 'before'}\r\n                nodeColor={node=>myGraph.nodes[node.id].error==1? \"red\":\"white\"}\r\n                linkDirectionalParticles={4}\r\n                nodeLabel={node=>myGraph.nodes[node.id].name}\r\n                onNodeClick={handleClick}\r\n                \r\n                />\r\n            <div className='line_note'>\r\n                <div className='note' ><span id='red' ></span> Bug</div> \r\n                <div className='note' ><span id='white' ></span> Clean</div> \r\n            </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}