{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: AspectJ\nAuthor: Hakan Ozler <ozler.hakan@gmail.com>\nWebsite: https://www.eclipse.org/aspectj/\nDescription: Syntax Highlighting for the AspectJ Language which is a general-purpose aspect-oriented extension to the Java programming language.\nAudit: 2020\n*/\n\n/** @type LanguageFn */\n\n\nfunction aspectj(hljs) {\n  const KEYWORDS = 'false synchronized int abstract float private char boolean static null if const ' + 'for true while long throw strictfp finally protected import native final return void ' + 'enum else extends implements break transient new catch instanceof byte super volatile case ' + 'assert short package default double public try this switch continue throws privileged ' + 'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' + 'staticinitialization withincode target within execution getWithinTypeName handler ' + 'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents ' + 'warning error soft precedence thisAspectInstance';\n  const SHORTKEYS = 'get set args call';\n  return {\n    name: 'AspectJ',\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [hljs.COMMENT(/\\/\\*\\*/, /\\*\\//, {\n      relevance: 0,\n      contains: [{\n        // eat up @'s in emails to prevent them to be recognized as doctags\n        begin: /\\w+@/,\n        relevance: 0\n      }, {\n        className: 'doctag',\n        begin: /@[A-Za-z]+/\n      }]\n    }), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, {\n      className: 'class',\n      beginKeywords: 'aspect',\n      end: /[{;=]/,\n      excludeEnd: true,\n      illegal: /[:;\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\n      }, hljs.UNDERSCORE_TITLE_MODE, {\n        begin: /\\([^\\)]*/,\n        end: /[)]+/,\n        keywords: KEYWORDS + ' ' + SHORTKEYS,\n        excludeEnd: false\n      }]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface',\n      end: /[{;=]/,\n      excludeEnd: true,\n      relevance: 0,\n      keywords: 'class interface',\n      illegal: /[:\"\\[\\]]/,\n      contains: [{\n        beginKeywords: 'extends implements'\n      }, hljs.UNDERSCORE_TITLE_MODE]\n    }, {\n      // AspectJ Constructs\n      beginKeywords: 'pointcut after before around throwing returning',\n      end: /[)]/,\n      excludeEnd: false,\n      illegal: /[\"\\[\\]]/,\n      contains: [{\n        begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n        returnBegin: true,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }]\n    }, {\n      begin: /[:]/,\n      returnBegin: true,\n      end: /[{;]/,\n      relevance: 0,\n      excludeEnd: false,\n      keywords: KEYWORDS,\n      illegal: /[\"\\[\\]]/,\n      contains: [{\n        begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n        keywords: KEYWORDS + ' ' + SHORTKEYS,\n        relevance: 0\n      }, hljs.QUOTE_STRING_MODE]\n    }, {\n      // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\n      beginKeywords: 'new throw',\n      relevance: 0\n    }, {\n      // the function class is a bit different for AspectJ compared to the Java language\n      className: 'function',\n      begin: /\\w+ +\\w+(\\.\\w+)?\\s*\\([^\\)]*\\)\\s*((throws)[\\w\\s,]+)?[\\{;]/,\n      returnBegin: true,\n      end: /[{;=]/,\n      keywords: KEYWORDS,\n      excludeEnd: true,\n      contains: [{\n        begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        relevance: 0,\n        keywords: KEYWORDS,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, hljs.C_BLOCK_COMMENT_MODE]\n      }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n    }, hljs.C_NUMBER_MODE, {\n      // annotation is also used in this language\n      className: 'meta',\n      begin: /@[A-Za-z]+/\n    }]\n  };\n}\n\nmodule.exports = aspectj;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/aspectj.js"],"names":["source","re","concat","args","joined","map","x","join","aspectj","hljs","KEYWORDS","SHORTKEYS","name","keywords","illegal","contains","COMMENT","relevance","begin","className","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","QUOTE_STRING_MODE","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","UNDERSCORE_IDENT_RE","returnBegin","C_NUMBER_MODE","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: AspectJ\nAuthor: Hakan Ozler <ozler.hakan@gmail.com>\nWebsite: https://www.eclipse.org/aspectj/\nDescription: Syntax Highlighting for the AspectJ Language which is a general-purpose aspect-oriented extension to the Java programming language.\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction aspectj(hljs) {\n  const KEYWORDS =\n    'false synchronized int abstract float private char boolean static null if const ' +\n    'for true while long throw strictfp finally protected import native final return void ' +\n    'enum else extends implements break transient new catch instanceof byte super volatile case ' +\n    'assert short package default double public try this switch continue throws privileged ' +\n    'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +\n    'staticinitialization withincode target within execution getWithinTypeName handler ' +\n    'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents ' +\n    'warning error soft precedence thisAspectInstance';\n  const SHORTKEYS = 'get set args call';\n\n  return {\n    name: 'AspectJ',\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        /\\/\\*\\*/,\n        /\\*\\//,\n        {\n          relevance: 0,\n          contains: [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/,\n              relevance: 0\n            },\n            {\n              className: 'doctag',\n              begin: /@[A-Za-z]+/\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'aspect',\n        end: /[{;=]/,\n        excludeEnd: true,\n        illegal: /[:;\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin: /\\([^\\)]*/,\n            end: /[)]+/,\n            keywords: KEYWORDS + ' ' + SHORTKEYS,\n            excludeEnd: false\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /[{;=]/,\n        excludeEnd: true,\n        relevance: 0,\n        keywords: 'class interface',\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        // AspectJ Constructs\n        beginKeywords: 'pointcut after before around throwing returning',\n        end: /[)]/,\n        excludeEnd: false,\n        illegal: /[\"\\[\\]]/,\n        contains: [\n          {\n            begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n            returnBegin: true,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          }\n        ]\n      },\n      {\n        begin: /[:]/,\n        returnBegin: true,\n        end: /[{;]/,\n        relevance: 0,\n        excludeEnd: false,\n        keywords: KEYWORDS,\n        illegal: /[\"\\[\\]]/,\n        contains: [\n          {\n            begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n            keywords: KEYWORDS + ' ' + SHORTKEYS,\n            relevance: 0\n          },\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      {\n        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\n        beginKeywords: 'new throw',\n        relevance: 0\n      },\n      {\n        // the function class is a bit different for AspectJ compared to the Java language\n        className: 'function',\n        begin: /\\w+ +\\w+(\\.\\w+)?\\s*\\([^\\)]*\\)\\s*((throws)[\\w\\s,]+)?[\\{;]/,\n        returnBegin: true,\n        end: /[{;=]/,\n        keywords: KEYWORDS,\n        excludeEnd: true,\n        contains: [\n          {\n            begin: concat(hljs.UNDERSCORE_IDENT_RE, /\\s*\\(/),\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            relevance: 0,\n            keywords: KEYWORDS,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        // annotation is also used in this language\n        className: 'meta',\n        begin: /@[A-Za-z]+/\n      }\n    ]\n  };\n}\n\nmodule.exports = aspectj;\n"]},"metadata":{},"sourceType":"script"}