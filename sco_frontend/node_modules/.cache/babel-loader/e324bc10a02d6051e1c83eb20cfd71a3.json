{"ast":null,"code":"/*\nLanguage: Stan\nDescription: The Stan probabilistic programming language\nAuthor: Jeffrey B. Arnold <jeffrey.arnold@gmail.com>\nWebsite: http://mc-stan.org/\nCategory: scientific\n*/\nfunction stan(hljs) {\n  // variable names cannot conflict with block identifiers\n  const BLOCKS = ['functions', 'model', 'data', 'parameters', 'quantities', 'transformed', 'generated'];\n  const STATEMENTS = ['for', 'in', 'if', 'else', 'while', 'break', 'continue', 'return'];\n  const SPECIAL_FUNCTIONS = ['print', 'reject', 'increment_log_prob|10', 'integrate_ode|10', 'integrate_ode_rk45|10', 'integrate_ode_bdf|10', 'algebra_solver'];\n  const VAR_TYPES = ['int', 'real', 'vector', 'ordered', 'positive_ordered', 'simplex', 'unit_vector', 'row_vector', 'matrix', 'cholesky_factor_corr|10', 'cholesky_factor_cov|10', 'corr_matrix|10', 'cov_matrix|10', 'void'];\n  const FUNCTIONS = ['Phi', 'Phi_approx', 'abs', 'acos', 'acosh', 'algebra_solver', 'append_array', 'append_col', 'append_row', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'bernoulli_cdf', 'bernoulli_lccdf', 'bernoulli_lcdf', 'bernoulli_logit_lpmf', 'bernoulli_logit_rng', 'bernoulli_lpmf', 'bernoulli_rng', 'bessel_first_kind', 'bessel_second_kind', 'beta_binomial_cdf', 'beta_binomial_lccdf', 'beta_binomial_lcdf', 'beta_binomial_lpmf', 'beta_binomial_rng', 'beta_cdf', 'beta_lccdf', 'beta_lcdf', 'beta_lpdf', 'beta_rng', 'binary_log_loss', 'binomial_cdf', 'binomial_coefficient_log', 'binomial_lccdf', 'binomial_lcdf', 'binomial_logit_lpmf', 'binomial_lpmf', 'binomial_rng', 'block', 'categorical_logit_lpmf', 'categorical_logit_rng', 'categorical_lpmf', 'categorical_rng', 'cauchy_cdf', 'cauchy_lccdf', 'cauchy_lcdf', 'cauchy_lpdf', 'cauchy_rng', 'cbrt', 'ceil', 'chi_square_cdf', 'chi_square_lccdf', 'chi_square_lcdf', 'chi_square_lpdf', 'chi_square_rng', 'cholesky_decompose', 'choose', 'col', 'cols', 'columns_dot_product', 'columns_dot_self', 'cos', 'cosh', 'cov_exp_quad', 'crossprod', 'csr_extract_u', 'csr_extract_v', 'csr_extract_w', 'csr_matrix_times_vector', 'csr_to_dense_matrix', 'cumulative_sum', 'determinant', 'diag_matrix', 'diag_post_multiply', 'diag_pre_multiply', 'diagonal', 'digamma', 'dims', 'dirichlet_lpdf', 'dirichlet_rng', 'distance', 'dot_product', 'dot_self', 'double_exponential_cdf', 'double_exponential_lccdf', 'double_exponential_lcdf', 'double_exponential_lpdf', 'double_exponential_rng', 'e', 'eigenvalues_sym', 'eigenvectors_sym', 'erf', 'erfc', 'exp', 'exp2', 'exp_mod_normal_cdf', 'exp_mod_normal_lccdf', 'exp_mod_normal_lcdf', 'exp_mod_normal_lpdf', 'exp_mod_normal_rng', 'expm1', 'exponential_cdf', 'exponential_lccdf', 'exponential_lcdf', 'exponential_lpdf', 'exponential_rng', 'fabs', 'falling_factorial', 'fdim', 'floor', 'fma', 'fmax', 'fmin', 'fmod', 'frechet_cdf', 'frechet_lccdf', 'frechet_lcdf', 'frechet_lpdf', 'frechet_rng', 'gamma_cdf', 'gamma_lccdf', 'gamma_lcdf', 'gamma_lpdf', 'gamma_p', 'gamma_q', 'gamma_rng', 'gaussian_dlm_obs_lpdf', 'get_lp', 'gumbel_cdf', 'gumbel_lccdf', 'gumbel_lcdf', 'gumbel_lpdf', 'gumbel_rng', 'head', 'hypergeometric_lpmf', 'hypergeometric_rng', 'hypot', 'inc_beta', 'int_step', 'integrate_ode', 'integrate_ode_bdf', 'integrate_ode_rk45', 'inv', 'inv_Phi', 'inv_chi_square_cdf', 'inv_chi_square_lccdf', 'inv_chi_square_lcdf', 'inv_chi_square_lpdf', 'inv_chi_square_rng', 'inv_cloglog', 'inv_gamma_cdf', 'inv_gamma_lccdf', 'inv_gamma_lcdf', 'inv_gamma_lpdf', 'inv_gamma_rng', 'inv_logit', 'inv_sqrt', 'inv_square', 'inv_wishart_lpdf', 'inv_wishart_rng', 'inverse', 'inverse_spd', 'is_inf', 'is_nan', 'lbeta', 'lchoose', 'lgamma', 'lkj_corr_cholesky_lpdf', 'lkj_corr_cholesky_rng', 'lkj_corr_lpdf', 'lkj_corr_rng', 'lmgamma', 'lmultiply', 'log', 'log10', 'log1m', 'log1m_exp', 'log1m_inv_logit', 'log1p', 'log1p_exp', 'log2', 'log_determinant', 'log_diff_exp', 'log_falling_factorial', 'log_inv_logit', 'log_mix', 'log_rising_factorial', 'log_softmax', 'log_sum_exp', 'logistic_cdf', 'logistic_lccdf', 'logistic_lcdf', 'logistic_lpdf', 'logistic_rng', 'logit', 'lognormal_cdf', 'lognormal_lccdf', 'lognormal_lcdf', 'lognormal_lpdf', 'lognormal_rng', 'machine_precision', 'matrix_exp', 'max', 'mdivide_left_spd', 'mdivide_left_tri_low', 'mdivide_right_spd', 'mdivide_right_tri_low', 'mean', 'min', 'modified_bessel_first_kind', 'modified_bessel_second_kind', 'multi_gp_cholesky_lpdf', 'multi_gp_lpdf', 'multi_normal_cholesky_lpdf', 'multi_normal_cholesky_rng', 'multi_normal_lpdf', 'multi_normal_prec_lpdf', 'multi_normal_rng', 'multi_student_t_lpdf', 'multi_student_t_rng', 'multinomial_lpmf', 'multinomial_rng', 'multiply_log', 'multiply_lower_tri_self_transpose', 'neg_binomial_2_cdf', 'neg_binomial_2_lccdf', 'neg_binomial_2_lcdf', 'neg_binomial_2_log_lpmf', 'neg_binomial_2_log_rng', 'neg_binomial_2_lpmf', 'neg_binomial_2_rng', 'neg_binomial_cdf', 'neg_binomial_lccdf', 'neg_binomial_lcdf', 'neg_binomial_lpmf', 'neg_binomial_rng', 'negative_infinity', 'normal_cdf', 'normal_lccdf', 'normal_lcdf', 'normal_lpdf', 'normal_rng', 'not_a_number', 'num_elements', 'ordered_logistic_lpmf', 'ordered_logistic_rng', 'owens_t', 'pareto_cdf', 'pareto_lccdf', 'pareto_lcdf', 'pareto_lpdf', 'pareto_rng', 'pareto_type_2_cdf', 'pareto_type_2_lccdf', 'pareto_type_2_lcdf', 'pareto_type_2_lpdf', 'pareto_type_2_rng', 'pi', 'poisson_cdf', 'poisson_lccdf', 'poisson_lcdf', 'poisson_log_lpmf', 'poisson_log_rng', 'poisson_lpmf', 'poisson_rng', 'positive_infinity', 'pow', 'print', 'prod', 'qr_Q', 'qr_R', 'quad_form', 'quad_form_diag', 'quad_form_sym', 'rank', 'rayleigh_cdf', 'rayleigh_lccdf', 'rayleigh_lcdf', 'rayleigh_lpdf', 'rayleigh_rng', 'reject', 'rep_array', 'rep_matrix', 'rep_row_vector', 'rep_vector', 'rising_factorial', 'round', 'row', 'rows', 'rows_dot_product', 'rows_dot_self', 'scaled_inv_chi_square_cdf', 'scaled_inv_chi_square_lccdf', 'scaled_inv_chi_square_lcdf', 'scaled_inv_chi_square_lpdf', 'scaled_inv_chi_square_rng', 'sd', 'segment', 'sin', 'singular_values', 'sinh', 'size', 'skew_normal_cdf', 'skew_normal_lccdf', 'skew_normal_lcdf', 'skew_normal_lpdf', 'skew_normal_rng', 'softmax', 'sort_asc', 'sort_desc', 'sort_indices_asc', 'sort_indices_desc', 'sqrt', 'sqrt2', 'square', 'squared_distance', 'step', 'student_t_cdf', 'student_t_lccdf', 'student_t_lcdf', 'student_t_lpdf', 'student_t_rng', 'sub_col', 'sub_row', 'sum', 'tail', 'tan', 'tanh', 'target', 'tcrossprod', 'tgamma', 'to_array_1d', 'to_array_2d', 'to_matrix', 'to_row_vector', 'to_vector', 'trace', 'trace_gen_quad_form', 'trace_quad_form', 'trigamma', 'trunc', 'uniform_cdf', 'uniform_lccdf', 'uniform_lcdf', 'uniform_lpdf', 'uniform_rng', 'variance', 'von_mises_lpdf', 'von_mises_rng', 'weibull_cdf', 'weibull_lccdf', 'weibull_lcdf', 'weibull_lpdf', 'weibull_rng', 'wiener_lpdf', 'wishart_lpdf', 'wishart_rng'];\n  const DISTRIBUTIONS = ['bernoulli', 'bernoulli_logit', 'beta', 'beta_binomial', 'binomial', 'binomial_logit', 'categorical', 'categorical_logit', 'cauchy', 'chi_square', 'dirichlet', 'double_exponential', 'exp_mod_normal', 'exponential', 'frechet', 'gamma', 'gaussian_dlm_obs', 'gumbel', 'hypergeometric', 'inv_chi_square', 'inv_gamma', 'inv_wishart', 'lkj_corr', 'lkj_corr_cholesky', 'logistic', 'lognormal', 'multi_gp', 'multi_gp_cholesky', 'multi_normal', 'multi_normal_cholesky', 'multi_normal_prec', 'multi_student_t', 'multinomial', 'neg_binomial', 'neg_binomial_2', 'neg_binomial_2_log', 'normal', 'ordered_logistic', 'pareto', 'pareto_type_2', 'poisson', 'poisson_log', 'rayleigh', 'scaled_inv_chi_square', 'skew_normal', 'student_t', 'uniform', 'von_mises', 'weibull', 'wiener', 'wishart'];\n  return {\n    name: 'Stan',\n    aliases: ['stanfuncs'],\n    keywords: {\n      $pattern: hljs.IDENT_RE,\n      title: BLOCKS,\n      keyword: STATEMENTS.concat(VAR_TYPES).concat(SPECIAL_FUNCTIONS),\n      built_in: FUNCTIONS\n    },\n    contains: [hljs.C_LINE_COMMENT_MODE, hljs.COMMENT(/#/, /$/, {\n      relevance: 0,\n      keywords: {\n        'meta-keyword': 'include'\n      }\n    }), hljs.COMMENT(/\\/\\*/, /\\*\\//, {\n      relevance: 0,\n      // highlight doc strings mentioned in Stan reference\n      contains: [{\n        className: 'doctag',\n        begin: /@(return|param)/\n      }]\n    }), {\n      // hack: in range constraints, lower must follow \"<\"\n      begin: /<\\s*lower\\s*=/,\n      keywords: 'lower'\n    }, {\n      // hack: in range constraints, upper must follow either , or <\n      // <lower = ..., upper = ...> or <upper = ...>\n      begin: /[<,]\\s*upper\\s*=/,\n      keywords: 'upper'\n    }, {\n      className: 'keyword',\n      begin: /\\btarget\\s*\\+=/,\n      relevance: 10\n    }, {\n      begin: '~\\\\s*(' + hljs.IDENT_RE + ')\\\\s*\\\\(',\n      keywords: DISTRIBUTIONS\n    }, {\n      className: 'number',\n      variants: [{\n        begin: /\\b\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/\n      }, {\n        begin: /\\.\\d+(?:[eE][+-]?\\d+)?\\b/\n      }],\n      relevance: 0\n    }, {\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      relevance: 0\n    }]\n  };\n}\n\nmodule.exports = stan;","map":{"version":3,"sources":["C:/Users/Admin/Music/MANDO/ge-sc-machine/sco_frontend/node_modules/highlight.js/lib/languages/stan.js"],"names":["stan","hljs","BLOCKS","STATEMENTS","SPECIAL_FUNCTIONS","VAR_TYPES","FUNCTIONS","DISTRIBUTIONS","name","aliases","keywords","$pattern","IDENT_RE","title","keyword","concat","built_in","contains","C_LINE_COMMENT_MODE","COMMENT","relevance","className","begin","variants","end","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Stan\nDescription: The Stan probabilistic programming language\nAuthor: Jeffrey B. Arnold <jeffrey.arnold@gmail.com>\nWebsite: http://mc-stan.org/\nCategory: scientific\n*/\n\nfunction stan(hljs) {\n  // variable names cannot conflict with block identifiers\n  const BLOCKS = [\n    'functions',\n    'model',\n    'data',\n    'parameters',\n    'quantities',\n    'transformed',\n    'generated'\n  ];\n  const STATEMENTS = [\n    'for',\n    'in',\n    'if',\n    'else',\n    'while',\n    'break',\n    'continue',\n    'return'\n  ];\n  const SPECIAL_FUNCTIONS = [\n    'print',\n    'reject',\n    'increment_log_prob|10',\n    'integrate_ode|10',\n    'integrate_ode_rk45|10',\n    'integrate_ode_bdf|10',\n    'algebra_solver'\n  ];\n  const VAR_TYPES = [\n    'int',\n    'real',\n    'vector',\n    'ordered',\n    'positive_ordered',\n    'simplex',\n    'unit_vector',\n    'row_vector',\n    'matrix',\n    'cholesky_factor_corr|10',\n    'cholesky_factor_cov|10',\n    'corr_matrix|10',\n    'cov_matrix|10',\n    'void'\n  ];\n  const FUNCTIONS = [\n    'Phi',\n    'Phi_approx',\n    'abs',\n    'acos',\n    'acosh',\n    'algebra_solver',\n    'append_array',\n    'append_col',\n    'append_row',\n    'asin',\n    'asinh',\n    'atan',\n    'atan2',\n    'atanh',\n    'bernoulli_cdf',\n    'bernoulli_lccdf',\n    'bernoulli_lcdf',\n    'bernoulli_logit_lpmf',\n    'bernoulli_logit_rng',\n    'bernoulli_lpmf',\n    'bernoulli_rng',\n    'bessel_first_kind',\n    'bessel_second_kind',\n    'beta_binomial_cdf',\n    'beta_binomial_lccdf',\n    'beta_binomial_lcdf',\n    'beta_binomial_lpmf',\n    'beta_binomial_rng',\n    'beta_cdf',\n    'beta_lccdf',\n    'beta_lcdf',\n    'beta_lpdf',\n    'beta_rng',\n    'binary_log_loss',\n    'binomial_cdf',\n    'binomial_coefficient_log',\n    'binomial_lccdf',\n    'binomial_lcdf',\n    'binomial_logit_lpmf',\n    'binomial_lpmf',\n    'binomial_rng',\n    'block',\n    'categorical_logit_lpmf',\n    'categorical_logit_rng',\n    'categorical_lpmf',\n    'categorical_rng',\n    'cauchy_cdf',\n    'cauchy_lccdf',\n    'cauchy_lcdf',\n    'cauchy_lpdf',\n    'cauchy_rng',\n    'cbrt',\n    'ceil',\n    'chi_square_cdf',\n    'chi_square_lccdf',\n    'chi_square_lcdf',\n    'chi_square_lpdf',\n    'chi_square_rng',\n    'cholesky_decompose',\n    'choose',\n    'col',\n    'cols',\n    'columns_dot_product',\n    'columns_dot_self',\n    'cos',\n    'cosh',\n    'cov_exp_quad',\n    'crossprod',\n    'csr_extract_u',\n    'csr_extract_v',\n    'csr_extract_w',\n    'csr_matrix_times_vector',\n    'csr_to_dense_matrix',\n    'cumulative_sum',\n    'determinant',\n    'diag_matrix',\n    'diag_post_multiply',\n    'diag_pre_multiply',\n    'diagonal',\n    'digamma',\n    'dims',\n    'dirichlet_lpdf',\n    'dirichlet_rng',\n    'distance',\n    'dot_product',\n    'dot_self',\n    'double_exponential_cdf',\n    'double_exponential_lccdf',\n    'double_exponential_lcdf',\n    'double_exponential_lpdf',\n    'double_exponential_rng',\n    'e',\n    'eigenvalues_sym',\n    'eigenvectors_sym',\n    'erf',\n    'erfc',\n    'exp',\n    'exp2',\n    'exp_mod_normal_cdf',\n    'exp_mod_normal_lccdf',\n    'exp_mod_normal_lcdf',\n    'exp_mod_normal_lpdf',\n    'exp_mod_normal_rng',\n    'expm1',\n    'exponential_cdf',\n    'exponential_lccdf',\n    'exponential_lcdf',\n    'exponential_lpdf',\n    'exponential_rng',\n    'fabs',\n    'falling_factorial',\n    'fdim',\n    'floor',\n    'fma',\n    'fmax',\n    'fmin',\n    'fmod',\n    'frechet_cdf',\n    'frechet_lccdf',\n    'frechet_lcdf',\n    'frechet_lpdf',\n    'frechet_rng',\n    'gamma_cdf',\n    'gamma_lccdf',\n    'gamma_lcdf',\n    'gamma_lpdf',\n    'gamma_p',\n    'gamma_q',\n    'gamma_rng',\n    'gaussian_dlm_obs_lpdf',\n    'get_lp',\n    'gumbel_cdf',\n    'gumbel_lccdf',\n    'gumbel_lcdf',\n    'gumbel_lpdf',\n    'gumbel_rng',\n    'head',\n    'hypergeometric_lpmf',\n    'hypergeometric_rng',\n    'hypot',\n    'inc_beta',\n    'int_step',\n    'integrate_ode',\n    'integrate_ode_bdf',\n    'integrate_ode_rk45',\n    'inv',\n    'inv_Phi',\n    'inv_chi_square_cdf',\n    'inv_chi_square_lccdf',\n    'inv_chi_square_lcdf',\n    'inv_chi_square_lpdf',\n    'inv_chi_square_rng',\n    'inv_cloglog',\n    'inv_gamma_cdf',\n    'inv_gamma_lccdf',\n    'inv_gamma_lcdf',\n    'inv_gamma_lpdf',\n    'inv_gamma_rng',\n    'inv_logit',\n    'inv_sqrt',\n    'inv_square',\n    'inv_wishart_lpdf',\n    'inv_wishart_rng',\n    'inverse',\n    'inverse_spd',\n    'is_inf',\n    'is_nan',\n    'lbeta',\n    'lchoose',\n    'lgamma',\n    'lkj_corr_cholesky_lpdf',\n    'lkj_corr_cholesky_rng',\n    'lkj_corr_lpdf',\n    'lkj_corr_rng',\n    'lmgamma',\n    'lmultiply',\n    'log',\n    'log10',\n    'log1m',\n    'log1m_exp',\n    'log1m_inv_logit',\n    'log1p',\n    'log1p_exp',\n    'log2',\n    'log_determinant',\n    'log_diff_exp',\n    'log_falling_factorial',\n    'log_inv_logit',\n    'log_mix',\n    'log_rising_factorial',\n    'log_softmax',\n    'log_sum_exp',\n    'logistic_cdf',\n    'logistic_lccdf',\n    'logistic_lcdf',\n    'logistic_lpdf',\n    'logistic_rng',\n    'logit',\n    'lognormal_cdf',\n    'lognormal_lccdf',\n    'lognormal_lcdf',\n    'lognormal_lpdf',\n    'lognormal_rng',\n    'machine_precision',\n    'matrix_exp',\n    'max',\n    'mdivide_left_spd',\n    'mdivide_left_tri_low',\n    'mdivide_right_spd',\n    'mdivide_right_tri_low',\n    'mean',\n    'min',\n    'modified_bessel_first_kind',\n    'modified_bessel_second_kind',\n    'multi_gp_cholesky_lpdf',\n    'multi_gp_lpdf',\n    'multi_normal_cholesky_lpdf',\n    'multi_normal_cholesky_rng',\n    'multi_normal_lpdf',\n    'multi_normal_prec_lpdf',\n    'multi_normal_rng',\n    'multi_student_t_lpdf',\n    'multi_student_t_rng',\n    'multinomial_lpmf',\n    'multinomial_rng',\n    'multiply_log',\n    'multiply_lower_tri_self_transpose',\n    'neg_binomial_2_cdf',\n    'neg_binomial_2_lccdf',\n    'neg_binomial_2_lcdf',\n    'neg_binomial_2_log_lpmf',\n    'neg_binomial_2_log_rng',\n    'neg_binomial_2_lpmf',\n    'neg_binomial_2_rng',\n    'neg_binomial_cdf',\n    'neg_binomial_lccdf',\n    'neg_binomial_lcdf',\n    'neg_binomial_lpmf',\n    'neg_binomial_rng',\n    'negative_infinity',\n    'normal_cdf',\n    'normal_lccdf',\n    'normal_lcdf',\n    'normal_lpdf',\n    'normal_rng',\n    'not_a_number',\n    'num_elements',\n    'ordered_logistic_lpmf',\n    'ordered_logistic_rng',\n    'owens_t',\n    'pareto_cdf',\n    'pareto_lccdf',\n    'pareto_lcdf',\n    'pareto_lpdf',\n    'pareto_rng',\n    'pareto_type_2_cdf',\n    'pareto_type_2_lccdf',\n    'pareto_type_2_lcdf',\n    'pareto_type_2_lpdf',\n    'pareto_type_2_rng',\n    'pi',\n    'poisson_cdf',\n    'poisson_lccdf',\n    'poisson_lcdf',\n    'poisson_log_lpmf',\n    'poisson_log_rng',\n    'poisson_lpmf',\n    'poisson_rng',\n    'positive_infinity',\n    'pow',\n    'print',\n    'prod',\n    'qr_Q',\n    'qr_R',\n    'quad_form',\n    'quad_form_diag',\n    'quad_form_sym',\n    'rank',\n    'rayleigh_cdf',\n    'rayleigh_lccdf',\n    'rayleigh_lcdf',\n    'rayleigh_lpdf',\n    'rayleigh_rng',\n    'reject',\n    'rep_array',\n    'rep_matrix',\n    'rep_row_vector',\n    'rep_vector',\n    'rising_factorial',\n    'round',\n    'row',\n    'rows',\n    'rows_dot_product',\n    'rows_dot_self',\n    'scaled_inv_chi_square_cdf',\n    'scaled_inv_chi_square_lccdf',\n    'scaled_inv_chi_square_lcdf',\n    'scaled_inv_chi_square_lpdf',\n    'scaled_inv_chi_square_rng',\n    'sd',\n    'segment',\n    'sin',\n    'singular_values',\n    'sinh',\n    'size',\n    'skew_normal_cdf',\n    'skew_normal_lccdf',\n    'skew_normal_lcdf',\n    'skew_normal_lpdf',\n    'skew_normal_rng',\n    'softmax',\n    'sort_asc',\n    'sort_desc',\n    'sort_indices_asc',\n    'sort_indices_desc',\n    'sqrt',\n    'sqrt2',\n    'square',\n    'squared_distance',\n    'step',\n    'student_t_cdf',\n    'student_t_lccdf',\n    'student_t_lcdf',\n    'student_t_lpdf',\n    'student_t_rng',\n    'sub_col',\n    'sub_row',\n    'sum',\n    'tail',\n    'tan',\n    'tanh',\n    'target',\n    'tcrossprod',\n    'tgamma',\n    'to_array_1d',\n    'to_array_2d',\n    'to_matrix',\n    'to_row_vector',\n    'to_vector',\n    'trace',\n    'trace_gen_quad_form',\n    'trace_quad_form',\n    'trigamma',\n    'trunc',\n    'uniform_cdf',\n    'uniform_lccdf',\n    'uniform_lcdf',\n    'uniform_lpdf',\n    'uniform_rng',\n    'variance',\n    'von_mises_lpdf',\n    'von_mises_rng',\n    'weibull_cdf',\n    'weibull_lccdf',\n    'weibull_lcdf',\n    'weibull_lpdf',\n    'weibull_rng',\n    'wiener_lpdf',\n    'wishart_lpdf',\n    'wishart_rng'\n  ];\n  const DISTRIBUTIONS = [\n    'bernoulli',\n    'bernoulli_logit',\n    'beta',\n    'beta_binomial',\n    'binomial',\n    'binomial_logit',\n    'categorical',\n    'categorical_logit',\n    'cauchy',\n    'chi_square',\n    'dirichlet',\n    'double_exponential',\n    'exp_mod_normal',\n    'exponential',\n    'frechet',\n    'gamma',\n    'gaussian_dlm_obs',\n    'gumbel',\n    'hypergeometric',\n    'inv_chi_square',\n    'inv_gamma',\n    'inv_wishart',\n    'lkj_corr',\n    'lkj_corr_cholesky',\n    'logistic',\n    'lognormal',\n    'multi_gp',\n    'multi_gp_cholesky',\n    'multi_normal',\n    'multi_normal_cholesky',\n    'multi_normal_prec',\n    'multi_student_t',\n    'multinomial',\n    'neg_binomial',\n    'neg_binomial_2',\n    'neg_binomial_2_log',\n    'normal',\n    'ordered_logistic',\n    'pareto',\n    'pareto_type_2',\n    'poisson',\n    'poisson_log',\n    'rayleigh',\n    'scaled_inv_chi_square',\n    'skew_normal',\n    'student_t',\n    'uniform',\n    'von_mises',\n    'weibull',\n    'wiener',\n    'wishart'\n  ];\n\n  return {\n    name: 'Stan',\n    aliases: [ 'stanfuncs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE,\n      title: BLOCKS,\n      keyword: STATEMENTS.concat(VAR_TYPES).concat(SPECIAL_FUNCTIONS),\n      built_in: FUNCTIONS\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        /#/,\n        /$/,\n        {\n          relevance: 0,\n          keywords: {\n            'meta-keyword': 'include'\n          }\n        }\n      ),\n      hljs.COMMENT(\n        /\\/\\*/,\n        /\\*\\//,\n        {\n          relevance: 0,\n          // highlight doc strings mentioned in Stan reference\n          contains: [\n            {\n              className: 'doctag',\n              begin: /@(return|param)/\n            }\n          ]\n        }\n      ),\n      {\n        // hack: in range constraints, lower must follow \"<\"\n        begin: /<\\s*lower\\s*=/,\n        keywords: 'lower'\n      },\n      {\n        // hack: in range constraints, upper must follow either , or <\n        // <lower = ..., upper = ...> or <upper = ...>\n        begin: /[<,]\\s*upper\\s*=/,\n        keywords: 'upper'\n      },\n      {\n        className: 'keyword',\n        begin: /\\btarget\\s*\\+=/,\n        relevance: 10\n      },\n      {\n        begin: '~\\\\s*(' + hljs.IDENT_RE + ')\\\\s*\\\\(',\n        keywords: DISTRIBUTIONS\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: /\\b\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/\n          },\n          {\n            begin: /\\.\\d+(?:[eE][+-]?\\d+)?\\b/\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '\"',\n        end: '\"',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = stan;\n"]},"metadata":{},"sourceType":"script"}